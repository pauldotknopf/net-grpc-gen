// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gen.proto

#include "gen.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_types_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TestMessageRequest_types_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_types_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TestMessageResponse_types_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto;
namespace Tests {
class Test1ListenEventStreamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1ListenEventStream> _instance;
} _Test1ListenEventStream_default_instance_;
class Test1CreateRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1CreateRequest> _instance;
} _Test1CreateRequest_default_instance_;
class Test1CreateResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1CreateResponse> _instance;
} _Test1CreateResponse_default_instance_;
class Test1PropStringSetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1PropStringSetRequest> _instance;
} _Test1PropStringSetRequest_default_instance_;
class Test1PropStringSetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1PropStringSetResponse> _instance;
} _Test1PropStringSetResponse_default_instance_;
class Test1PropStringGetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1PropStringGetRequest> _instance;
} _Test1PropStringGetRequest_default_instance_;
class Test1PropStringGetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1PropStringGetResponse> _instance;
} _Test1PropStringGetResponse_default_instance_;
class Test1PropStringPropertyChangedDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1PropStringPropertyChanged> _instance;
} _Test1PropStringPropertyChanged_default_instance_;
class Test1PropComplexSetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1PropComplexSetRequest> _instance;
} _Test1PropComplexSetRequest_default_instance_;
class Test1PropComplexSetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1PropComplexSetResponse> _instance;
} _Test1PropComplexSetResponse_default_instance_;
class Test1PropComplexGetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1PropComplexGetRequest> _instance;
} _Test1PropComplexGetRequest_default_instance_;
class Test1PropComplexGetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1PropComplexGetResponse> _instance;
} _Test1PropComplexGetResponse_default_instance_;
class Test1PropComplexPropertyChangedDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1PropComplexPropertyChanged> _instance;
} _Test1PropComplexPropertyChanged_default_instance_;
class Test1TestEventEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestEventEvent> _instance;
} _Test1TestEventEvent_default_instance_;
class Test1TestEventComplexEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestEventComplexEvent> _instance;
} _Test1TestEventComplexEvent_default_instance_;
class Test1TestEventNoDataEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestEventNoDataEvent> _instance;
} _Test1TestEventNoDataEvent_default_instance_;
class Test1TestMethodMethodRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestMethodMethodRequest> _instance;
} _Test1TestMethodMethodRequest_default_instance_;
class Test1TestMethodMethodResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestMethodMethodResponse> _instance;
} _Test1TestMethodMethodResponse_default_instance_;
class Test1TestMethodSyncMethodRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestMethodSyncMethodRequest> _instance;
} _Test1TestMethodSyncMethodRequest_default_instance_;
class Test1TestMethodSyncMethodResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestMethodSyncMethodResponse> _instance;
} _Test1TestMethodSyncMethodResponse_default_instance_;
class Test1TestMethodWithNoResponseMethodRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestMethodWithNoResponseMethodRequest> _instance;
} _Test1TestMethodWithNoResponseMethodRequest_default_instance_;
class Test1TestMethodWithNoResponseMethodResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestMethodWithNoResponseMethodResponse> _instance;
} _Test1TestMethodWithNoResponseMethodResponse_default_instance_;
class Test1TestMethodPrimitiveMethodRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestMethodPrimitiveMethodRequest> _instance;
} _Test1TestMethodPrimitiveMethodRequest_default_instance_;
class Test1TestMethodPrimitiveMethodResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestMethodPrimitiveMethodResponse> _instance;
} _Test1TestMethodPrimitiveMethodResponse_default_instance_;
class Test1TestMethodNoRequestOrResponseMethodRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestMethodNoRequestOrResponseMethodRequest> _instance;
} _Test1TestMethodNoRequestOrResponseMethodRequest_default_instance_;
class Test1TestMethodNoRequestOrResponseMethodResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestMethodNoRequestOrResponseMethodResponse> _instance;
} _Test1TestMethodNoRequestOrResponseMethodResponse_default_instance_;
class Test1TestMethodNoRequestMethodRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestMethodNoRequestMethodRequest> _instance;
} _Test1TestMethodNoRequestMethodRequest_default_instance_;
class Test1TestMethodNoRequestMethodResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestMethodNoRequestMethodResponse> _instance;
} _Test1TestMethodNoRequestMethodResponse_default_instance_;
class Test1TestMethodNoResponseMethodRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestMethodNoResponseMethodRequest> _instance;
} _Test1TestMethodNoResponseMethodRequest_default_instance_;
class Test1TestMethodNoResponseMethodResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestMethodNoResponseMethodResponse> _instance;
} _Test1TestMethodNoResponseMethodResponse_default_instance_;
class Test2ListenEventStreamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test2ListenEventStream> _instance;
} _Test2ListenEventStream_default_instance_;
class Test2CreateRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test2CreateRequest> _instance;
} _Test2CreateRequest_default_instance_;
class Test2CreateResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test2CreateResponse> _instance;
} _Test2CreateResponse_default_instance_;
class Test2PropString2SetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test2PropString2SetRequest> _instance;
} _Test2PropString2SetRequest_default_instance_;
class Test2PropString2SetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test2PropString2SetResponse> _instance;
} _Test2PropString2SetResponse_default_instance_;
class Test2PropString2GetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test2PropString2GetRequest> _instance;
} _Test2PropString2GetRequest_default_instance_;
class Test2PropString2GetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test2PropString2GetResponse> _instance;
} _Test2PropString2GetResponse_default_instance_;
class Test2PropString2PropertyChangedDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test2PropString2PropertyChanged> _instance;
} _Test2PropString2PropertyChanged_default_instance_;
class Test2PropComplex2SetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test2PropComplex2SetRequest> _instance;
} _Test2PropComplex2SetRequest_default_instance_;
class Test2PropComplex2SetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test2PropComplex2SetResponse> _instance;
} _Test2PropComplex2SetResponse_default_instance_;
class Test2PropComplex2GetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test2PropComplex2GetRequest> _instance;
} _Test2PropComplex2GetRequest_default_instance_;
class Test2PropComplex2GetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test2PropComplex2GetResponse> _instance;
} _Test2PropComplex2GetResponse_default_instance_;
class Test2PropComplex2PropertyChangedDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test2PropComplex2PropertyChanged> _instance;
} _Test2PropComplex2PropertyChanged_default_instance_;
class Test2TestEvent2EventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test2TestEvent2Event> _instance;
} _Test2TestEvent2Event_default_instance_;
class Test2TestEventComplex2EventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test2TestEventComplex2Event> _instance;
} _Test2TestEventComplex2Event_default_instance_;
class Test2TestEventNoData2EventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test2TestEventNoData2Event> _instance;
} _Test2TestEventNoData2Event_default_instance_;
class Test2TestMethod2MethodRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test2TestMethod2MethodRequest> _instance;
} _Test2TestMethod2MethodRequest_default_instance_;
class Test2TestMethod2MethodResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test2TestMethod2MethodResponse> _instance;
} _Test2TestMethod2MethodResponse_default_instance_;
class Test2TestMethodSync2MethodRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test2TestMethodSync2MethodRequest> _instance;
} _Test2TestMethodSync2MethodRequest_default_instance_;
class Test2TestMethodSync2MethodResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test2TestMethodSync2MethodResponse> _instance;
} _Test2TestMethodSync2MethodResponse_default_instance_;
class Test2TestMethodWithNoResponse2MethodRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test2TestMethodWithNoResponse2MethodRequest> _instance;
} _Test2TestMethodWithNoResponse2MethodRequest_default_instance_;
class Test2TestMethodWithNoResponse2MethodResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test2TestMethodWithNoResponse2MethodResponse> _instance;
} _Test2TestMethodWithNoResponse2MethodResponse_default_instance_;
class Test2TestMethodNoRequest2MethodRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test2TestMethodNoRequest2MethodRequest> _instance;
} _Test2TestMethodNoRequest2MethodRequest_default_instance_;
class Test2TestMethodNoRequest2MethodResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test2TestMethodNoRequest2MethodResponse> _instance;
} _Test2TestMethodNoRequest2MethodResponse_default_instance_;
class TestTypesListenEventStreamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestTypesListenEventStream> _instance;
} _TestTypesListenEventStream_default_instance_;
class TestTypesCreateRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestTypesCreateRequest> _instance;
} _TestTypesCreateRequest_default_instance_;
class TestTypesCreateResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestTypesCreateResponse> _instance;
} _TestTypesCreateResponse_default_instance_;
class TestTypesTestEventEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestTypesTestEventEvent> _instance;
} _TestTypesTestEventEvent_default_instance_;
class TestTypesTestParamDoubleMethodRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestTypesTestParamDoubleMethodRequest> _instance;
} _TestTypesTestParamDoubleMethodRequest_default_instance_;
class TestTypesTestParamDoubleMethodResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestTypesTestParamDoubleMethodResponse> _instance;
} _TestTypesTestParamDoubleMethodResponse_default_instance_;
class TestTypesTestParamFloatMethodRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestTypesTestParamFloatMethodRequest> _instance;
} _TestTypesTestParamFloatMethodRequest_default_instance_;
class TestTypesTestParamFloatMethodResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestTypesTestParamFloatMethodResponse> _instance;
} _TestTypesTestParamFloatMethodResponse_default_instance_;
class TestTypesTestParamIntMethodRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestTypesTestParamIntMethodRequest> _instance;
} _TestTypesTestParamIntMethodRequest_default_instance_;
class TestTypesTestParamIntMethodResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestTypesTestParamIntMethodResponse> _instance;
} _TestTypesTestParamIntMethodResponse_default_instance_;
class TestTypesTestParamUIntMethodRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestTypesTestParamUIntMethodRequest> _instance;
} _TestTypesTestParamUIntMethodRequest_default_instance_;
class TestTypesTestParamUIntMethodResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestTypesTestParamUIntMethodResponse> _instance;
} _TestTypesTestParamUIntMethodResponse_default_instance_;
class TestTypesTestParamLongMethodRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestTypesTestParamLongMethodRequest> _instance;
} _TestTypesTestParamLongMethodRequest_default_instance_;
class TestTypesTestParamLongMethodResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestTypesTestParamLongMethodResponse> _instance;
} _TestTypesTestParamLongMethodResponse_default_instance_;
class TestTypesTestParamULongMethodRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestTypesTestParamULongMethodRequest> _instance;
} _TestTypesTestParamULongMethodRequest_default_instance_;
class TestTypesTestParamULongMethodResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestTypesTestParamULongMethodResponse> _instance;
} _TestTypesTestParamULongMethodResponse_default_instance_;
class TestTypesTestParamBoolMethodRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestTypesTestParamBoolMethodRequest> _instance;
} _TestTypesTestParamBoolMethodRequest_default_instance_;
class TestTypesTestParamBoolMethodResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestTypesTestParamBoolMethodResponse> _instance;
} _TestTypesTestParamBoolMethodResponse_default_instance_;
class TestTypesTestParamStringMethodRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestTypesTestParamStringMethodRequest> _instance;
} _TestTypesTestParamStringMethodRequest_default_instance_;
class TestTypesTestParamStringMethodResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestTypesTestParamStringMethodResponse> _instance;
} _TestTypesTestParamStringMethodResponse_default_instance_;
class TestTypesTestParamByteMethodRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestTypesTestParamByteMethodRequest> _instance;
} _TestTypesTestParamByteMethodRequest_default_instance_;
class TestTypesTestParamByteMethodResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestTypesTestParamByteMethodResponse> _instance;
} _TestTypesTestParamByteMethodResponse_default_instance_;
class TestTypesTestParamBytesMethodRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestTypesTestParamBytesMethodRequest> _instance;
} _TestTypesTestParamBytesMethodRequest_default_instance_;
class TestTypesTestParamBytesMethodResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestTypesTestParamBytesMethodResponse> _instance;
} _TestTypesTestParamBytesMethodResponse_default_instance_;
}  // namespace Tests
static void InitDefaultsscc_info_Test1CreateRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1CreateRequest_default_instance_;
    new (ptr) ::Tests::Test1CreateRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1CreateRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1CreateRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1CreateRequest_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test1CreateResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1CreateResponse_default_instance_;
    new (ptr) ::Tests::Test1CreateResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1CreateResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1CreateResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1CreateResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test1ListenEventStream_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1ListenEventStream_default_instance_;
    new (ptr) ::Tests::Test1ListenEventStream();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1ListenEventStream::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1ListenEventStream_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1ListenEventStream_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test1PropComplexGetRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1PropComplexGetRequest_default_instance_;
    new (ptr) ::Tests::Test1PropComplexGetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1PropComplexGetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1PropComplexGetRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1PropComplexGetRequest_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test1PropComplexGetResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1PropComplexGetResponse_default_instance_;
    new (ptr) ::Tests::Test1PropComplexGetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1PropComplexGetResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test1PropComplexGetResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test1PropComplexGetResponse_gen_2eproto}, {
      &scc_info_TestMessageResponse_types_2eproto.base,}};

static void InitDefaultsscc_info_Test1PropComplexPropertyChanged_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1PropComplexPropertyChanged_default_instance_;
    new (ptr) ::Tests::Test1PropComplexPropertyChanged();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1PropComplexPropertyChanged::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test1PropComplexPropertyChanged_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test1PropComplexPropertyChanged_gen_2eproto}, {
      &scc_info_TestMessageResponse_types_2eproto.base,}};

static void InitDefaultsscc_info_Test1PropComplexSetRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1PropComplexSetRequest_default_instance_;
    new (ptr) ::Tests::Test1PropComplexSetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1PropComplexSetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test1PropComplexSetRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test1PropComplexSetRequest_gen_2eproto}, {
      &scc_info_TestMessageResponse_types_2eproto.base,}};

static void InitDefaultsscc_info_Test1PropComplexSetResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1PropComplexSetResponse_default_instance_;
    new (ptr) ::Tests::Test1PropComplexSetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1PropComplexSetResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1PropComplexSetResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1PropComplexSetResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test1PropStringGetRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1PropStringGetRequest_default_instance_;
    new (ptr) ::Tests::Test1PropStringGetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1PropStringGetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1PropStringGetRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1PropStringGetRequest_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test1PropStringGetResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1PropStringGetResponse_default_instance_;
    new (ptr) ::Tests::Test1PropStringGetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1PropStringGetResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test1PropStringGetResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test1PropStringGetResponse_gen_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_Test1PropStringPropertyChanged_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1PropStringPropertyChanged_default_instance_;
    new (ptr) ::Tests::Test1PropStringPropertyChanged();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1PropStringPropertyChanged::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test1PropStringPropertyChanged_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test1PropStringPropertyChanged_gen_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_Test1PropStringSetRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1PropStringSetRequest_default_instance_;
    new (ptr) ::Tests::Test1PropStringSetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1PropStringSetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test1PropStringSetRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test1PropStringSetRequest_gen_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_Test1PropStringSetResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1PropStringSetResponse_default_instance_;
    new (ptr) ::Tests::Test1PropStringSetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1PropStringSetResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1PropStringSetResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1PropStringSetResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test1TestEventComplexEvent_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestEventComplexEvent_default_instance_;
    new (ptr) ::Tests::Test1TestEventComplexEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestEventComplexEvent::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test1TestEventComplexEvent_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test1TestEventComplexEvent_gen_2eproto}, {
      &scc_info_TestMessageResponse_types_2eproto.base,}};

static void InitDefaultsscc_info_Test1TestEventEvent_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestEventEvent_default_instance_;
    new (ptr) ::Tests::Test1TestEventEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestEventEvent::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test1TestEventEvent_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test1TestEventEvent_gen_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_Test1TestEventNoDataEvent_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestEventNoDataEvent_default_instance_;
    new (ptr) ::Tests::Test1TestEventNoDataEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestEventNoDataEvent::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1TestEventNoDataEvent_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1TestEventNoDataEvent_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test1TestMethodMethodRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestMethodMethodRequest_default_instance_;
    new (ptr) ::Tests::Test1TestMethodMethodRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestMethodMethodRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test1TestMethodMethodRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test1TestMethodMethodRequest_gen_2eproto}, {
      &scc_info_TestMessageRequest_types_2eproto.base,}};

static void InitDefaultsscc_info_Test1TestMethodMethodResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestMethodMethodResponse_default_instance_;
    new (ptr) ::Tests::Test1TestMethodMethodResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestMethodMethodResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test1TestMethodMethodResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test1TestMethodMethodResponse_gen_2eproto}, {
      &scc_info_TestMessageResponse_types_2eproto.base,}};

static void InitDefaultsscc_info_Test1TestMethodNoRequestMethodRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestMethodNoRequestMethodRequest_default_instance_;
    new (ptr) ::Tests::Test1TestMethodNoRequestMethodRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestMethodNoRequestMethodRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1TestMethodNoRequestMethodRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1TestMethodNoRequestMethodRequest_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test1TestMethodNoRequestMethodResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestMethodNoRequestMethodResponse_default_instance_;
    new (ptr) ::Tests::Test1TestMethodNoRequestMethodResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestMethodNoRequestMethodResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1TestMethodNoRequestMethodResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1TestMethodNoRequestMethodResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test1TestMethodNoRequestOrResponseMethodRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestMethodNoRequestOrResponseMethodRequest_default_instance_;
    new (ptr) ::Tests::Test1TestMethodNoRequestOrResponseMethodRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestMethodNoRequestOrResponseMethodRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1TestMethodNoRequestOrResponseMethodRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1TestMethodNoRequestOrResponseMethodRequest_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test1TestMethodNoRequestOrResponseMethodResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestMethodNoRequestOrResponseMethodResponse_default_instance_;
    new (ptr) ::Tests::Test1TestMethodNoRequestOrResponseMethodResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestMethodNoRequestOrResponseMethodResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1TestMethodNoRequestOrResponseMethodResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1TestMethodNoRequestOrResponseMethodResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test1TestMethodNoResponseMethodRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestMethodNoResponseMethodRequest_default_instance_;
    new (ptr) ::Tests::Test1TestMethodNoResponseMethodRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestMethodNoResponseMethodRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1TestMethodNoResponseMethodRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1TestMethodNoResponseMethodRequest_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test1TestMethodNoResponseMethodResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestMethodNoResponseMethodResponse_default_instance_;
    new (ptr) ::Tests::Test1TestMethodNoResponseMethodResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestMethodNoResponseMethodResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1TestMethodNoResponseMethodResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1TestMethodNoResponseMethodResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test1TestMethodPrimitiveMethodRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestMethodPrimitiveMethodRequest_default_instance_;
    new (ptr) ::Tests::Test1TestMethodPrimitiveMethodRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestMethodPrimitiveMethodRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1TestMethodPrimitiveMethodRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1TestMethodPrimitiveMethodRequest_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test1TestMethodPrimitiveMethodResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestMethodPrimitiveMethodResponse_default_instance_;
    new (ptr) ::Tests::Test1TestMethodPrimitiveMethodResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestMethodPrimitiveMethodResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1TestMethodPrimitiveMethodResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1TestMethodPrimitiveMethodResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test1TestMethodSyncMethodRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestMethodSyncMethodRequest_default_instance_;
    new (ptr) ::Tests::Test1TestMethodSyncMethodRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestMethodSyncMethodRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test1TestMethodSyncMethodRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test1TestMethodSyncMethodRequest_gen_2eproto}, {
      &scc_info_TestMessageRequest_types_2eproto.base,}};

static void InitDefaultsscc_info_Test1TestMethodSyncMethodResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestMethodSyncMethodResponse_default_instance_;
    new (ptr) ::Tests::Test1TestMethodSyncMethodResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestMethodSyncMethodResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test1TestMethodSyncMethodResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test1TestMethodSyncMethodResponse_gen_2eproto}, {
      &scc_info_TestMessageResponse_types_2eproto.base,}};

static void InitDefaultsscc_info_Test1TestMethodWithNoResponseMethodRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestMethodWithNoResponseMethodRequest_default_instance_;
    new (ptr) ::Tests::Test1TestMethodWithNoResponseMethodRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestMethodWithNoResponseMethodRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test1TestMethodWithNoResponseMethodRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test1TestMethodWithNoResponseMethodRequest_gen_2eproto}, {
      &scc_info_TestMessageRequest_types_2eproto.base,}};

static void InitDefaultsscc_info_Test1TestMethodWithNoResponseMethodResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestMethodWithNoResponseMethodResponse_default_instance_;
    new (ptr) ::Tests::Test1TestMethodWithNoResponseMethodResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestMethodWithNoResponseMethodResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1TestMethodWithNoResponseMethodResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1TestMethodWithNoResponseMethodResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test2CreateRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test2CreateRequest_default_instance_;
    new (ptr) ::Tests::Test2CreateRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test2CreateRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test2CreateRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test2CreateRequest_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test2CreateResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test2CreateResponse_default_instance_;
    new (ptr) ::Tests::Test2CreateResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test2CreateResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test2CreateResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test2CreateResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test2ListenEventStream_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test2ListenEventStream_default_instance_;
    new (ptr) ::Tests::Test2ListenEventStream();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test2ListenEventStream::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test2ListenEventStream_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test2ListenEventStream_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test2PropComplex2GetRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test2PropComplex2GetRequest_default_instance_;
    new (ptr) ::Tests::Test2PropComplex2GetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test2PropComplex2GetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test2PropComplex2GetRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test2PropComplex2GetRequest_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test2PropComplex2GetResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test2PropComplex2GetResponse_default_instance_;
    new (ptr) ::Tests::Test2PropComplex2GetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test2PropComplex2GetResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test2PropComplex2GetResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test2PropComplex2GetResponse_gen_2eproto}, {
      &scc_info_TestMessageResponse_types_2eproto.base,}};

static void InitDefaultsscc_info_Test2PropComplex2PropertyChanged_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test2PropComplex2PropertyChanged_default_instance_;
    new (ptr) ::Tests::Test2PropComplex2PropertyChanged();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test2PropComplex2PropertyChanged::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test2PropComplex2PropertyChanged_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test2PropComplex2PropertyChanged_gen_2eproto}, {
      &scc_info_TestMessageResponse_types_2eproto.base,}};

static void InitDefaultsscc_info_Test2PropComplex2SetRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test2PropComplex2SetRequest_default_instance_;
    new (ptr) ::Tests::Test2PropComplex2SetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test2PropComplex2SetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test2PropComplex2SetRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test2PropComplex2SetRequest_gen_2eproto}, {
      &scc_info_TestMessageResponse_types_2eproto.base,}};

static void InitDefaultsscc_info_Test2PropComplex2SetResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test2PropComplex2SetResponse_default_instance_;
    new (ptr) ::Tests::Test2PropComplex2SetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test2PropComplex2SetResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test2PropComplex2SetResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test2PropComplex2SetResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test2PropString2GetRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test2PropString2GetRequest_default_instance_;
    new (ptr) ::Tests::Test2PropString2GetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test2PropString2GetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test2PropString2GetRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test2PropString2GetRequest_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test2PropString2GetResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test2PropString2GetResponse_default_instance_;
    new (ptr) ::Tests::Test2PropString2GetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test2PropString2GetResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test2PropString2GetResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test2PropString2GetResponse_gen_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_Test2PropString2PropertyChanged_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test2PropString2PropertyChanged_default_instance_;
    new (ptr) ::Tests::Test2PropString2PropertyChanged();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test2PropString2PropertyChanged::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test2PropString2PropertyChanged_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test2PropString2PropertyChanged_gen_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_Test2PropString2SetRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test2PropString2SetRequest_default_instance_;
    new (ptr) ::Tests::Test2PropString2SetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test2PropString2SetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test2PropString2SetRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test2PropString2SetRequest_gen_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_Test2PropString2SetResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test2PropString2SetResponse_default_instance_;
    new (ptr) ::Tests::Test2PropString2SetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test2PropString2SetResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test2PropString2SetResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test2PropString2SetResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test2TestEvent2Event_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test2TestEvent2Event_default_instance_;
    new (ptr) ::Tests::Test2TestEvent2Event();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test2TestEvent2Event::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test2TestEvent2Event_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test2TestEvent2Event_gen_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_Test2TestEventComplex2Event_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test2TestEventComplex2Event_default_instance_;
    new (ptr) ::Tests::Test2TestEventComplex2Event();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test2TestEventComplex2Event::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test2TestEventComplex2Event_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test2TestEventComplex2Event_gen_2eproto}, {
      &scc_info_TestMessageResponse_types_2eproto.base,}};

static void InitDefaultsscc_info_Test2TestEventNoData2Event_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test2TestEventNoData2Event_default_instance_;
    new (ptr) ::Tests::Test2TestEventNoData2Event();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test2TestEventNoData2Event::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test2TestEventNoData2Event_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test2TestEventNoData2Event_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test2TestMethod2MethodRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test2TestMethod2MethodRequest_default_instance_;
    new (ptr) ::Tests::Test2TestMethod2MethodRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test2TestMethod2MethodRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test2TestMethod2MethodRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test2TestMethod2MethodRequest_gen_2eproto}, {
      &scc_info_TestMessageRequest_types_2eproto.base,}};

static void InitDefaultsscc_info_Test2TestMethod2MethodResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test2TestMethod2MethodResponse_default_instance_;
    new (ptr) ::Tests::Test2TestMethod2MethodResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test2TestMethod2MethodResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test2TestMethod2MethodResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test2TestMethod2MethodResponse_gen_2eproto}, {
      &scc_info_TestMessageResponse_types_2eproto.base,}};

static void InitDefaultsscc_info_Test2TestMethodNoRequest2MethodRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test2TestMethodNoRequest2MethodRequest_default_instance_;
    new (ptr) ::Tests::Test2TestMethodNoRequest2MethodRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test2TestMethodNoRequest2MethodRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test2TestMethodNoRequest2MethodRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test2TestMethodNoRequest2MethodRequest_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test2TestMethodNoRequest2MethodResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test2TestMethodNoRequest2MethodResponse_default_instance_;
    new (ptr) ::Tests::Test2TestMethodNoRequest2MethodResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test2TestMethodNoRequest2MethodResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test2TestMethodNoRequest2MethodResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test2TestMethodNoRequest2MethodResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test2TestMethodSync2MethodRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test2TestMethodSync2MethodRequest_default_instance_;
    new (ptr) ::Tests::Test2TestMethodSync2MethodRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test2TestMethodSync2MethodRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test2TestMethodSync2MethodRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test2TestMethodSync2MethodRequest_gen_2eproto}, {
      &scc_info_TestMessageRequest_types_2eproto.base,}};

static void InitDefaultsscc_info_Test2TestMethodSync2MethodResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test2TestMethodSync2MethodResponse_default_instance_;
    new (ptr) ::Tests::Test2TestMethodSync2MethodResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test2TestMethodSync2MethodResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test2TestMethodSync2MethodResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test2TestMethodSync2MethodResponse_gen_2eproto}, {
      &scc_info_TestMessageResponse_types_2eproto.base,}};

static void InitDefaultsscc_info_Test2TestMethodWithNoResponse2MethodRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test2TestMethodWithNoResponse2MethodRequest_default_instance_;
    new (ptr) ::Tests::Test2TestMethodWithNoResponse2MethodRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test2TestMethodWithNoResponse2MethodRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test2TestMethodWithNoResponse2MethodRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test2TestMethodWithNoResponse2MethodRequest_gen_2eproto}, {
      &scc_info_TestMessageRequest_types_2eproto.base,}};

static void InitDefaultsscc_info_Test2TestMethodWithNoResponse2MethodResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test2TestMethodWithNoResponse2MethodResponse_default_instance_;
    new (ptr) ::Tests::Test2TestMethodWithNoResponse2MethodResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test2TestMethodWithNoResponse2MethodResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test2TestMethodWithNoResponse2MethodResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test2TestMethodWithNoResponse2MethodResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_TestTypesCreateRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_TestTypesCreateRequest_default_instance_;
    new (ptr) ::Tests::TestTypesCreateRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::TestTypesCreateRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestTypesCreateRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TestTypesCreateRequest_gen_2eproto}, {}};

static void InitDefaultsscc_info_TestTypesCreateResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_TestTypesCreateResponse_default_instance_;
    new (ptr) ::Tests::TestTypesCreateResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::TestTypesCreateResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestTypesCreateResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TestTypesCreateResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_TestTypesListenEventStream_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_TestTypesListenEventStream_default_instance_;
    new (ptr) ::Tests::TestTypesListenEventStream();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::TestTypesListenEventStream::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestTypesListenEventStream_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TestTypesListenEventStream_gen_2eproto}, {}};

static void InitDefaultsscc_info_TestTypesTestEventEvent_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_TestTypesTestEventEvent_default_instance_;
    new (ptr) ::Tests::TestTypesTestEventEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::TestTypesTestEventEvent::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TestTypesTestEventEvent_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TestTypesTestEventEvent_gen_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_TestTypesTestParamBoolMethodRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_TestTypesTestParamBoolMethodRequest_default_instance_;
    new (ptr) ::Tests::TestTypesTestParamBoolMethodRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::TestTypesTestParamBoolMethodRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestTypesTestParamBoolMethodRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TestTypesTestParamBoolMethodRequest_gen_2eproto}, {}};

static void InitDefaultsscc_info_TestTypesTestParamBoolMethodResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_TestTypesTestParamBoolMethodResponse_default_instance_;
    new (ptr) ::Tests::TestTypesTestParamBoolMethodResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::TestTypesTestParamBoolMethodResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestTypesTestParamBoolMethodResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TestTypesTestParamBoolMethodResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_TestTypesTestParamByteMethodRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_TestTypesTestParamByteMethodRequest_default_instance_;
    new (ptr) ::Tests::TestTypesTestParamByteMethodRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::TestTypesTestParamByteMethodRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestTypesTestParamByteMethodRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TestTypesTestParamByteMethodRequest_gen_2eproto}, {}};

static void InitDefaultsscc_info_TestTypesTestParamByteMethodResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_TestTypesTestParamByteMethodResponse_default_instance_;
    new (ptr) ::Tests::TestTypesTestParamByteMethodResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::TestTypesTestParamByteMethodResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestTypesTestParamByteMethodResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TestTypesTestParamByteMethodResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_TestTypesTestParamBytesMethodRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_TestTypesTestParamBytesMethodRequest_default_instance_;
    new (ptr) ::Tests::TestTypesTestParamBytesMethodRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::TestTypesTestParamBytesMethodRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestTypesTestParamBytesMethodRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TestTypesTestParamBytesMethodRequest_gen_2eproto}, {}};

static void InitDefaultsscc_info_TestTypesTestParamBytesMethodResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_TestTypesTestParamBytesMethodResponse_default_instance_;
    new (ptr) ::Tests::TestTypesTestParamBytesMethodResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::TestTypesTestParamBytesMethodResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestTypesTestParamBytesMethodResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TestTypesTestParamBytesMethodResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_TestTypesTestParamDoubleMethodRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_TestTypesTestParamDoubleMethodRequest_default_instance_;
    new (ptr) ::Tests::TestTypesTestParamDoubleMethodRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::TestTypesTestParamDoubleMethodRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestTypesTestParamDoubleMethodRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TestTypesTestParamDoubleMethodRequest_gen_2eproto}, {}};

static void InitDefaultsscc_info_TestTypesTestParamDoubleMethodResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_TestTypesTestParamDoubleMethodResponse_default_instance_;
    new (ptr) ::Tests::TestTypesTestParamDoubleMethodResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::TestTypesTestParamDoubleMethodResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestTypesTestParamDoubleMethodResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TestTypesTestParamDoubleMethodResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_TestTypesTestParamFloatMethodRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_TestTypesTestParamFloatMethodRequest_default_instance_;
    new (ptr) ::Tests::TestTypesTestParamFloatMethodRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::TestTypesTestParamFloatMethodRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestTypesTestParamFloatMethodRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TestTypesTestParamFloatMethodRequest_gen_2eproto}, {}};

static void InitDefaultsscc_info_TestTypesTestParamFloatMethodResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_TestTypesTestParamFloatMethodResponse_default_instance_;
    new (ptr) ::Tests::TestTypesTestParamFloatMethodResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::TestTypesTestParamFloatMethodResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestTypesTestParamFloatMethodResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TestTypesTestParamFloatMethodResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_TestTypesTestParamIntMethodRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_TestTypesTestParamIntMethodRequest_default_instance_;
    new (ptr) ::Tests::TestTypesTestParamIntMethodRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::TestTypesTestParamIntMethodRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestTypesTestParamIntMethodRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TestTypesTestParamIntMethodRequest_gen_2eproto}, {}};

static void InitDefaultsscc_info_TestTypesTestParamIntMethodResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_TestTypesTestParamIntMethodResponse_default_instance_;
    new (ptr) ::Tests::TestTypesTestParamIntMethodResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::TestTypesTestParamIntMethodResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestTypesTestParamIntMethodResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TestTypesTestParamIntMethodResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_TestTypesTestParamLongMethodRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_TestTypesTestParamLongMethodRequest_default_instance_;
    new (ptr) ::Tests::TestTypesTestParamLongMethodRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::TestTypesTestParamLongMethodRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestTypesTestParamLongMethodRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TestTypesTestParamLongMethodRequest_gen_2eproto}, {}};

static void InitDefaultsscc_info_TestTypesTestParamLongMethodResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_TestTypesTestParamLongMethodResponse_default_instance_;
    new (ptr) ::Tests::TestTypesTestParamLongMethodResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::TestTypesTestParamLongMethodResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestTypesTestParamLongMethodResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TestTypesTestParamLongMethodResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_TestTypesTestParamStringMethodRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_TestTypesTestParamStringMethodRequest_default_instance_;
    new (ptr) ::Tests::TestTypesTestParamStringMethodRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::TestTypesTestParamStringMethodRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TestTypesTestParamStringMethodRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TestTypesTestParamStringMethodRequest_gen_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_TestTypesTestParamStringMethodResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_TestTypesTestParamStringMethodResponse_default_instance_;
    new (ptr) ::Tests::TestTypesTestParamStringMethodResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::TestTypesTestParamStringMethodResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestTypesTestParamStringMethodResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TestTypesTestParamStringMethodResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_TestTypesTestParamUIntMethodRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_TestTypesTestParamUIntMethodRequest_default_instance_;
    new (ptr) ::Tests::TestTypesTestParamUIntMethodRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::TestTypesTestParamUIntMethodRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestTypesTestParamUIntMethodRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TestTypesTestParamUIntMethodRequest_gen_2eproto}, {}};

static void InitDefaultsscc_info_TestTypesTestParamUIntMethodResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_TestTypesTestParamUIntMethodResponse_default_instance_;
    new (ptr) ::Tests::TestTypesTestParamUIntMethodResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::TestTypesTestParamUIntMethodResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestTypesTestParamUIntMethodResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TestTypesTestParamUIntMethodResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_TestTypesTestParamULongMethodRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_TestTypesTestParamULongMethodRequest_default_instance_;
    new (ptr) ::Tests::TestTypesTestParamULongMethodRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::TestTypesTestParamULongMethodRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestTypesTestParamULongMethodRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TestTypesTestParamULongMethodRequest_gen_2eproto}, {}};

static void InitDefaultsscc_info_TestTypesTestParamULongMethodResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_TestTypesTestParamULongMethodResponse_default_instance_;
    new (ptr) ::Tests::TestTypesTestParamULongMethodResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::TestTypesTestParamULongMethodResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestTypesTestParamULongMethodResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TestTypesTestParamULongMethodResponse_gen_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_gen_2eproto[78];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_gen_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_gen_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_gen_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1ListenEventStream, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1ListenEventStream, objectid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1CreateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1CreateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1CreateResponse, objectid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropStringSetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropStringSetRequest, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropStringSetRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropStringSetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropStringGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropStringGetRequest, objectid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropStringGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropStringGetResponse, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropStringPropertyChanged, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropStringPropertyChanged, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropStringPropertyChanged, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropComplexSetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropComplexSetRequest, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropComplexSetRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropComplexSetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropComplexGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropComplexGetRequest, objectid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropComplexGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropComplexGetResponse, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropComplexPropertyChanged, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropComplexPropertyChanged, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropComplexPropertyChanged, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestEventEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestEventEvent, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestEventEvent, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestEventComplexEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestEventComplexEvent, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestEventComplexEvent, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestEventNoDataEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestEventNoDataEvent, objectid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodMethodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodMethodRequest, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodMethodRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodMethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodMethodResponse, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodSyncMethodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodSyncMethodRequest, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodSyncMethodRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodSyncMethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodSyncMethodResponse, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodWithNoResponseMethodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodWithNoResponseMethodRequest, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodWithNoResponseMethodRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodWithNoResponseMethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodPrimitiveMethodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodPrimitiveMethodRequest, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodPrimitiveMethodRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodPrimitiveMethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodPrimitiveMethodResponse, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodNoRequestOrResponseMethodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodNoRequestOrResponseMethodRequest, objectid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodNoRequestOrResponseMethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodNoRequestMethodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodNoRequestMethodRequest, objectid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodNoRequestMethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodNoRequestMethodResponse, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodNoResponseMethodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodNoResponseMethodRequest, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodNoResponseMethodRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodNoResponseMethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2ListenEventStream, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2ListenEventStream, objectid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2CreateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2CreateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2CreateResponse, objectid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2PropString2SetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2PropString2SetRequest, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test2PropString2SetRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2PropString2SetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2PropString2GetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2PropString2GetRequest, objectid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2PropString2GetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2PropString2GetResponse, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2PropString2PropertyChanged, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2PropString2PropertyChanged, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test2PropString2PropertyChanged, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2PropComplex2SetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2PropComplex2SetRequest, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test2PropComplex2SetRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2PropComplex2SetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2PropComplex2GetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2PropComplex2GetRequest, objectid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2PropComplex2GetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2PropComplex2GetResponse, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2PropComplex2PropertyChanged, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2PropComplex2PropertyChanged, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test2PropComplex2PropertyChanged, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2TestEvent2Event, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2TestEvent2Event, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test2TestEvent2Event, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2TestEventComplex2Event, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2TestEventComplex2Event, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test2TestEventComplex2Event, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2TestEventNoData2Event, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2TestEventNoData2Event, objectid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2TestMethod2MethodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2TestMethod2MethodRequest, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test2TestMethod2MethodRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2TestMethod2MethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2TestMethod2MethodResponse, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2TestMethodSync2MethodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2TestMethodSync2MethodRequest, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test2TestMethodSync2MethodRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2TestMethodSync2MethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2TestMethodSync2MethodResponse, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2TestMethodWithNoResponse2MethodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2TestMethodWithNoResponse2MethodRequest, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test2TestMethodWithNoResponse2MethodRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2TestMethodWithNoResponse2MethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2TestMethodNoRequest2MethodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2TestMethodNoRequest2MethodRequest, objectid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test2TestMethodNoRequest2MethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesListenEventStream, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesListenEventStream, objectid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesCreateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesCreateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesCreateResponse, objectid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestEventEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestEventEvent, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestEventEvent, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamDoubleMethodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamDoubleMethodRequest, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamDoubleMethodRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamDoubleMethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamFloatMethodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamFloatMethodRequest, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamFloatMethodRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamFloatMethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamIntMethodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamIntMethodRequest, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamIntMethodRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamIntMethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamUIntMethodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamUIntMethodRequest, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamUIntMethodRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamUIntMethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamLongMethodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamLongMethodRequest, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamLongMethodRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamLongMethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamULongMethodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamULongMethodRequest, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamULongMethodRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamULongMethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamBoolMethodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamBoolMethodRequest, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamBoolMethodRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamBoolMethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamStringMethodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamStringMethodRequest, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamStringMethodRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamStringMethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamByteMethodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamByteMethodRequest, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamByteMethodRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamByteMethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamBytesMethodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamBytesMethodRequest, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamBytesMethodRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::TestTypesTestParamBytesMethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Tests::Test1ListenEventStream)},
  { 6, -1, sizeof(::Tests::Test1CreateRequest)},
  { 11, -1, sizeof(::Tests::Test1CreateResponse)},
  { 17, -1, sizeof(::Tests::Test1PropStringSetRequest)},
  { 24, -1, sizeof(::Tests::Test1PropStringSetResponse)},
  { 29, -1, sizeof(::Tests::Test1PropStringGetRequest)},
  { 35, -1, sizeof(::Tests::Test1PropStringGetResponse)},
  { 41, -1, sizeof(::Tests::Test1PropStringPropertyChanged)},
  { 48, -1, sizeof(::Tests::Test1PropComplexSetRequest)},
  { 55, -1, sizeof(::Tests::Test1PropComplexSetResponse)},
  { 60, -1, sizeof(::Tests::Test1PropComplexGetRequest)},
  { 66, -1, sizeof(::Tests::Test1PropComplexGetResponse)},
  { 72, -1, sizeof(::Tests::Test1PropComplexPropertyChanged)},
  { 79, -1, sizeof(::Tests::Test1TestEventEvent)},
  { 86, -1, sizeof(::Tests::Test1TestEventComplexEvent)},
  { 93, -1, sizeof(::Tests::Test1TestEventNoDataEvent)},
  { 99, -1, sizeof(::Tests::Test1TestMethodMethodRequest)},
  { 106, -1, sizeof(::Tests::Test1TestMethodMethodResponse)},
  { 112, -1, sizeof(::Tests::Test1TestMethodSyncMethodRequest)},
  { 119, -1, sizeof(::Tests::Test1TestMethodSyncMethodResponse)},
  { 125, -1, sizeof(::Tests::Test1TestMethodWithNoResponseMethodRequest)},
  { 132, -1, sizeof(::Tests::Test1TestMethodWithNoResponseMethodResponse)},
  { 137, -1, sizeof(::Tests::Test1TestMethodPrimitiveMethodRequest)},
  { 144, -1, sizeof(::Tests::Test1TestMethodPrimitiveMethodResponse)},
  { 150, -1, sizeof(::Tests::Test1TestMethodNoRequestOrResponseMethodRequest)},
  { 156, -1, sizeof(::Tests::Test1TestMethodNoRequestOrResponseMethodResponse)},
  { 161, -1, sizeof(::Tests::Test1TestMethodNoRequestMethodRequest)},
  { 167, -1, sizeof(::Tests::Test1TestMethodNoRequestMethodResponse)},
  { 173, -1, sizeof(::Tests::Test1TestMethodNoResponseMethodRequest)},
  { 180, -1, sizeof(::Tests::Test1TestMethodNoResponseMethodResponse)},
  { 185, -1, sizeof(::Tests::Test2ListenEventStream)},
  { 191, -1, sizeof(::Tests::Test2CreateRequest)},
  { 196, -1, sizeof(::Tests::Test2CreateResponse)},
  { 202, -1, sizeof(::Tests::Test2PropString2SetRequest)},
  { 209, -1, sizeof(::Tests::Test2PropString2SetResponse)},
  { 214, -1, sizeof(::Tests::Test2PropString2GetRequest)},
  { 220, -1, sizeof(::Tests::Test2PropString2GetResponse)},
  { 226, -1, sizeof(::Tests::Test2PropString2PropertyChanged)},
  { 233, -1, sizeof(::Tests::Test2PropComplex2SetRequest)},
  { 240, -1, sizeof(::Tests::Test2PropComplex2SetResponse)},
  { 245, -1, sizeof(::Tests::Test2PropComplex2GetRequest)},
  { 251, -1, sizeof(::Tests::Test2PropComplex2GetResponse)},
  { 257, -1, sizeof(::Tests::Test2PropComplex2PropertyChanged)},
  { 264, -1, sizeof(::Tests::Test2TestEvent2Event)},
  { 271, -1, sizeof(::Tests::Test2TestEventComplex2Event)},
  { 278, -1, sizeof(::Tests::Test2TestEventNoData2Event)},
  { 284, -1, sizeof(::Tests::Test2TestMethod2MethodRequest)},
  { 291, -1, sizeof(::Tests::Test2TestMethod2MethodResponse)},
  { 297, -1, sizeof(::Tests::Test2TestMethodSync2MethodRequest)},
  { 304, -1, sizeof(::Tests::Test2TestMethodSync2MethodResponse)},
  { 310, -1, sizeof(::Tests::Test2TestMethodWithNoResponse2MethodRequest)},
  { 317, -1, sizeof(::Tests::Test2TestMethodWithNoResponse2MethodResponse)},
  { 322, -1, sizeof(::Tests::Test2TestMethodNoRequest2MethodRequest)},
  { 328, -1, sizeof(::Tests::Test2TestMethodNoRequest2MethodResponse)},
  { 333, -1, sizeof(::Tests::TestTypesListenEventStream)},
  { 339, -1, sizeof(::Tests::TestTypesCreateRequest)},
  { 344, -1, sizeof(::Tests::TestTypesCreateResponse)},
  { 350, -1, sizeof(::Tests::TestTypesTestEventEvent)},
  { 357, -1, sizeof(::Tests::TestTypesTestParamDoubleMethodRequest)},
  { 364, -1, sizeof(::Tests::TestTypesTestParamDoubleMethodResponse)},
  { 369, -1, sizeof(::Tests::TestTypesTestParamFloatMethodRequest)},
  { 376, -1, sizeof(::Tests::TestTypesTestParamFloatMethodResponse)},
  { 381, -1, sizeof(::Tests::TestTypesTestParamIntMethodRequest)},
  { 388, -1, sizeof(::Tests::TestTypesTestParamIntMethodResponse)},
  { 393, -1, sizeof(::Tests::TestTypesTestParamUIntMethodRequest)},
  { 400, -1, sizeof(::Tests::TestTypesTestParamUIntMethodResponse)},
  { 405, -1, sizeof(::Tests::TestTypesTestParamLongMethodRequest)},
  { 412, -1, sizeof(::Tests::TestTypesTestParamLongMethodResponse)},
  { 417, -1, sizeof(::Tests::TestTypesTestParamULongMethodRequest)},
  { 424, -1, sizeof(::Tests::TestTypesTestParamULongMethodResponse)},
  { 429, -1, sizeof(::Tests::TestTypesTestParamBoolMethodRequest)},
  { 436, -1, sizeof(::Tests::TestTypesTestParamBoolMethodResponse)},
  { 441, -1, sizeof(::Tests::TestTypesTestParamStringMethodRequest)},
  { 448, -1, sizeof(::Tests::TestTypesTestParamStringMethodResponse)},
  { 453, -1, sizeof(::Tests::TestTypesTestParamByteMethodRequest)},
  { 460, -1, sizeof(::Tests::TestTypesTestParamByteMethodResponse)},
  { 465, -1, sizeof(::Tests::TestTypesTestParamBytesMethodRequest)},
  { 472, -1, sizeof(::Tests::TestTypesTestParamBytesMethodResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1ListenEventStream_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1CreateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1CreateResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1PropStringSetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1PropStringSetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1PropStringGetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1PropStringGetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1PropStringPropertyChanged_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1PropComplexSetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1PropComplexSetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1PropComplexGetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1PropComplexGetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1PropComplexPropertyChanged_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestEventEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestEventComplexEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestEventNoDataEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestMethodMethodRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestMethodMethodResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestMethodSyncMethodRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestMethodSyncMethodResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestMethodWithNoResponseMethodRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestMethodWithNoResponseMethodResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestMethodPrimitiveMethodRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestMethodPrimitiveMethodResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestMethodNoRequestOrResponseMethodRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestMethodNoRequestOrResponseMethodResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestMethodNoRequestMethodRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestMethodNoRequestMethodResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestMethodNoResponseMethodRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestMethodNoResponseMethodResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test2ListenEventStream_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test2CreateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test2CreateResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test2PropString2SetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test2PropString2SetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test2PropString2GetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test2PropString2GetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test2PropString2PropertyChanged_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test2PropComplex2SetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test2PropComplex2SetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test2PropComplex2GetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test2PropComplex2GetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test2PropComplex2PropertyChanged_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test2TestEvent2Event_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test2TestEventComplex2Event_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test2TestEventNoData2Event_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test2TestMethod2MethodRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test2TestMethod2MethodResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test2TestMethodSync2MethodRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test2TestMethodSync2MethodResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test2TestMethodWithNoResponse2MethodRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test2TestMethodWithNoResponse2MethodResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test2TestMethodNoRequest2MethodRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test2TestMethodNoRequest2MethodResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_TestTypesListenEventStream_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_TestTypesCreateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_TestTypesCreateResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_TestTypesTestEventEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_TestTypesTestParamDoubleMethodRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_TestTypesTestParamDoubleMethodResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_TestTypesTestParamFloatMethodRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_TestTypesTestParamFloatMethodResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_TestTypesTestParamIntMethodRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_TestTypesTestParamIntMethodResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_TestTypesTestParamUIntMethodRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_TestTypesTestParamUIntMethodResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_TestTypesTestParamLongMethodRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_TestTypesTestParamLongMethodResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_TestTypesTestParamULongMethodRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_TestTypesTestParamULongMethodResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_TestTypesTestParamBoolMethodRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_TestTypesTestParamBoolMethodResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_TestTypesTestParamStringMethodRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_TestTypesTestParamStringMethodResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_TestTypesTestParamByteMethodRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_TestTypesTestParamByteMethodResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_TestTypesTestParamBytesMethodRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_TestTypesTestParamBytesMethodResponse_default_instance_),
};

const char descriptor_table_protodef_gen_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\tgen.proto\022\005Tests\032\031google/protobuf/any."
  "proto\032 google/protobuf/descriptor.proto\032"
  "\036google/protobuf/wrappers.proto\032\013types.p"
  "roto\"*\n\026Test1ListenEventStream\022\020\n\010object"
  "Id\030\001 \001(\004\"\024\n\022Test1CreateRequest\"1\n\023Test1C"
  "reateResponse\022\020\n\010objectId\030\001 \001(\004:\010\302>\005Test"
  "1\"Z\n\031Test1PropStringSetRequest\022\020\n\010object"
  "Id\030\001 \001(\004\022+\n\005value\030\002 \001(\0132\034.google.protobu"
  "f.StringValue\"\034\n\032Test1PropStringSetRespo"
  "nse\"-\n\031Test1PropStringGetRequest\022\020\n\010obje"
  "ctId\030\001 \001(\004\"I\n\032Test1PropStringGetResponse"
  "\022+\n\005value\030\001 \001(\0132\034.google.protobuf.String"
  "Value\"v\n\036Test1PropStringPropertyChanged\022"
  "\020\n\010objectId\030\001 \001(\004\022+\n\005value\030\002 \001(\0132\034.googl"
  "e.protobuf.StringValue:\025\302>\005Test1\312>\nPropS"
  "tring\"`\n\032Test1PropComplexSetRequest\022\020\n\010o"
  "bjectId\030\001 \001(\004\0220\n\005value\030\002 \001(\0132!.custom.ty"
  "pes.TestMessageResponse\"\035\n\033Test1PropComp"
  "lexSetResponse\".\n\032Test1PropComplexGetReq"
  "uest\022\020\n\010objectId\030\001 \001(\004\"O\n\033Test1PropCompl"
  "exGetResponse\0220\n\005value\030\001 \001(\0132!.custom.ty"
  "pes.TestMessageResponse\"}\n\037Test1PropComp"
  "lexPropertyChanged\022\020\n\010objectId\030\001 \001(\004\0220\n\005"
  "value\030\002 \001(\0132!.custom.types.TestMessageRe"
  "sponse:\026\302>\005Test1\312>\013PropComplex\"j\n\023Test1T"
  "estEventEvent\022\020\n\010objectId\030\001 \001(\004\022+\n\005value"
  "\030\002 \001(\0132\034.google.protobuf.StringValue:\024\302>"
  "\005Test1\312>\tTestEvent\"}\n\032Test1TestEventComp"
  "lexEvent\022\020\n\010objectId\030\001 \001(\004\0220\n\005value\030\002 \001("
  "\0132!.custom.types.TestMessageResponse:\033\302>"
  "\005Test1\312>\020TestEventComplex\"I\n\031Test1TestEv"
  "entNoDataEvent\022\020\n\010objectId\030\001 \001(\004:\032\302>\005Tes"
  "t1\312>\017TestEventNoData\"a\n\034Test1TestMethodM"
  "ethodRequest\022\020\n\010objectId\030\001 \001(\004\022/\n\005value\030"
  "\002 \001(\0132 .custom.types.TestMessageRequest\""
  "Q\n\035Test1TestMethodMethodResponse\0220\n\005valu"
  "e\030\001 \001(\0132!.custom.types.TestMessageRespon"
  "se\"e\n Test1TestMethodSyncMethodRequest\022\020"
  "\n\010objectId\030\001 \001(\004\022/\n\005value\030\002 \001(\0132 .custom"
  ".types.TestMessageRequest\"U\n!Test1TestMe"
  "thodSyncMethodResponse\0220\n\005value\030\001 \001(\0132!."
  "custom.types.TestMessageResponse\"o\n*Test"
  "1TestMethodWithNoResponseMethodRequest\022\020"
  "\n\010objectId\030\001 \001(\004\022/\n\005value\030\002 \001(\0132 .custom"
  ".types.TestMessageRequest\"-\n+Test1TestMe"
  "thodWithNoResponseMethodResponse\"H\n%Test"
  "1TestMethodPrimitiveMethodRequest\022\020\n\010obj"
  "ectId\030\001 \001(\004\022\r\n\005value\030\002 \001(\005\"7\n&Test1TestM"
  "ethodPrimitiveMethodResponse\022\r\n\005value\030\001 "
  "\001(\005\"C\n/Test1TestMethodNoRequestOrRespons"
  "eMethodRequest\022\020\n\010objectId\030\001 \001(\004\"2\n0Test"
  "1TestMethodNoRequestOrResponseMethodResp"
  "onse\"9\n%Test1TestMethodNoRequestMethodRe"
  "quest\022\020\n\010objectId\030\001 \001(\004\"7\n&Test1TestMeth"
  "odNoRequestMethodResponse\022\r\n\005value\030\001 \001(\005"
  "\"I\n&Test1TestMethodNoResponseMethodReque"
  "st\022\020\n\010objectId\030\001 \001(\004\022\r\n\005value\030\002 \001(\005\")\n\'T"
  "est1TestMethodNoResponseMethodResponse\"*"
  "\n\026Test2ListenEventStream\022\020\n\010objectId\030\001 \001"
  "(\004\"\024\n\022Test2CreateRequest\"1\n\023Test2CreateR"
  "esponse\022\020\n\010objectId\030\001 \001(\004:\010\302>\005Test2\"[\n\032T"
  "est2PropString2SetRequest\022\020\n\010objectId\030\001 "
  "\001(\004\022+\n\005value\030\002 \001(\0132\034.google.protobuf.Str"
  "ingValue\"\035\n\033Test2PropString2SetResponse\""
  ".\n\032Test2PropString2GetRequest\022\020\n\010objectI"
  "d\030\001 \001(\004\"J\n\033Test2PropString2GetResponse\022+"
  "\n\005value\030\001 \001(\0132\034.google.protobuf.StringVa"
  "lue\"x\n\037Test2PropString2PropertyChanged\022\020"
  "\n\010objectId\030\001 \001(\004\022+\n\005value\030\002 \001(\0132\034.google"
  ".protobuf.StringValue:\026\302>\005Test2\312>\013PropSt"
  "ring2\"a\n\033Test2PropComplex2SetRequest\022\020\n\010"
  "objectId\030\001 \001(\004\0220\n\005value\030\002 \001(\0132!.custom.t"
  "ypes.TestMessageResponse\"\036\n\034Test2PropCom"
  "plex2SetResponse\"/\n\033Test2PropComplex2Get"
  "Request\022\020\n\010objectId\030\001 \001(\004\"P\n\034Test2PropCo"
  "mplex2GetResponse\0220\n\005value\030\001 \001(\0132!.custo"
  "m.types.TestMessageResponse\"\177\n Test2Prop"
  "Complex2PropertyChanged\022\020\n\010objectId\030\001 \001("
  "\004\0220\n\005value\030\002 \001(\0132!.custom.types.TestMess"
  "ageResponse:\027\302>\005Test2\312>\014PropComplex2\"l\n\024"
  "Test2TestEvent2Event\022\020\n\010objectId\030\001 \001(\004\022+"
  "\n\005value\030\002 \001(\0132\034.google.protobuf.StringVa"
  "lue:\025\302>\005Test2\312>\nTestEvent2\"\177\n\033Test2TestE"
  "ventComplex2Event\022\020\n\010objectId\030\001 \001(\004\0220\n\005v"
  "alue\030\002 \001(\0132!.custom.types.TestMessageRes"
  "ponse:\034\302>\005Test2\312>\021TestEventComplex2\"K\n\032T"
  "est2TestEventNoData2Event\022\020\n\010objectId\030\001 "
  "\001(\004:\033\302>\005Test2\312>\020TestEventNoData2\"b\n\035Test"
  "2TestMethod2MethodRequest\022\020\n\010objectId\030\001 "
  "\001(\004\022/\n\005value\030\002 \001(\0132 .custom.types.TestMe"
  "ssageRequest\"R\n\036Test2TestMethod2MethodRe"
  "sponse\0220\n\005value\030\001 \001(\0132!.custom.types.Tes"
  "tMessageResponse\"f\n!Test2TestMethodSync2"
  "MethodRequest\022\020\n\010objectId\030\001 \001(\004\022/\n\005value"
  "\030\002 \001(\0132 .custom.types.TestMessageRequest"
  "\"V\n\"Test2TestMethodSync2MethodResponse\0220"
  "\n\005value\030\001 \001(\0132!.custom.types.TestMessage"
  "Response\"p\n+Test2TestMethodWithNoRespons"
  "e2MethodRequest\022\020\n\010objectId\030\001 \001(\004\022/\n\005val"
  "ue\030\002 \001(\0132 .custom.types.TestMessageReque"
  "st\".\n,Test2TestMethodWithNoResponse2Meth"
  "odResponse\":\n&Test2TestMethodNoRequest2M"
  "ethodRequest\022\020\n\010objectId\030\001 \001(\004\")\n\'Test2T"
  "estMethodNoRequest2MethodResponse\".\n\032Tes"
  "tTypesListenEventStream\022\020\n\010objectId\030\001 \001("
  "\004\"\030\n\026TestTypesCreateRequest\"9\n\027TestTypes"
  "CreateResponse\022\020\n\010objectId\030\001 \001(\004:\014\302>\tTes"
  "tTypes\"r\n\027TestTypesTestEventEvent\022\020\n\010obj"
  "ectId\030\001 \001(\004\022+\n\005value\030\002 \001(\0132\034.google.prot"
  "obuf.StringValue:\030\302>\tTestTypes\312>\tTestEve"
  "nt\"H\n%TestTypesTestParamDoubleMethodRequ"
  "est\022\020\n\010objectId\030\001 \001(\004\022\r\n\005value\030\002 \001(\001\"(\n&"
  "TestTypesTestParamDoubleMethodResponse\"G"
  "\n$TestTypesTestParamFloatMethodRequest\022\020"
  "\n\010objectId\030\001 \001(\004\022\r\n\005value\030\002 \001(\002\"\'\n%TestT"
  "ypesTestParamFloatMethodResponse\"E\n\"Test"
  "TypesTestParamIntMethodRequest\022\020\n\010object"
  "Id\030\001 \001(\004\022\r\n\005value\030\002 \001(\005\"%\n#TestTypesTest"
  "ParamIntMethodResponse\"F\n#TestTypesTestP"
  "aramUIntMethodRequest\022\020\n\010objectId\030\001 \001(\004\022"
  "\r\n\005value\030\002 \001(\r\"&\n$TestTypesTestParamUInt"
  "MethodResponse\"F\n#TestTypesTestParamLong"
  "MethodRequest\022\020\n\010objectId\030\001 \001(\004\022\r\n\005value"
  "\030\002 \001(\003\"&\n$TestTypesTestParamLongMethodRe"
  "sponse\"G\n$TestTypesTestParamULongMethodR"
  "equest\022\020\n\010objectId\030\001 \001(\004\022\r\n\005value\030\002 \001(\004\""
  "\'\n%TestTypesTestParamULongMethodResponse"
  "\"F\n#TestTypesTestParamBoolMethodRequest\022"
  "\020\n\010objectId\030\001 \001(\004\022\r\n\005value\030\002 \001(\010\"&\n$Test"
  "TypesTestParamBoolMethodResponse\"f\n%Test"
  "TypesTestParamStringMethodRequest\022\020\n\010obj"
  "ectId\030\001 \001(\004\022+\n\005value\030\002 \001(\0132\034.google.prot"
  "obuf.StringValue\"(\n&TestTypesTestParamSt"
  "ringMethodResponse\"F\n#TestTypesTestParam"
  "ByteMethodRequest\022\020\n\010objectId\030\001 \001(\004\022\r\n\005v"
  "alue\030\002 \001(\r\"&\n$TestTypesTestParamByteMeth"
  "odResponse\"G\n$TestTypesTestParamBytesMet"
  "hodRequest\022\020\n\010objectId\030\001 \001(\004\022\r\n\005value\030\002 "
  "\001(\014\"\'\n%TestTypesTestParamBytesMethodResp"
  "onse2\227\r\n\022Test1ObjectService\022F\n\006Create\022\031."
  "Tests.Test1CreateRequest\032\032.Tests.Test1Cr"
  "eateResponse\"\003\300>\0010\001\022J\n\014ListenEvents\022\035.Te"
  "sts.Test1ListenEventStream\032\024.google.prot"
  "obuf.Any\"\003\310>\0010\001\022l\n\020InvokeTestMethod\022#.Te"
  "sts.Test1TestMethodMethodRequest\032$.Tests"
  ".Test1TestMethodMethodResponse\"\r\322>\nTestM"
  "ethod\022\177\n\024InvokeTestMethodSync\022\'.Tests.Te"
  "st1TestMethodSyncMethodRequest\032(.Tests.T"
  "est1TestMethodSyncMethodResponse\"\024\322>\016Tes"
  "tMethodSync\330>\001\022\247\001\n\036InvokeTestMethodWithN"
  "oResponse\0221.Tests.Test1TestMethodWithNoR"
  "esponseMethodRequest\0322.Tests.Test1TestMe"
  "thodWithNoResponseMethodResponse\"\036\322>\030Tes"
  "tMethodWithNoResponse\330>\001\022\223\001\n\031InvokeTestM"
  "ethodPrimitive\022,.Tests.Test1TestMethodPr"
  "imitiveMethodRequest\032-.Tests.Test1TestMe"
  "thodPrimitiveMethodResponse\"\031\322>\023TestMeth"
  "odPrimitive\330>\001\022\273\001\n#InvokeTestMethodNoReq"
  "uestOrResponse\0226.Tests.Test1TestMethodNo"
  "RequestOrResponseMethodRequest\0327.Tests.T"
  "est1TestMethodNoRequestOrResponseMethodR"
  "esponse\"#\322>\035TestMethodNoRequestOrRespons"
  "e\330>\001\022\223\001\n\031InvokeTestMethodNoRequest\022,.Tes"
  "ts.Test1TestMethodNoRequestMethodRequest"
  "\032-.Tests.Test1TestMethodNoRequestMethodR"
  "esponse\"\031\322>\023TestMethodNoRequest\330>\001\022\227\001\n\032I"
  "nvokeTestMethodNoResponse\022-.Tests.Test1T"
  "estMethodNoResponseMethodRequest\032..Tests"
  ".Test1TestMethodNoResponseMethodResponse"
  "\"\032\322>\024TestMethodNoResponse\330>\001\022n\n\025SetPrope"
  "rtyPropString\022 .Tests.Test1PropStringSet"
  "Request\032!.Tests.Test1PropStringSetRespon"
  "se\"\020\342>\nPropString\350>\001\022n\n\025GetPropertyPropS"
  "tring\022 .Tests.Test1PropStringGetRequest\032"
  "!.Tests.Test1PropStringGetResponse\"\020\342>\nP"
  "ropString\360>\001\022r\n\026SetPropertyPropComplex\022!"
  ".Tests.Test1PropComplexSetRequest\032\".Test"
  "s.Test1PropComplexSetResponse\"\021\342>\013PropCo"
  "mplex\350>\001\022r\n\026GetPropertyPropComplex\022!.Tes"
  "ts.Test1PropComplexGetRequest\032\".Tests.Te"
  "st1PropComplexGetResponse\"\021\342>\013PropComple"
  "x\360>\001\032\010\302>\005Test12\312\t\n\022Test2ObjectService\022F\n"
  "\006Create\022\031.Tests.Test2CreateRequest\032\032.Tes"
  "ts.Test2CreateResponse\"\003\300>\0010\001\022J\n\014ListenE"
  "vents\022\035.Tests.Test2ListenEventStream\032\024.g"
  "oogle.protobuf.Any\"\003\310>\0010\001\022p\n\021InvokeTestM"
  "ethod2\022$.Tests.Test2TestMethod2MethodReq"
  "uest\032%.Tests.Test2TestMethod2MethodRespo"
  "nse\"\016\322>\013TestMethod2\022\203\001\n\025InvokeTestMethod"
  "Sync2\022(.Tests.Test2TestMethodSync2Method"
  "Request\032).Tests.Test2TestMethodSync2Meth"
  "odResponse\"\025\322>\017TestMethodSync2\330>\001\022\253\001\n\037In"
  "vokeTestMethodWithNoResponse2\0222.Tests.Te"
  "st2TestMethodWithNoResponse2MethodReques"
  "t\0323.Tests.Test2TestMethodWithNoResponse2"
  "MethodResponse\"\037\322>\031TestMethodWithNoRespo"
  "nse2\330>\001\022\227\001\n\032InvokeTestMethodNoRequest2\022-"
  ".Tests.Test2TestMethodNoRequest2MethodRe"
  "quest\032..Tests.Test2TestMethodNoRequest2M"
  "ethodResponse\"\032\322>\024TestMethodNoRequest2\330>"
  "\001\022r\n\026SetPropertyPropString2\022!.Tests.Test"
  "2PropString2SetRequest\032\".Tests.Test2Prop"
  "String2SetResponse\"\021\342>\013PropString2\350>\001\022r\n"
  "\026GetPropertyPropString2\022!.Tests.Test2Pro"
  "pString2GetRequest\032\".Tests.Test2PropStri"
  "ng2GetResponse\"\021\342>\013PropString2\360>\001\022v\n\027Set"
  "PropertyPropComplex2\022\".Tests.Test2PropCo"
  "mplex2SetRequest\032#.Tests.Test2PropComple"
  "x2SetResponse\"\022\342>\014PropComplex2\350>\001\022v\n\027Get"
  "PropertyPropComplex2\022\".Tests.Test2PropCo"
  "mplex2GetRequest\032#.Tests.Test2PropComple"
  "x2GetResponse\"\022\342>\014PropComplex2\360>\001\032\010\302>\005Te"
  "st22\231\014\n\026TestTypesObjectService\022N\n\006Create"
  "\022\035.Tests.TestTypesCreateRequest\032\036.Tests."
  "TestTypesCreateResponse\"\003\300>\0010\001\022N\n\014Listen"
  "Events\022!.Tests.TestTypesListenEventStrea"
  "m\032\024.google.protobuf.Any\"\003\310>\0010\001\022\213\001\n\025Invok"
  "eTestParamDouble\022,.Tests.TestTypesTestPa"
  "ramDoubleMethodRequest\032-.Tests.TestTypes"
  "TestParamDoubleMethodResponse\"\025\322>\017TestPa"
  "ramDouble\330>\001\022\207\001\n\024InvokeTestParamFloat\022+."
  "Tests.TestTypesTestParamFloatMethodReque"
  "st\032,.Tests.TestTypesTestParamFloatMethod"
  "Response\"\024\322>\016TestParamFloat\330>\001\022\177\n\022Invoke"
  "TestParamInt\022).Tests.TestTypesTestParamI"
  "ntMethodRequest\032*.Tests.TestTypesTestPar"
  "amIntMethodResponse\"\022\322>\014TestParamInt\330>\001\022"
  "\203\001\n\023InvokeTestParamUInt\022*.Tests.TestType"
  "sTestParamUIntMethodRequest\032+.Tests.Test"
  "TypesTestParamUIntMethodResponse\"\023\322>\rTes"
  "tParamUInt\330>\001\022\203\001\n\023InvokeTestParamLong\022*."
  "Tests.TestTypesTestParamLongMethodReques"
  "t\032+.Tests.TestTypesTestParamLongMethodRe"
  "sponse\"\023\322>\rTestParamLong\330>\001\022\207\001\n\024InvokeTe"
  "stParamULong\022+.Tests.TestTypesTestParamU"
  "LongMethodRequest\032,.Tests.TestTypesTestP"
  "aramULongMethodResponse\"\024\322>\016TestParamULo"
  "ng\330>\001\022\203\001\n\023InvokeTestParamBool\022*.Tests.Te"
  "stTypesTestParamBoolMethodRequest\032+.Test"
  "s.TestTypesTestParamBoolMethodResponse\"\023"
  "\322>\rTestParamBool\330>\001\022\213\001\n\025InvokeTestParamS"
  "tring\022,.Tests.TestTypesTestParamStringMe"
  "thodRequest\032-.Tests.TestTypesTestParamSt"
  "ringMethodResponse\"\025\322>\017TestParamString\330>"
  "\001\022\203\001\n\023InvokeTestParamByte\022*.Tests.TestTy"
  "pesTestParamByteMethodRequest\032+.Tests.Te"
  "stTypesTestParamByteMethodResponse\"\023\322>\rT"
  "estParamByte\330>\001\022\207\001\n\024InvokeTestParamBytes"
  "\022+.Tests.TestTypesTestParamBytesMethodRe"
  "quest\032,.Tests.TestTypesTestParamBytesMet"
  "hodResponse\"\024\322>\016TestParamBytes\330>\001\032\014\302>\tTe"
  "stTypes:/\n\006create\022\036.google.protobuf.Meth"
  "odOptions\030\350\007 \001(\010:6\n\reventListener\022\036.goog"
  "le.protobuf.MethodOptions\030\351\007 \001(\010:3\n\nmeth"
  "odName\022\036.google.protobuf.MethodOptions\030\352"
  "\007 \001(\t:-\n\004sync\022\036.google.protobuf.MethodOp"
  "tions\030\353\007 \001(\010:1\n\010propName\022\036.google.protob"
  "uf.MethodOptions\030\354\007 \001(\t:0\n\007propSet\022\036.goo"
  "gle.protobuf.MethodOptions\030\355\007 \001(\010:0\n\007pro"
  "pGet\022\036.google.protobuf.MethodOptions\030\356\007 "
  "\001(\010:;\n\021messageObjectName\022\037.google.protob"
  "uf.MessageOptions\030\350\007 \001(\t:3\n\teventName\022\037."
  "google.protobuf.MessageOptions\030\351\007 \001(\t:1\n"
  "\007forProp\022\037.google.protobuf.MessageOption"
  "s\030\352\007 \001(\t:;\n\021serviceObjectName\022\037.google.p"
  "rotobuf.ServiceOptions\030\350\007 \001(\tb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_gen_2eproto_deps[4] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
  &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
  &::descriptor_table_types_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_gen_2eproto_sccs[78] = {
  &scc_info_Test1CreateRequest_gen_2eproto.base,
  &scc_info_Test1CreateResponse_gen_2eproto.base,
  &scc_info_Test1ListenEventStream_gen_2eproto.base,
  &scc_info_Test1PropComplexGetRequest_gen_2eproto.base,
  &scc_info_Test1PropComplexGetResponse_gen_2eproto.base,
  &scc_info_Test1PropComplexPropertyChanged_gen_2eproto.base,
  &scc_info_Test1PropComplexSetRequest_gen_2eproto.base,
  &scc_info_Test1PropComplexSetResponse_gen_2eproto.base,
  &scc_info_Test1PropStringGetRequest_gen_2eproto.base,
  &scc_info_Test1PropStringGetResponse_gen_2eproto.base,
  &scc_info_Test1PropStringPropertyChanged_gen_2eproto.base,
  &scc_info_Test1PropStringSetRequest_gen_2eproto.base,
  &scc_info_Test1PropStringSetResponse_gen_2eproto.base,
  &scc_info_Test1TestEventComplexEvent_gen_2eproto.base,
  &scc_info_Test1TestEventEvent_gen_2eproto.base,
  &scc_info_Test1TestEventNoDataEvent_gen_2eproto.base,
  &scc_info_Test1TestMethodMethodRequest_gen_2eproto.base,
  &scc_info_Test1TestMethodMethodResponse_gen_2eproto.base,
  &scc_info_Test1TestMethodNoRequestMethodRequest_gen_2eproto.base,
  &scc_info_Test1TestMethodNoRequestMethodResponse_gen_2eproto.base,
  &scc_info_Test1TestMethodNoRequestOrResponseMethodRequest_gen_2eproto.base,
  &scc_info_Test1TestMethodNoRequestOrResponseMethodResponse_gen_2eproto.base,
  &scc_info_Test1TestMethodNoResponseMethodRequest_gen_2eproto.base,
  &scc_info_Test1TestMethodNoResponseMethodResponse_gen_2eproto.base,
  &scc_info_Test1TestMethodPrimitiveMethodRequest_gen_2eproto.base,
  &scc_info_Test1TestMethodPrimitiveMethodResponse_gen_2eproto.base,
  &scc_info_Test1TestMethodSyncMethodRequest_gen_2eproto.base,
  &scc_info_Test1TestMethodSyncMethodResponse_gen_2eproto.base,
  &scc_info_Test1TestMethodWithNoResponseMethodRequest_gen_2eproto.base,
  &scc_info_Test1TestMethodWithNoResponseMethodResponse_gen_2eproto.base,
  &scc_info_Test2CreateRequest_gen_2eproto.base,
  &scc_info_Test2CreateResponse_gen_2eproto.base,
  &scc_info_Test2ListenEventStream_gen_2eproto.base,
  &scc_info_Test2PropComplex2GetRequest_gen_2eproto.base,
  &scc_info_Test2PropComplex2GetResponse_gen_2eproto.base,
  &scc_info_Test2PropComplex2PropertyChanged_gen_2eproto.base,
  &scc_info_Test2PropComplex2SetRequest_gen_2eproto.base,
  &scc_info_Test2PropComplex2SetResponse_gen_2eproto.base,
  &scc_info_Test2PropString2GetRequest_gen_2eproto.base,
  &scc_info_Test2PropString2GetResponse_gen_2eproto.base,
  &scc_info_Test2PropString2PropertyChanged_gen_2eproto.base,
  &scc_info_Test2PropString2SetRequest_gen_2eproto.base,
  &scc_info_Test2PropString2SetResponse_gen_2eproto.base,
  &scc_info_Test2TestEvent2Event_gen_2eproto.base,
  &scc_info_Test2TestEventComplex2Event_gen_2eproto.base,
  &scc_info_Test2TestEventNoData2Event_gen_2eproto.base,
  &scc_info_Test2TestMethod2MethodRequest_gen_2eproto.base,
  &scc_info_Test2TestMethod2MethodResponse_gen_2eproto.base,
  &scc_info_Test2TestMethodNoRequest2MethodRequest_gen_2eproto.base,
  &scc_info_Test2TestMethodNoRequest2MethodResponse_gen_2eproto.base,
  &scc_info_Test2TestMethodSync2MethodRequest_gen_2eproto.base,
  &scc_info_Test2TestMethodSync2MethodResponse_gen_2eproto.base,
  &scc_info_Test2TestMethodWithNoResponse2MethodRequest_gen_2eproto.base,
  &scc_info_Test2TestMethodWithNoResponse2MethodResponse_gen_2eproto.base,
  &scc_info_TestTypesCreateRequest_gen_2eproto.base,
  &scc_info_TestTypesCreateResponse_gen_2eproto.base,
  &scc_info_TestTypesListenEventStream_gen_2eproto.base,
  &scc_info_TestTypesTestEventEvent_gen_2eproto.base,
  &scc_info_TestTypesTestParamBoolMethodRequest_gen_2eproto.base,
  &scc_info_TestTypesTestParamBoolMethodResponse_gen_2eproto.base,
  &scc_info_TestTypesTestParamByteMethodRequest_gen_2eproto.base,
  &scc_info_TestTypesTestParamByteMethodResponse_gen_2eproto.base,
  &scc_info_TestTypesTestParamBytesMethodRequest_gen_2eproto.base,
  &scc_info_TestTypesTestParamBytesMethodResponse_gen_2eproto.base,
  &scc_info_TestTypesTestParamDoubleMethodRequest_gen_2eproto.base,
  &scc_info_TestTypesTestParamDoubleMethodResponse_gen_2eproto.base,
  &scc_info_TestTypesTestParamFloatMethodRequest_gen_2eproto.base,
  &scc_info_TestTypesTestParamFloatMethodResponse_gen_2eproto.base,
  &scc_info_TestTypesTestParamIntMethodRequest_gen_2eproto.base,
  &scc_info_TestTypesTestParamIntMethodResponse_gen_2eproto.base,
  &scc_info_TestTypesTestParamLongMethodRequest_gen_2eproto.base,
  &scc_info_TestTypesTestParamLongMethodResponse_gen_2eproto.base,
  &scc_info_TestTypesTestParamStringMethodRequest_gen_2eproto.base,
  &scc_info_TestTypesTestParamStringMethodResponse_gen_2eproto.base,
  &scc_info_TestTypesTestParamUIntMethodRequest_gen_2eproto.base,
  &scc_info_TestTypesTestParamUIntMethodResponse_gen_2eproto.base,
  &scc_info_TestTypesTestParamULongMethodRequest_gen_2eproto.base,
  &scc_info_TestTypesTestParamULongMethodResponse_gen_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_gen_2eproto_once;
static bool descriptor_table_gen_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_gen_2eproto = {
  &descriptor_table_gen_2eproto_initialized, descriptor_table_protodef_gen_2eproto, "gen.proto", 10637,
  &descriptor_table_gen_2eproto_once, descriptor_table_gen_2eproto_sccs, descriptor_table_gen_2eproto_deps, 78, 4,
  schemas, file_default_instances, TableStruct_gen_2eproto::offsets,
  file_level_metadata_gen_2eproto, 78, file_level_enum_descriptors_gen_2eproto, file_level_service_descriptors_gen_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_gen_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_gen_2eproto), true);
namespace Tests {

// ===================================================================

void Test1ListenEventStream::InitAsDefaultInstance() {
}
class Test1ListenEventStream::_Internal {
 public:
};

Test1ListenEventStream::Test1ListenEventStream()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1ListenEventStream)
}
Test1ListenEventStream::Test1ListenEventStream(const Test1ListenEventStream& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1ListenEventStream)
}

void Test1ListenEventStream::SharedCtor() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}

Test1ListenEventStream::~Test1ListenEventStream() {
  // @@protoc_insertion_point(destructor:Tests.Test1ListenEventStream)
  SharedDtor();
}

void Test1ListenEventStream::SharedDtor() {
}

void Test1ListenEventStream::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1ListenEventStream& Test1ListenEventStream::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1ListenEventStream_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1ListenEventStream::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1ListenEventStream)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1ListenEventStream::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1ListenEventStream::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1ListenEventStream)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1ListenEventStream)
  return target;
}

size_t Test1ListenEventStream::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1ListenEventStream)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1ListenEventStream::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1ListenEventStream)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1ListenEventStream* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1ListenEventStream>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1ListenEventStream)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1ListenEventStream)
    MergeFrom(*source);
  }
}

void Test1ListenEventStream::MergeFrom(const Test1ListenEventStream& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1ListenEventStream)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1ListenEventStream::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1ListenEventStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1ListenEventStream::CopyFrom(const Test1ListenEventStream& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1ListenEventStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1ListenEventStream::IsInitialized() const {
  return true;
}

void Test1ListenEventStream::InternalSwap(Test1ListenEventStream* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1ListenEventStream::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1CreateRequest::InitAsDefaultInstance() {
}
class Test1CreateRequest::_Internal {
 public:
};

Test1CreateRequest::Test1CreateRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1CreateRequest)
}
Test1CreateRequest::Test1CreateRequest(const Test1CreateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.Test1CreateRequest)
}

void Test1CreateRequest::SharedCtor() {
}

Test1CreateRequest::~Test1CreateRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test1CreateRequest)
  SharedDtor();
}

void Test1CreateRequest::SharedDtor() {
}

void Test1CreateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1CreateRequest& Test1CreateRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1CreateRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1CreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1CreateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* Test1CreateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1CreateRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1CreateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1CreateRequest)
  return target;
}

size_t Test1CreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1CreateRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1CreateRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1CreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1CreateRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1CreateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1CreateRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1CreateRequest)
    MergeFrom(*source);
  }
}

void Test1CreateRequest::MergeFrom(const Test1CreateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1CreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Test1CreateRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1CreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1CreateRequest::CopyFrom(const Test1CreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1CreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1CreateRequest::IsInitialized() const {
  return true;
}

void Test1CreateRequest::InternalSwap(Test1CreateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1CreateRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1CreateResponse::InitAsDefaultInstance() {
}
class Test1CreateResponse::_Internal {
 public:
};

Test1CreateResponse::Test1CreateResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1CreateResponse)
}
Test1CreateResponse::Test1CreateResponse(const Test1CreateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1CreateResponse)
}

void Test1CreateResponse::SharedCtor() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}

Test1CreateResponse::~Test1CreateResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test1CreateResponse)
  SharedDtor();
}

void Test1CreateResponse::SharedDtor() {
}

void Test1CreateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1CreateResponse& Test1CreateResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1CreateResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1CreateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1CreateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1CreateResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1CreateResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1CreateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1CreateResponse)
  return target;
}

size_t Test1CreateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1CreateResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1CreateResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1CreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1CreateResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1CreateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1CreateResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1CreateResponse)
    MergeFrom(*source);
  }
}

void Test1CreateResponse::MergeFrom(const Test1CreateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1CreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1CreateResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1CreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1CreateResponse::CopyFrom(const Test1CreateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1CreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1CreateResponse::IsInitialized() const {
  return true;
}

void Test1CreateResponse::InternalSwap(Test1CreateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1CreateResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1PropStringSetRequest::InitAsDefaultInstance() {
  ::Tests::_Test1PropStringSetRequest_default_instance_._instance.get_mutable()->value_ = const_cast< PROTOBUF_NAMESPACE_ID::StringValue*>(
      PROTOBUF_NAMESPACE_ID::StringValue::internal_default_instance());
}
class Test1PropStringSetRequest::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::StringValue& value(const Test1PropStringSetRequest* msg);
};

const PROTOBUF_NAMESPACE_ID::StringValue&
Test1PropStringSetRequest::_Internal::value(const Test1PropStringSetRequest* msg) {
  return *msg->value_;
}
void Test1PropStringSetRequest::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test1PropStringSetRequest::Test1PropStringSetRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1PropStringSetRequest)
}
Test1PropStringSetRequest::Test1PropStringSetRequest(const Test1PropStringSetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1PropStringSetRequest)
}

void Test1PropStringSetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test1PropStringSetRequest_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

Test1PropStringSetRequest::~Test1PropStringSetRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test1PropStringSetRequest)
  SharedDtor();
}

void Test1PropStringSetRequest::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test1PropStringSetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1PropStringSetRequest& Test1PropStringSetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1PropStringSetRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1PropStringSetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1PropStringSetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1PropStringSetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1PropStringSetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1PropStringSetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .google.protobuf.StringValue value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1PropStringSetRequest)
  return target;
}

size_t Test1PropStringSetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1PropStringSetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.StringValue value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1PropStringSetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1PropStringSetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1PropStringSetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1PropStringSetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1PropStringSetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1PropStringSetRequest)
    MergeFrom(*source);
  }
}

void Test1PropStringSetRequest::MergeFrom(const Test1PropStringSetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1PropStringSetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1PropStringSetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1PropStringSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1PropStringSetRequest::CopyFrom(const Test1PropStringSetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1PropStringSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1PropStringSetRequest::IsInitialized() const {
  return true;
}

void Test1PropStringSetRequest::InternalSwap(Test1PropStringSetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1PropStringSetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1PropStringSetResponse::InitAsDefaultInstance() {
}
class Test1PropStringSetResponse::_Internal {
 public:
};

Test1PropStringSetResponse::Test1PropStringSetResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1PropStringSetResponse)
}
Test1PropStringSetResponse::Test1PropStringSetResponse(const Test1PropStringSetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.Test1PropStringSetResponse)
}

void Test1PropStringSetResponse::SharedCtor() {
}

Test1PropStringSetResponse::~Test1PropStringSetResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test1PropStringSetResponse)
  SharedDtor();
}

void Test1PropStringSetResponse::SharedDtor() {
}

void Test1PropStringSetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1PropStringSetResponse& Test1PropStringSetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1PropStringSetResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1PropStringSetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1PropStringSetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* Test1PropStringSetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1PropStringSetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1PropStringSetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1PropStringSetResponse)
  return target;
}

size_t Test1PropStringSetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1PropStringSetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1PropStringSetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1PropStringSetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1PropStringSetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1PropStringSetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1PropStringSetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1PropStringSetResponse)
    MergeFrom(*source);
  }
}

void Test1PropStringSetResponse::MergeFrom(const Test1PropStringSetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1PropStringSetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Test1PropStringSetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1PropStringSetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1PropStringSetResponse::CopyFrom(const Test1PropStringSetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1PropStringSetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1PropStringSetResponse::IsInitialized() const {
  return true;
}

void Test1PropStringSetResponse::InternalSwap(Test1PropStringSetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1PropStringSetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1PropStringGetRequest::InitAsDefaultInstance() {
}
class Test1PropStringGetRequest::_Internal {
 public:
};

Test1PropStringGetRequest::Test1PropStringGetRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1PropStringGetRequest)
}
Test1PropStringGetRequest::Test1PropStringGetRequest(const Test1PropStringGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1PropStringGetRequest)
}

void Test1PropStringGetRequest::SharedCtor() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}

Test1PropStringGetRequest::~Test1PropStringGetRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test1PropStringGetRequest)
  SharedDtor();
}

void Test1PropStringGetRequest::SharedDtor() {
}

void Test1PropStringGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1PropStringGetRequest& Test1PropStringGetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1PropStringGetRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1PropStringGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1PropStringGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1PropStringGetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1PropStringGetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1PropStringGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1PropStringGetRequest)
  return target;
}

size_t Test1PropStringGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1PropStringGetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1PropStringGetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1PropStringGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1PropStringGetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1PropStringGetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1PropStringGetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1PropStringGetRequest)
    MergeFrom(*source);
  }
}

void Test1PropStringGetRequest::MergeFrom(const Test1PropStringGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1PropStringGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1PropStringGetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1PropStringGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1PropStringGetRequest::CopyFrom(const Test1PropStringGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1PropStringGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1PropStringGetRequest::IsInitialized() const {
  return true;
}

void Test1PropStringGetRequest::InternalSwap(Test1PropStringGetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1PropStringGetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1PropStringGetResponse::InitAsDefaultInstance() {
  ::Tests::_Test1PropStringGetResponse_default_instance_._instance.get_mutable()->value_ = const_cast< PROTOBUF_NAMESPACE_ID::StringValue*>(
      PROTOBUF_NAMESPACE_ID::StringValue::internal_default_instance());
}
class Test1PropStringGetResponse::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::StringValue& value(const Test1PropStringGetResponse* msg);
};

const PROTOBUF_NAMESPACE_ID::StringValue&
Test1PropStringGetResponse::_Internal::value(const Test1PropStringGetResponse* msg) {
  return *msg->value_;
}
void Test1PropStringGetResponse::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test1PropStringGetResponse::Test1PropStringGetResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1PropStringGetResponse)
}
Test1PropStringGetResponse::Test1PropStringGetResponse(const Test1PropStringGetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Tests.Test1PropStringGetResponse)
}

void Test1PropStringGetResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test1PropStringGetResponse_gen_2eproto.base);
  value_ = nullptr;
}

Test1PropStringGetResponse::~Test1PropStringGetResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test1PropStringGetResponse)
  SharedDtor();
}

void Test1PropStringGetResponse::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test1PropStringGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1PropStringGetResponse& Test1PropStringGetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1PropStringGetResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1PropStringGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1PropStringGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  _internal_metadata_.Clear();
}

const char* Test1PropStringGetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.StringValue value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1PropStringGetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1PropStringGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue value = 1;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1PropStringGetResponse)
  return target;
}

size_t Test1PropStringGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1PropStringGetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.StringValue value = 1;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1PropStringGetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1PropStringGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1PropStringGetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1PropStringGetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1PropStringGetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1PropStringGetResponse)
    MergeFrom(*source);
  }
}

void Test1PropStringGetResponse::MergeFrom(const Test1PropStringGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1PropStringGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_value());
  }
}

void Test1PropStringGetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1PropStringGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1PropStringGetResponse::CopyFrom(const Test1PropStringGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1PropStringGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1PropStringGetResponse::IsInitialized() const {
  return true;
}

void Test1PropStringGetResponse::InternalSwap(Test1PropStringGetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1PropStringGetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1PropStringPropertyChanged::InitAsDefaultInstance() {
  ::Tests::_Test1PropStringPropertyChanged_default_instance_._instance.get_mutable()->value_ = const_cast< PROTOBUF_NAMESPACE_ID::StringValue*>(
      PROTOBUF_NAMESPACE_ID::StringValue::internal_default_instance());
}
class Test1PropStringPropertyChanged::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::StringValue& value(const Test1PropStringPropertyChanged* msg);
};

const PROTOBUF_NAMESPACE_ID::StringValue&
Test1PropStringPropertyChanged::_Internal::value(const Test1PropStringPropertyChanged* msg) {
  return *msg->value_;
}
void Test1PropStringPropertyChanged::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test1PropStringPropertyChanged::Test1PropStringPropertyChanged()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1PropStringPropertyChanged)
}
Test1PropStringPropertyChanged::Test1PropStringPropertyChanged(const Test1PropStringPropertyChanged& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1PropStringPropertyChanged)
}

void Test1PropStringPropertyChanged::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test1PropStringPropertyChanged_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

Test1PropStringPropertyChanged::~Test1PropStringPropertyChanged() {
  // @@protoc_insertion_point(destructor:Tests.Test1PropStringPropertyChanged)
  SharedDtor();
}

void Test1PropStringPropertyChanged::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test1PropStringPropertyChanged::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1PropStringPropertyChanged& Test1PropStringPropertyChanged::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1PropStringPropertyChanged_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1PropStringPropertyChanged::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1PropStringPropertyChanged)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1PropStringPropertyChanged::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1PropStringPropertyChanged::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1PropStringPropertyChanged)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .google.protobuf.StringValue value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1PropStringPropertyChanged)
  return target;
}

size_t Test1PropStringPropertyChanged::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1PropStringPropertyChanged)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.StringValue value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1PropStringPropertyChanged::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1PropStringPropertyChanged)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1PropStringPropertyChanged* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1PropStringPropertyChanged>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1PropStringPropertyChanged)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1PropStringPropertyChanged)
    MergeFrom(*source);
  }
}

void Test1PropStringPropertyChanged::MergeFrom(const Test1PropStringPropertyChanged& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1PropStringPropertyChanged)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1PropStringPropertyChanged::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1PropStringPropertyChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1PropStringPropertyChanged::CopyFrom(const Test1PropStringPropertyChanged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1PropStringPropertyChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1PropStringPropertyChanged::IsInitialized() const {
  return true;
}

void Test1PropStringPropertyChanged::InternalSwap(Test1PropStringPropertyChanged* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1PropStringPropertyChanged::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1PropComplexSetRequest::InitAsDefaultInstance() {
  ::Tests::_Test1PropComplexSetRequest_default_instance_._instance.get_mutable()->value_ = const_cast< ::custom::types::TestMessageResponse*>(
      ::custom::types::TestMessageResponse::internal_default_instance());
}
class Test1PropComplexSetRequest::_Internal {
 public:
  static const ::custom::types::TestMessageResponse& value(const Test1PropComplexSetRequest* msg);
};

const ::custom::types::TestMessageResponse&
Test1PropComplexSetRequest::_Internal::value(const Test1PropComplexSetRequest* msg) {
  return *msg->value_;
}
void Test1PropComplexSetRequest::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test1PropComplexSetRequest::Test1PropComplexSetRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1PropComplexSetRequest)
}
Test1PropComplexSetRequest::Test1PropComplexSetRequest(const Test1PropComplexSetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::custom::types::TestMessageResponse(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1PropComplexSetRequest)
}

void Test1PropComplexSetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test1PropComplexSetRequest_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

Test1PropComplexSetRequest::~Test1PropComplexSetRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test1PropComplexSetRequest)
  SharedDtor();
}

void Test1PropComplexSetRequest::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test1PropComplexSetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1PropComplexSetRequest& Test1PropComplexSetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1PropComplexSetRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1PropComplexSetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1PropComplexSetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1PropComplexSetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .custom.types.TestMessageResponse value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1PropComplexSetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1PropComplexSetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .custom.types.TestMessageResponse value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1PropComplexSetRequest)
  return target;
}

size_t Test1PropComplexSetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1PropComplexSetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .custom.types.TestMessageResponse value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1PropComplexSetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1PropComplexSetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1PropComplexSetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1PropComplexSetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1PropComplexSetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1PropComplexSetRequest)
    MergeFrom(*source);
  }
}

void Test1PropComplexSetRequest::MergeFrom(const Test1PropComplexSetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1PropComplexSetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::custom::types::TestMessageResponse::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1PropComplexSetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1PropComplexSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1PropComplexSetRequest::CopyFrom(const Test1PropComplexSetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1PropComplexSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1PropComplexSetRequest::IsInitialized() const {
  return true;
}

void Test1PropComplexSetRequest::InternalSwap(Test1PropComplexSetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1PropComplexSetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1PropComplexSetResponse::InitAsDefaultInstance() {
}
class Test1PropComplexSetResponse::_Internal {
 public:
};

Test1PropComplexSetResponse::Test1PropComplexSetResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1PropComplexSetResponse)
}
Test1PropComplexSetResponse::Test1PropComplexSetResponse(const Test1PropComplexSetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.Test1PropComplexSetResponse)
}

void Test1PropComplexSetResponse::SharedCtor() {
}

Test1PropComplexSetResponse::~Test1PropComplexSetResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test1PropComplexSetResponse)
  SharedDtor();
}

void Test1PropComplexSetResponse::SharedDtor() {
}

void Test1PropComplexSetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1PropComplexSetResponse& Test1PropComplexSetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1PropComplexSetResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1PropComplexSetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1PropComplexSetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* Test1PropComplexSetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1PropComplexSetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1PropComplexSetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1PropComplexSetResponse)
  return target;
}

size_t Test1PropComplexSetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1PropComplexSetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1PropComplexSetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1PropComplexSetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1PropComplexSetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1PropComplexSetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1PropComplexSetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1PropComplexSetResponse)
    MergeFrom(*source);
  }
}

void Test1PropComplexSetResponse::MergeFrom(const Test1PropComplexSetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1PropComplexSetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Test1PropComplexSetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1PropComplexSetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1PropComplexSetResponse::CopyFrom(const Test1PropComplexSetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1PropComplexSetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1PropComplexSetResponse::IsInitialized() const {
  return true;
}

void Test1PropComplexSetResponse::InternalSwap(Test1PropComplexSetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1PropComplexSetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1PropComplexGetRequest::InitAsDefaultInstance() {
}
class Test1PropComplexGetRequest::_Internal {
 public:
};

Test1PropComplexGetRequest::Test1PropComplexGetRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1PropComplexGetRequest)
}
Test1PropComplexGetRequest::Test1PropComplexGetRequest(const Test1PropComplexGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1PropComplexGetRequest)
}

void Test1PropComplexGetRequest::SharedCtor() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}

Test1PropComplexGetRequest::~Test1PropComplexGetRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test1PropComplexGetRequest)
  SharedDtor();
}

void Test1PropComplexGetRequest::SharedDtor() {
}

void Test1PropComplexGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1PropComplexGetRequest& Test1PropComplexGetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1PropComplexGetRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1PropComplexGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1PropComplexGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1PropComplexGetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1PropComplexGetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1PropComplexGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1PropComplexGetRequest)
  return target;
}

size_t Test1PropComplexGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1PropComplexGetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1PropComplexGetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1PropComplexGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1PropComplexGetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1PropComplexGetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1PropComplexGetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1PropComplexGetRequest)
    MergeFrom(*source);
  }
}

void Test1PropComplexGetRequest::MergeFrom(const Test1PropComplexGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1PropComplexGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1PropComplexGetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1PropComplexGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1PropComplexGetRequest::CopyFrom(const Test1PropComplexGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1PropComplexGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1PropComplexGetRequest::IsInitialized() const {
  return true;
}

void Test1PropComplexGetRequest::InternalSwap(Test1PropComplexGetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1PropComplexGetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1PropComplexGetResponse::InitAsDefaultInstance() {
  ::Tests::_Test1PropComplexGetResponse_default_instance_._instance.get_mutable()->value_ = const_cast< ::custom::types::TestMessageResponse*>(
      ::custom::types::TestMessageResponse::internal_default_instance());
}
class Test1PropComplexGetResponse::_Internal {
 public:
  static const ::custom::types::TestMessageResponse& value(const Test1PropComplexGetResponse* msg);
};

const ::custom::types::TestMessageResponse&
Test1PropComplexGetResponse::_Internal::value(const Test1PropComplexGetResponse* msg) {
  return *msg->value_;
}
void Test1PropComplexGetResponse::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test1PropComplexGetResponse::Test1PropComplexGetResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1PropComplexGetResponse)
}
Test1PropComplexGetResponse::Test1PropComplexGetResponse(const Test1PropComplexGetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::custom::types::TestMessageResponse(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Tests.Test1PropComplexGetResponse)
}

void Test1PropComplexGetResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test1PropComplexGetResponse_gen_2eproto.base);
  value_ = nullptr;
}

Test1PropComplexGetResponse::~Test1PropComplexGetResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test1PropComplexGetResponse)
  SharedDtor();
}

void Test1PropComplexGetResponse::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test1PropComplexGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1PropComplexGetResponse& Test1PropComplexGetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1PropComplexGetResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1PropComplexGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1PropComplexGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  _internal_metadata_.Clear();
}

const char* Test1PropComplexGetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .custom.types.TestMessageResponse value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1PropComplexGetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1PropComplexGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .custom.types.TestMessageResponse value = 1;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1PropComplexGetResponse)
  return target;
}

size_t Test1PropComplexGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1PropComplexGetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .custom.types.TestMessageResponse value = 1;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1PropComplexGetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1PropComplexGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1PropComplexGetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1PropComplexGetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1PropComplexGetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1PropComplexGetResponse)
    MergeFrom(*source);
  }
}

void Test1PropComplexGetResponse::MergeFrom(const Test1PropComplexGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1PropComplexGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::custom::types::TestMessageResponse::MergeFrom(from._internal_value());
  }
}

void Test1PropComplexGetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1PropComplexGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1PropComplexGetResponse::CopyFrom(const Test1PropComplexGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1PropComplexGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1PropComplexGetResponse::IsInitialized() const {
  return true;
}

void Test1PropComplexGetResponse::InternalSwap(Test1PropComplexGetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1PropComplexGetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1PropComplexPropertyChanged::InitAsDefaultInstance() {
  ::Tests::_Test1PropComplexPropertyChanged_default_instance_._instance.get_mutable()->value_ = const_cast< ::custom::types::TestMessageResponse*>(
      ::custom::types::TestMessageResponse::internal_default_instance());
}
class Test1PropComplexPropertyChanged::_Internal {
 public:
  static const ::custom::types::TestMessageResponse& value(const Test1PropComplexPropertyChanged* msg);
};

const ::custom::types::TestMessageResponse&
Test1PropComplexPropertyChanged::_Internal::value(const Test1PropComplexPropertyChanged* msg) {
  return *msg->value_;
}
void Test1PropComplexPropertyChanged::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test1PropComplexPropertyChanged::Test1PropComplexPropertyChanged()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1PropComplexPropertyChanged)
}
Test1PropComplexPropertyChanged::Test1PropComplexPropertyChanged(const Test1PropComplexPropertyChanged& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::custom::types::TestMessageResponse(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1PropComplexPropertyChanged)
}

void Test1PropComplexPropertyChanged::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test1PropComplexPropertyChanged_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

Test1PropComplexPropertyChanged::~Test1PropComplexPropertyChanged() {
  // @@protoc_insertion_point(destructor:Tests.Test1PropComplexPropertyChanged)
  SharedDtor();
}

void Test1PropComplexPropertyChanged::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test1PropComplexPropertyChanged::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1PropComplexPropertyChanged& Test1PropComplexPropertyChanged::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1PropComplexPropertyChanged_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1PropComplexPropertyChanged::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1PropComplexPropertyChanged)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1PropComplexPropertyChanged::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .custom.types.TestMessageResponse value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1PropComplexPropertyChanged::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1PropComplexPropertyChanged)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .custom.types.TestMessageResponse value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1PropComplexPropertyChanged)
  return target;
}

size_t Test1PropComplexPropertyChanged::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1PropComplexPropertyChanged)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .custom.types.TestMessageResponse value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1PropComplexPropertyChanged::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1PropComplexPropertyChanged)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1PropComplexPropertyChanged* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1PropComplexPropertyChanged>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1PropComplexPropertyChanged)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1PropComplexPropertyChanged)
    MergeFrom(*source);
  }
}

void Test1PropComplexPropertyChanged::MergeFrom(const Test1PropComplexPropertyChanged& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1PropComplexPropertyChanged)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::custom::types::TestMessageResponse::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1PropComplexPropertyChanged::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1PropComplexPropertyChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1PropComplexPropertyChanged::CopyFrom(const Test1PropComplexPropertyChanged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1PropComplexPropertyChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1PropComplexPropertyChanged::IsInitialized() const {
  return true;
}

void Test1PropComplexPropertyChanged::InternalSwap(Test1PropComplexPropertyChanged* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1PropComplexPropertyChanged::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestEventEvent::InitAsDefaultInstance() {
  ::Tests::_Test1TestEventEvent_default_instance_._instance.get_mutable()->value_ = const_cast< PROTOBUF_NAMESPACE_ID::StringValue*>(
      PROTOBUF_NAMESPACE_ID::StringValue::internal_default_instance());
}
class Test1TestEventEvent::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::StringValue& value(const Test1TestEventEvent* msg);
};

const PROTOBUF_NAMESPACE_ID::StringValue&
Test1TestEventEvent::_Internal::value(const Test1TestEventEvent* msg) {
  return *msg->value_;
}
void Test1TestEventEvent::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test1TestEventEvent::Test1TestEventEvent()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestEventEvent)
}
Test1TestEventEvent::Test1TestEventEvent(const Test1TestEventEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestEventEvent)
}

void Test1TestEventEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test1TestEventEvent_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

Test1TestEventEvent::~Test1TestEventEvent() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestEventEvent)
  SharedDtor();
}

void Test1TestEventEvent::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test1TestEventEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestEventEvent& Test1TestEventEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestEventEvent_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestEventEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestEventEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1TestEventEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestEventEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestEventEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .google.protobuf.StringValue value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestEventEvent)
  return target;
}

size_t Test1TestEventEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestEventEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.StringValue value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestEventEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestEventEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestEventEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestEventEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestEventEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestEventEvent)
    MergeFrom(*source);
  }
}

void Test1TestEventEvent::MergeFrom(const Test1TestEventEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestEventEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1TestEventEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestEventEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestEventEvent::CopyFrom(const Test1TestEventEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestEventEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestEventEvent::IsInitialized() const {
  return true;
}

void Test1TestEventEvent::InternalSwap(Test1TestEventEvent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestEventEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestEventComplexEvent::InitAsDefaultInstance() {
  ::Tests::_Test1TestEventComplexEvent_default_instance_._instance.get_mutable()->value_ = const_cast< ::custom::types::TestMessageResponse*>(
      ::custom::types::TestMessageResponse::internal_default_instance());
}
class Test1TestEventComplexEvent::_Internal {
 public:
  static const ::custom::types::TestMessageResponse& value(const Test1TestEventComplexEvent* msg);
};

const ::custom::types::TestMessageResponse&
Test1TestEventComplexEvent::_Internal::value(const Test1TestEventComplexEvent* msg) {
  return *msg->value_;
}
void Test1TestEventComplexEvent::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test1TestEventComplexEvent::Test1TestEventComplexEvent()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestEventComplexEvent)
}
Test1TestEventComplexEvent::Test1TestEventComplexEvent(const Test1TestEventComplexEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::custom::types::TestMessageResponse(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestEventComplexEvent)
}

void Test1TestEventComplexEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test1TestEventComplexEvent_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

Test1TestEventComplexEvent::~Test1TestEventComplexEvent() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestEventComplexEvent)
  SharedDtor();
}

void Test1TestEventComplexEvent::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test1TestEventComplexEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestEventComplexEvent& Test1TestEventComplexEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestEventComplexEvent_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestEventComplexEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestEventComplexEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1TestEventComplexEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .custom.types.TestMessageResponse value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestEventComplexEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestEventComplexEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .custom.types.TestMessageResponse value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestEventComplexEvent)
  return target;
}

size_t Test1TestEventComplexEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestEventComplexEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .custom.types.TestMessageResponse value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestEventComplexEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestEventComplexEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestEventComplexEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestEventComplexEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestEventComplexEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestEventComplexEvent)
    MergeFrom(*source);
  }
}

void Test1TestEventComplexEvent::MergeFrom(const Test1TestEventComplexEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestEventComplexEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::custom::types::TestMessageResponse::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1TestEventComplexEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestEventComplexEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestEventComplexEvent::CopyFrom(const Test1TestEventComplexEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestEventComplexEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestEventComplexEvent::IsInitialized() const {
  return true;
}

void Test1TestEventComplexEvent::InternalSwap(Test1TestEventComplexEvent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestEventComplexEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestEventNoDataEvent::InitAsDefaultInstance() {
}
class Test1TestEventNoDataEvent::_Internal {
 public:
};

Test1TestEventNoDataEvent::Test1TestEventNoDataEvent()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestEventNoDataEvent)
}
Test1TestEventNoDataEvent::Test1TestEventNoDataEvent(const Test1TestEventNoDataEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestEventNoDataEvent)
}

void Test1TestEventNoDataEvent::SharedCtor() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}

Test1TestEventNoDataEvent::~Test1TestEventNoDataEvent() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestEventNoDataEvent)
  SharedDtor();
}

void Test1TestEventNoDataEvent::SharedDtor() {
}

void Test1TestEventNoDataEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestEventNoDataEvent& Test1TestEventNoDataEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestEventNoDataEvent_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestEventNoDataEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestEventNoDataEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1TestEventNoDataEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestEventNoDataEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestEventNoDataEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestEventNoDataEvent)
  return target;
}

size_t Test1TestEventNoDataEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestEventNoDataEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestEventNoDataEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestEventNoDataEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestEventNoDataEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestEventNoDataEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestEventNoDataEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestEventNoDataEvent)
    MergeFrom(*source);
  }
}

void Test1TestEventNoDataEvent::MergeFrom(const Test1TestEventNoDataEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestEventNoDataEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1TestEventNoDataEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestEventNoDataEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestEventNoDataEvent::CopyFrom(const Test1TestEventNoDataEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestEventNoDataEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestEventNoDataEvent::IsInitialized() const {
  return true;
}

void Test1TestEventNoDataEvent::InternalSwap(Test1TestEventNoDataEvent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestEventNoDataEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestMethodMethodRequest::InitAsDefaultInstance() {
  ::Tests::_Test1TestMethodMethodRequest_default_instance_._instance.get_mutable()->value_ = const_cast< ::custom::types::TestMessageRequest*>(
      ::custom::types::TestMessageRequest::internal_default_instance());
}
class Test1TestMethodMethodRequest::_Internal {
 public:
  static const ::custom::types::TestMessageRequest& value(const Test1TestMethodMethodRequest* msg);
};

const ::custom::types::TestMessageRequest&
Test1TestMethodMethodRequest::_Internal::value(const Test1TestMethodMethodRequest* msg) {
  return *msg->value_;
}
void Test1TestMethodMethodRequest::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test1TestMethodMethodRequest::Test1TestMethodMethodRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestMethodMethodRequest)
}
Test1TestMethodMethodRequest::Test1TestMethodMethodRequest(const Test1TestMethodMethodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::custom::types::TestMessageRequest(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestMethodMethodRequest)
}

void Test1TestMethodMethodRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test1TestMethodMethodRequest_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

Test1TestMethodMethodRequest::~Test1TestMethodMethodRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestMethodMethodRequest)
  SharedDtor();
}

void Test1TestMethodMethodRequest::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test1TestMethodMethodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestMethodMethodRequest& Test1TestMethodMethodRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestMethodMethodRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestMethodMethodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestMethodMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1TestMethodMethodRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .custom.types.TestMessageRequest value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestMethodMethodRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestMethodMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .custom.types.TestMessageRequest value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestMethodMethodRequest)
  return target;
}

size_t Test1TestMethodMethodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestMethodMethodRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .custom.types.TestMessageRequest value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestMethodMethodRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestMethodMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestMethodMethodRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestMethodMethodRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestMethodMethodRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestMethodMethodRequest)
    MergeFrom(*source);
  }
}

void Test1TestMethodMethodRequest::MergeFrom(const Test1TestMethodMethodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestMethodMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::custom::types::TestMessageRequest::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1TestMethodMethodRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestMethodMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestMethodMethodRequest::CopyFrom(const Test1TestMethodMethodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestMethodMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestMethodMethodRequest::IsInitialized() const {
  return true;
}

void Test1TestMethodMethodRequest::InternalSwap(Test1TestMethodMethodRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestMethodMethodRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestMethodMethodResponse::InitAsDefaultInstance() {
  ::Tests::_Test1TestMethodMethodResponse_default_instance_._instance.get_mutable()->value_ = const_cast< ::custom::types::TestMessageResponse*>(
      ::custom::types::TestMessageResponse::internal_default_instance());
}
class Test1TestMethodMethodResponse::_Internal {
 public:
  static const ::custom::types::TestMessageResponse& value(const Test1TestMethodMethodResponse* msg);
};

const ::custom::types::TestMessageResponse&
Test1TestMethodMethodResponse::_Internal::value(const Test1TestMethodMethodResponse* msg) {
  return *msg->value_;
}
void Test1TestMethodMethodResponse::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test1TestMethodMethodResponse::Test1TestMethodMethodResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestMethodMethodResponse)
}
Test1TestMethodMethodResponse::Test1TestMethodMethodResponse(const Test1TestMethodMethodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::custom::types::TestMessageResponse(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestMethodMethodResponse)
}

void Test1TestMethodMethodResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test1TestMethodMethodResponse_gen_2eproto.base);
  value_ = nullptr;
}

Test1TestMethodMethodResponse::~Test1TestMethodMethodResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestMethodMethodResponse)
  SharedDtor();
}

void Test1TestMethodMethodResponse::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test1TestMethodMethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestMethodMethodResponse& Test1TestMethodMethodResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestMethodMethodResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestMethodMethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestMethodMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  _internal_metadata_.Clear();
}

const char* Test1TestMethodMethodResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .custom.types.TestMessageResponse value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestMethodMethodResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestMethodMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .custom.types.TestMessageResponse value = 1;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestMethodMethodResponse)
  return target;
}

size_t Test1TestMethodMethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestMethodMethodResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .custom.types.TestMessageResponse value = 1;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestMethodMethodResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestMethodMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestMethodMethodResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestMethodMethodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestMethodMethodResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestMethodMethodResponse)
    MergeFrom(*source);
  }
}

void Test1TestMethodMethodResponse::MergeFrom(const Test1TestMethodMethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestMethodMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::custom::types::TestMessageResponse::MergeFrom(from._internal_value());
  }
}

void Test1TestMethodMethodResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestMethodMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestMethodMethodResponse::CopyFrom(const Test1TestMethodMethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestMethodMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestMethodMethodResponse::IsInitialized() const {
  return true;
}

void Test1TestMethodMethodResponse::InternalSwap(Test1TestMethodMethodResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestMethodMethodResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestMethodSyncMethodRequest::InitAsDefaultInstance() {
  ::Tests::_Test1TestMethodSyncMethodRequest_default_instance_._instance.get_mutable()->value_ = const_cast< ::custom::types::TestMessageRequest*>(
      ::custom::types::TestMessageRequest::internal_default_instance());
}
class Test1TestMethodSyncMethodRequest::_Internal {
 public:
  static const ::custom::types::TestMessageRequest& value(const Test1TestMethodSyncMethodRequest* msg);
};

const ::custom::types::TestMessageRequest&
Test1TestMethodSyncMethodRequest::_Internal::value(const Test1TestMethodSyncMethodRequest* msg) {
  return *msg->value_;
}
void Test1TestMethodSyncMethodRequest::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test1TestMethodSyncMethodRequest::Test1TestMethodSyncMethodRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestMethodSyncMethodRequest)
}
Test1TestMethodSyncMethodRequest::Test1TestMethodSyncMethodRequest(const Test1TestMethodSyncMethodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::custom::types::TestMessageRequest(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestMethodSyncMethodRequest)
}

void Test1TestMethodSyncMethodRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test1TestMethodSyncMethodRequest_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

Test1TestMethodSyncMethodRequest::~Test1TestMethodSyncMethodRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestMethodSyncMethodRequest)
  SharedDtor();
}

void Test1TestMethodSyncMethodRequest::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test1TestMethodSyncMethodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestMethodSyncMethodRequest& Test1TestMethodSyncMethodRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestMethodSyncMethodRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestMethodSyncMethodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestMethodSyncMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1TestMethodSyncMethodRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .custom.types.TestMessageRequest value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestMethodSyncMethodRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestMethodSyncMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .custom.types.TestMessageRequest value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestMethodSyncMethodRequest)
  return target;
}

size_t Test1TestMethodSyncMethodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestMethodSyncMethodRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .custom.types.TestMessageRequest value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestMethodSyncMethodRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestMethodSyncMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestMethodSyncMethodRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestMethodSyncMethodRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestMethodSyncMethodRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestMethodSyncMethodRequest)
    MergeFrom(*source);
  }
}

void Test1TestMethodSyncMethodRequest::MergeFrom(const Test1TestMethodSyncMethodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestMethodSyncMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::custom::types::TestMessageRequest::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1TestMethodSyncMethodRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestMethodSyncMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestMethodSyncMethodRequest::CopyFrom(const Test1TestMethodSyncMethodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestMethodSyncMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestMethodSyncMethodRequest::IsInitialized() const {
  return true;
}

void Test1TestMethodSyncMethodRequest::InternalSwap(Test1TestMethodSyncMethodRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestMethodSyncMethodRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestMethodSyncMethodResponse::InitAsDefaultInstance() {
  ::Tests::_Test1TestMethodSyncMethodResponse_default_instance_._instance.get_mutable()->value_ = const_cast< ::custom::types::TestMessageResponse*>(
      ::custom::types::TestMessageResponse::internal_default_instance());
}
class Test1TestMethodSyncMethodResponse::_Internal {
 public:
  static const ::custom::types::TestMessageResponse& value(const Test1TestMethodSyncMethodResponse* msg);
};

const ::custom::types::TestMessageResponse&
Test1TestMethodSyncMethodResponse::_Internal::value(const Test1TestMethodSyncMethodResponse* msg) {
  return *msg->value_;
}
void Test1TestMethodSyncMethodResponse::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test1TestMethodSyncMethodResponse::Test1TestMethodSyncMethodResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestMethodSyncMethodResponse)
}
Test1TestMethodSyncMethodResponse::Test1TestMethodSyncMethodResponse(const Test1TestMethodSyncMethodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::custom::types::TestMessageResponse(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestMethodSyncMethodResponse)
}

void Test1TestMethodSyncMethodResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test1TestMethodSyncMethodResponse_gen_2eproto.base);
  value_ = nullptr;
}

Test1TestMethodSyncMethodResponse::~Test1TestMethodSyncMethodResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestMethodSyncMethodResponse)
  SharedDtor();
}

void Test1TestMethodSyncMethodResponse::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test1TestMethodSyncMethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestMethodSyncMethodResponse& Test1TestMethodSyncMethodResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestMethodSyncMethodResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestMethodSyncMethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestMethodSyncMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  _internal_metadata_.Clear();
}

const char* Test1TestMethodSyncMethodResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .custom.types.TestMessageResponse value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestMethodSyncMethodResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestMethodSyncMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .custom.types.TestMessageResponse value = 1;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestMethodSyncMethodResponse)
  return target;
}

size_t Test1TestMethodSyncMethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestMethodSyncMethodResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .custom.types.TestMessageResponse value = 1;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestMethodSyncMethodResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestMethodSyncMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestMethodSyncMethodResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestMethodSyncMethodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestMethodSyncMethodResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestMethodSyncMethodResponse)
    MergeFrom(*source);
  }
}

void Test1TestMethodSyncMethodResponse::MergeFrom(const Test1TestMethodSyncMethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestMethodSyncMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::custom::types::TestMessageResponse::MergeFrom(from._internal_value());
  }
}

void Test1TestMethodSyncMethodResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestMethodSyncMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestMethodSyncMethodResponse::CopyFrom(const Test1TestMethodSyncMethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestMethodSyncMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestMethodSyncMethodResponse::IsInitialized() const {
  return true;
}

void Test1TestMethodSyncMethodResponse::InternalSwap(Test1TestMethodSyncMethodResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestMethodSyncMethodResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestMethodWithNoResponseMethodRequest::InitAsDefaultInstance() {
  ::Tests::_Test1TestMethodWithNoResponseMethodRequest_default_instance_._instance.get_mutable()->value_ = const_cast< ::custom::types::TestMessageRequest*>(
      ::custom::types::TestMessageRequest::internal_default_instance());
}
class Test1TestMethodWithNoResponseMethodRequest::_Internal {
 public:
  static const ::custom::types::TestMessageRequest& value(const Test1TestMethodWithNoResponseMethodRequest* msg);
};

const ::custom::types::TestMessageRequest&
Test1TestMethodWithNoResponseMethodRequest::_Internal::value(const Test1TestMethodWithNoResponseMethodRequest* msg) {
  return *msg->value_;
}
void Test1TestMethodWithNoResponseMethodRequest::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test1TestMethodWithNoResponseMethodRequest::Test1TestMethodWithNoResponseMethodRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestMethodWithNoResponseMethodRequest)
}
Test1TestMethodWithNoResponseMethodRequest::Test1TestMethodWithNoResponseMethodRequest(const Test1TestMethodWithNoResponseMethodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::custom::types::TestMessageRequest(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestMethodWithNoResponseMethodRequest)
}

void Test1TestMethodWithNoResponseMethodRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test1TestMethodWithNoResponseMethodRequest_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

Test1TestMethodWithNoResponseMethodRequest::~Test1TestMethodWithNoResponseMethodRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestMethodWithNoResponseMethodRequest)
  SharedDtor();
}

void Test1TestMethodWithNoResponseMethodRequest::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test1TestMethodWithNoResponseMethodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestMethodWithNoResponseMethodRequest& Test1TestMethodWithNoResponseMethodRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestMethodWithNoResponseMethodRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestMethodWithNoResponseMethodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestMethodWithNoResponseMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1TestMethodWithNoResponseMethodRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .custom.types.TestMessageRequest value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestMethodWithNoResponseMethodRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestMethodWithNoResponseMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .custom.types.TestMessageRequest value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestMethodWithNoResponseMethodRequest)
  return target;
}

size_t Test1TestMethodWithNoResponseMethodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestMethodWithNoResponseMethodRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .custom.types.TestMessageRequest value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestMethodWithNoResponseMethodRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestMethodWithNoResponseMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestMethodWithNoResponseMethodRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestMethodWithNoResponseMethodRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestMethodWithNoResponseMethodRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestMethodWithNoResponseMethodRequest)
    MergeFrom(*source);
  }
}

void Test1TestMethodWithNoResponseMethodRequest::MergeFrom(const Test1TestMethodWithNoResponseMethodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestMethodWithNoResponseMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::custom::types::TestMessageRequest::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1TestMethodWithNoResponseMethodRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestMethodWithNoResponseMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestMethodWithNoResponseMethodRequest::CopyFrom(const Test1TestMethodWithNoResponseMethodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestMethodWithNoResponseMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestMethodWithNoResponseMethodRequest::IsInitialized() const {
  return true;
}

void Test1TestMethodWithNoResponseMethodRequest::InternalSwap(Test1TestMethodWithNoResponseMethodRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestMethodWithNoResponseMethodRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestMethodWithNoResponseMethodResponse::InitAsDefaultInstance() {
}
class Test1TestMethodWithNoResponseMethodResponse::_Internal {
 public:
};

Test1TestMethodWithNoResponseMethodResponse::Test1TestMethodWithNoResponseMethodResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestMethodWithNoResponseMethodResponse)
}
Test1TestMethodWithNoResponseMethodResponse::Test1TestMethodWithNoResponseMethodResponse(const Test1TestMethodWithNoResponseMethodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestMethodWithNoResponseMethodResponse)
}

void Test1TestMethodWithNoResponseMethodResponse::SharedCtor() {
}

Test1TestMethodWithNoResponseMethodResponse::~Test1TestMethodWithNoResponseMethodResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestMethodWithNoResponseMethodResponse)
  SharedDtor();
}

void Test1TestMethodWithNoResponseMethodResponse::SharedDtor() {
}

void Test1TestMethodWithNoResponseMethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestMethodWithNoResponseMethodResponse& Test1TestMethodWithNoResponseMethodResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestMethodWithNoResponseMethodResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestMethodWithNoResponseMethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestMethodWithNoResponseMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* Test1TestMethodWithNoResponseMethodResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestMethodWithNoResponseMethodResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestMethodWithNoResponseMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestMethodWithNoResponseMethodResponse)
  return target;
}

size_t Test1TestMethodWithNoResponseMethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestMethodWithNoResponseMethodResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestMethodWithNoResponseMethodResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestMethodWithNoResponseMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestMethodWithNoResponseMethodResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestMethodWithNoResponseMethodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestMethodWithNoResponseMethodResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestMethodWithNoResponseMethodResponse)
    MergeFrom(*source);
  }
}

void Test1TestMethodWithNoResponseMethodResponse::MergeFrom(const Test1TestMethodWithNoResponseMethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestMethodWithNoResponseMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Test1TestMethodWithNoResponseMethodResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestMethodWithNoResponseMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestMethodWithNoResponseMethodResponse::CopyFrom(const Test1TestMethodWithNoResponseMethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestMethodWithNoResponseMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestMethodWithNoResponseMethodResponse::IsInitialized() const {
  return true;
}

void Test1TestMethodWithNoResponseMethodResponse::InternalSwap(Test1TestMethodWithNoResponseMethodResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestMethodWithNoResponseMethodResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestMethodPrimitiveMethodRequest::InitAsDefaultInstance() {
}
class Test1TestMethodPrimitiveMethodRequest::_Internal {
 public:
};

Test1TestMethodPrimitiveMethodRequest::Test1TestMethodPrimitiveMethodRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestMethodPrimitiveMethodRequest)
}
Test1TestMethodPrimitiveMethodRequest::Test1TestMethodPrimitiveMethodRequest(const Test1TestMethodPrimitiveMethodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&objectid_, &from.objectid_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestMethodPrimitiveMethodRequest)
}

void Test1TestMethodPrimitiveMethodRequest::SharedCtor() {
  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
}

Test1TestMethodPrimitiveMethodRequest::~Test1TestMethodPrimitiveMethodRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestMethodPrimitiveMethodRequest)
  SharedDtor();
}

void Test1TestMethodPrimitiveMethodRequest::SharedDtor() {
}

void Test1TestMethodPrimitiveMethodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestMethodPrimitiveMethodRequest& Test1TestMethodPrimitiveMethodRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestMethodPrimitiveMethodRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestMethodPrimitiveMethodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestMethodPrimitiveMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

const char* Test1TestMethodPrimitiveMethodRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestMethodPrimitiveMethodRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestMethodPrimitiveMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestMethodPrimitiveMethodRequest)
  return target;
}

size_t Test1TestMethodPrimitiveMethodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestMethodPrimitiveMethodRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  // int32 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestMethodPrimitiveMethodRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestMethodPrimitiveMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestMethodPrimitiveMethodRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestMethodPrimitiveMethodRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestMethodPrimitiveMethodRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestMethodPrimitiveMethodRequest)
    MergeFrom(*source);
  }
}

void Test1TestMethodPrimitiveMethodRequest::MergeFrom(const Test1TestMethodPrimitiveMethodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestMethodPrimitiveMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
  if (from.value() != 0) {
    _internal_set_value(from._internal_value());
  }
}

void Test1TestMethodPrimitiveMethodRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestMethodPrimitiveMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestMethodPrimitiveMethodRequest::CopyFrom(const Test1TestMethodPrimitiveMethodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestMethodPrimitiveMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestMethodPrimitiveMethodRequest::IsInitialized() const {
  return true;
}

void Test1TestMethodPrimitiveMethodRequest::InternalSwap(Test1TestMethodPrimitiveMethodRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestMethodPrimitiveMethodRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestMethodPrimitiveMethodResponse::InitAsDefaultInstance() {
}
class Test1TestMethodPrimitiveMethodResponse::_Internal {
 public:
};

Test1TestMethodPrimitiveMethodResponse::Test1TestMethodPrimitiveMethodResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestMethodPrimitiveMethodResponse)
}
Test1TestMethodPrimitiveMethodResponse::Test1TestMethodPrimitiveMethodResponse(const Test1TestMethodPrimitiveMethodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestMethodPrimitiveMethodResponse)
}

void Test1TestMethodPrimitiveMethodResponse::SharedCtor() {
  value_ = 0;
}

Test1TestMethodPrimitiveMethodResponse::~Test1TestMethodPrimitiveMethodResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestMethodPrimitiveMethodResponse)
  SharedDtor();
}

void Test1TestMethodPrimitiveMethodResponse::SharedDtor() {
}

void Test1TestMethodPrimitiveMethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestMethodPrimitiveMethodResponse& Test1TestMethodPrimitiveMethodResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestMethodPrimitiveMethodResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestMethodPrimitiveMethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestMethodPrimitiveMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

const char* Test1TestMethodPrimitiveMethodResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestMethodPrimitiveMethodResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestMethodPrimitiveMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestMethodPrimitiveMethodResponse)
  return target;
}

size_t Test1TestMethodPrimitiveMethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestMethodPrimitiveMethodResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestMethodPrimitiveMethodResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestMethodPrimitiveMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestMethodPrimitiveMethodResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestMethodPrimitiveMethodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestMethodPrimitiveMethodResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestMethodPrimitiveMethodResponse)
    MergeFrom(*source);
  }
}

void Test1TestMethodPrimitiveMethodResponse::MergeFrom(const Test1TestMethodPrimitiveMethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestMethodPrimitiveMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    _internal_set_value(from._internal_value());
  }
}

void Test1TestMethodPrimitiveMethodResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestMethodPrimitiveMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestMethodPrimitiveMethodResponse::CopyFrom(const Test1TestMethodPrimitiveMethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestMethodPrimitiveMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestMethodPrimitiveMethodResponse::IsInitialized() const {
  return true;
}

void Test1TestMethodPrimitiveMethodResponse::InternalSwap(Test1TestMethodPrimitiveMethodResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestMethodPrimitiveMethodResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestMethodNoRequestOrResponseMethodRequest::InitAsDefaultInstance() {
}
class Test1TestMethodNoRequestOrResponseMethodRequest::_Internal {
 public:
};

Test1TestMethodNoRequestOrResponseMethodRequest::Test1TestMethodNoRequestOrResponseMethodRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestMethodNoRequestOrResponseMethodRequest)
}
Test1TestMethodNoRequestOrResponseMethodRequest::Test1TestMethodNoRequestOrResponseMethodRequest(const Test1TestMethodNoRequestOrResponseMethodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestMethodNoRequestOrResponseMethodRequest)
}

void Test1TestMethodNoRequestOrResponseMethodRequest::SharedCtor() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}

Test1TestMethodNoRequestOrResponseMethodRequest::~Test1TestMethodNoRequestOrResponseMethodRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestMethodNoRequestOrResponseMethodRequest)
  SharedDtor();
}

void Test1TestMethodNoRequestOrResponseMethodRequest::SharedDtor() {
}

void Test1TestMethodNoRequestOrResponseMethodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestMethodNoRequestOrResponseMethodRequest& Test1TestMethodNoRequestOrResponseMethodRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestMethodNoRequestOrResponseMethodRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestMethodNoRequestOrResponseMethodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestMethodNoRequestOrResponseMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1TestMethodNoRequestOrResponseMethodRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestMethodNoRequestOrResponseMethodRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestMethodNoRequestOrResponseMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestMethodNoRequestOrResponseMethodRequest)
  return target;
}

size_t Test1TestMethodNoRequestOrResponseMethodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestMethodNoRequestOrResponseMethodRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestMethodNoRequestOrResponseMethodRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestMethodNoRequestOrResponseMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestMethodNoRequestOrResponseMethodRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestMethodNoRequestOrResponseMethodRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestMethodNoRequestOrResponseMethodRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestMethodNoRequestOrResponseMethodRequest)
    MergeFrom(*source);
  }
}

void Test1TestMethodNoRequestOrResponseMethodRequest::MergeFrom(const Test1TestMethodNoRequestOrResponseMethodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestMethodNoRequestOrResponseMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1TestMethodNoRequestOrResponseMethodRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestMethodNoRequestOrResponseMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestMethodNoRequestOrResponseMethodRequest::CopyFrom(const Test1TestMethodNoRequestOrResponseMethodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestMethodNoRequestOrResponseMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestMethodNoRequestOrResponseMethodRequest::IsInitialized() const {
  return true;
}

void Test1TestMethodNoRequestOrResponseMethodRequest::InternalSwap(Test1TestMethodNoRequestOrResponseMethodRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestMethodNoRequestOrResponseMethodRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestMethodNoRequestOrResponseMethodResponse::InitAsDefaultInstance() {
}
class Test1TestMethodNoRequestOrResponseMethodResponse::_Internal {
 public:
};

Test1TestMethodNoRequestOrResponseMethodResponse::Test1TestMethodNoRequestOrResponseMethodResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestMethodNoRequestOrResponseMethodResponse)
}
Test1TestMethodNoRequestOrResponseMethodResponse::Test1TestMethodNoRequestOrResponseMethodResponse(const Test1TestMethodNoRequestOrResponseMethodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestMethodNoRequestOrResponseMethodResponse)
}

void Test1TestMethodNoRequestOrResponseMethodResponse::SharedCtor() {
}

Test1TestMethodNoRequestOrResponseMethodResponse::~Test1TestMethodNoRequestOrResponseMethodResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestMethodNoRequestOrResponseMethodResponse)
  SharedDtor();
}

void Test1TestMethodNoRequestOrResponseMethodResponse::SharedDtor() {
}

void Test1TestMethodNoRequestOrResponseMethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestMethodNoRequestOrResponseMethodResponse& Test1TestMethodNoRequestOrResponseMethodResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestMethodNoRequestOrResponseMethodResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestMethodNoRequestOrResponseMethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestMethodNoRequestOrResponseMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* Test1TestMethodNoRequestOrResponseMethodResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestMethodNoRequestOrResponseMethodResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestMethodNoRequestOrResponseMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestMethodNoRequestOrResponseMethodResponse)
  return target;
}

size_t Test1TestMethodNoRequestOrResponseMethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestMethodNoRequestOrResponseMethodResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestMethodNoRequestOrResponseMethodResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestMethodNoRequestOrResponseMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestMethodNoRequestOrResponseMethodResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestMethodNoRequestOrResponseMethodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestMethodNoRequestOrResponseMethodResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestMethodNoRequestOrResponseMethodResponse)
    MergeFrom(*source);
  }
}

void Test1TestMethodNoRequestOrResponseMethodResponse::MergeFrom(const Test1TestMethodNoRequestOrResponseMethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestMethodNoRequestOrResponseMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Test1TestMethodNoRequestOrResponseMethodResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestMethodNoRequestOrResponseMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestMethodNoRequestOrResponseMethodResponse::CopyFrom(const Test1TestMethodNoRequestOrResponseMethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestMethodNoRequestOrResponseMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestMethodNoRequestOrResponseMethodResponse::IsInitialized() const {
  return true;
}

void Test1TestMethodNoRequestOrResponseMethodResponse::InternalSwap(Test1TestMethodNoRequestOrResponseMethodResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestMethodNoRequestOrResponseMethodResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestMethodNoRequestMethodRequest::InitAsDefaultInstance() {
}
class Test1TestMethodNoRequestMethodRequest::_Internal {
 public:
};

Test1TestMethodNoRequestMethodRequest::Test1TestMethodNoRequestMethodRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestMethodNoRequestMethodRequest)
}
Test1TestMethodNoRequestMethodRequest::Test1TestMethodNoRequestMethodRequest(const Test1TestMethodNoRequestMethodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestMethodNoRequestMethodRequest)
}

void Test1TestMethodNoRequestMethodRequest::SharedCtor() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}

Test1TestMethodNoRequestMethodRequest::~Test1TestMethodNoRequestMethodRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestMethodNoRequestMethodRequest)
  SharedDtor();
}

void Test1TestMethodNoRequestMethodRequest::SharedDtor() {
}

void Test1TestMethodNoRequestMethodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestMethodNoRequestMethodRequest& Test1TestMethodNoRequestMethodRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestMethodNoRequestMethodRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestMethodNoRequestMethodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestMethodNoRequestMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1TestMethodNoRequestMethodRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestMethodNoRequestMethodRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestMethodNoRequestMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestMethodNoRequestMethodRequest)
  return target;
}

size_t Test1TestMethodNoRequestMethodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestMethodNoRequestMethodRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestMethodNoRequestMethodRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestMethodNoRequestMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestMethodNoRequestMethodRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestMethodNoRequestMethodRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestMethodNoRequestMethodRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestMethodNoRequestMethodRequest)
    MergeFrom(*source);
  }
}

void Test1TestMethodNoRequestMethodRequest::MergeFrom(const Test1TestMethodNoRequestMethodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestMethodNoRequestMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1TestMethodNoRequestMethodRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestMethodNoRequestMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestMethodNoRequestMethodRequest::CopyFrom(const Test1TestMethodNoRequestMethodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestMethodNoRequestMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestMethodNoRequestMethodRequest::IsInitialized() const {
  return true;
}

void Test1TestMethodNoRequestMethodRequest::InternalSwap(Test1TestMethodNoRequestMethodRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestMethodNoRequestMethodRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestMethodNoRequestMethodResponse::InitAsDefaultInstance() {
}
class Test1TestMethodNoRequestMethodResponse::_Internal {
 public:
};

Test1TestMethodNoRequestMethodResponse::Test1TestMethodNoRequestMethodResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestMethodNoRequestMethodResponse)
}
Test1TestMethodNoRequestMethodResponse::Test1TestMethodNoRequestMethodResponse(const Test1TestMethodNoRequestMethodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestMethodNoRequestMethodResponse)
}

void Test1TestMethodNoRequestMethodResponse::SharedCtor() {
  value_ = 0;
}

Test1TestMethodNoRequestMethodResponse::~Test1TestMethodNoRequestMethodResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestMethodNoRequestMethodResponse)
  SharedDtor();
}

void Test1TestMethodNoRequestMethodResponse::SharedDtor() {
}

void Test1TestMethodNoRequestMethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestMethodNoRequestMethodResponse& Test1TestMethodNoRequestMethodResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestMethodNoRequestMethodResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestMethodNoRequestMethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestMethodNoRequestMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

const char* Test1TestMethodNoRequestMethodResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestMethodNoRequestMethodResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestMethodNoRequestMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestMethodNoRequestMethodResponse)
  return target;
}

size_t Test1TestMethodNoRequestMethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestMethodNoRequestMethodResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestMethodNoRequestMethodResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestMethodNoRequestMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestMethodNoRequestMethodResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestMethodNoRequestMethodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestMethodNoRequestMethodResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestMethodNoRequestMethodResponse)
    MergeFrom(*source);
  }
}

void Test1TestMethodNoRequestMethodResponse::MergeFrom(const Test1TestMethodNoRequestMethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestMethodNoRequestMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    _internal_set_value(from._internal_value());
  }
}

void Test1TestMethodNoRequestMethodResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestMethodNoRequestMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestMethodNoRequestMethodResponse::CopyFrom(const Test1TestMethodNoRequestMethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestMethodNoRequestMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestMethodNoRequestMethodResponse::IsInitialized() const {
  return true;
}

void Test1TestMethodNoRequestMethodResponse::InternalSwap(Test1TestMethodNoRequestMethodResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestMethodNoRequestMethodResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestMethodNoResponseMethodRequest::InitAsDefaultInstance() {
}
class Test1TestMethodNoResponseMethodRequest::_Internal {
 public:
};

Test1TestMethodNoResponseMethodRequest::Test1TestMethodNoResponseMethodRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestMethodNoResponseMethodRequest)
}
Test1TestMethodNoResponseMethodRequest::Test1TestMethodNoResponseMethodRequest(const Test1TestMethodNoResponseMethodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&objectid_, &from.objectid_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestMethodNoResponseMethodRequest)
}

void Test1TestMethodNoResponseMethodRequest::SharedCtor() {
  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
}

Test1TestMethodNoResponseMethodRequest::~Test1TestMethodNoResponseMethodRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestMethodNoResponseMethodRequest)
  SharedDtor();
}

void Test1TestMethodNoResponseMethodRequest::SharedDtor() {
}

void Test1TestMethodNoResponseMethodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestMethodNoResponseMethodRequest& Test1TestMethodNoResponseMethodRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestMethodNoResponseMethodRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestMethodNoResponseMethodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestMethodNoResponseMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

const char* Test1TestMethodNoResponseMethodRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestMethodNoResponseMethodRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestMethodNoResponseMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestMethodNoResponseMethodRequest)
  return target;
}

size_t Test1TestMethodNoResponseMethodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestMethodNoResponseMethodRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  // int32 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestMethodNoResponseMethodRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestMethodNoResponseMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestMethodNoResponseMethodRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestMethodNoResponseMethodRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestMethodNoResponseMethodRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestMethodNoResponseMethodRequest)
    MergeFrom(*source);
  }
}

void Test1TestMethodNoResponseMethodRequest::MergeFrom(const Test1TestMethodNoResponseMethodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestMethodNoResponseMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
  if (from.value() != 0) {
    _internal_set_value(from._internal_value());
  }
}

void Test1TestMethodNoResponseMethodRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestMethodNoResponseMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestMethodNoResponseMethodRequest::CopyFrom(const Test1TestMethodNoResponseMethodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestMethodNoResponseMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestMethodNoResponseMethodRequest::IsInitialized() const {
  return true;
}

void Test1TestMethodNoResponseMethodRequest::InternalSwap(Test1TestMethodNoResponseMethodRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestMethodNoResponseMethodRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestMethodNoResponseMethodResponse::InitAsDefaultInstance() {
}
class Test1TestMethodNoResponseMethodResponse::_Internal {
 public:
};

Test1TestMethodNoResponseMethodResponse::Test1TestMethodNoResponseMethodResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestMethodNoResponseMethodResponse)
}
Test1TestMethodNoResponseMethodResponse::Test1TestMethodNoResponseMethodResponse(const Test1TestMethodNoResponseMethodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestMethodNoResponseMethodResponse)
}

void Test1TestMethodNoResponseMethodResponse::SharedCtor() {
}

Test1TestMethodNoResponseMethodResponse::~Test1TestMethodNoResponseMethodResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestMethodNoResponseMethodResponse)
  SharedDtor();
}

void Test1TestMethodNoResponseMethodResponse::SharedDtor() {
}

void Test1TestMethodNoResponseMethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestMethodNoResponseMethodResponse& Test1TestMethodNoResponseMethodResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestMethodNoResponseMethodResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestMethodNoResponseMethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestMethodNoResponseMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* Test1TestMethodNoResponseMethodResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestMethodNoResponseMethodResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestMethodNoResponseMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestMethodNoResponseMethodResponse)
  return target;
}

size_t Test1TestMethodNoResponseMethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestMethodNoResponseMethodResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestMethodNoResponseMethodResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestMethodNoResponseMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestMethodNoResponseMethodResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestMethodNoResponseMethodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestMethodNoResponseMethodResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestMethodNoResponseMethodResponse)
    MergeFrom(*source);
  }
}

void Test1TestMethodNoResponseMethodResponse::MergeFrom(const Test1TestMethodNoResponseMethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestMethodNoResponseMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Test1TestMethodNoResponseMethodResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestMethodNoResponseMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestMethodNoResponseMethodResponse::CopyFrom(const Test1TestMethodNoResponseMethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestMethodNoResponseMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestMethodNoResponseMethodResponse::IsInitialized() const {
  return true;
}

void Test1TestMethodNoResponseMethodResponse::InternalSwap(Test1TestMethodNoResponseMethodResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestMethodNoResponseMethodResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test2ListenEventStream::InitAsDefaultInstance() {
}
class Test2ListenEventStream::_Internal {
 public:
};

Test2ListenEventStream::Test2ListenEventStream()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test2ListenEventStream)
}
Test2ListenEventStream::Test2ListenEventStream(const Test2ListenEventStream& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test2ListenEventStream)
}

void Test2ListenEventStream::SharedCtor() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}

Test2ListenEventStream::~Test2ListenEventStream() {
  // @@protoc_insertion_point(destructor:Tests.Test2ListenEventStream)
  SharedDtor();
}

void Test2ListenEventStream::SharedDtor() {
}

void Test2ListenEventStream::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test2ListenEventStream& Test2ListenEventStream::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test2ListenEventStream_gen_2eproto.base);
  return *internal_default_instance();
}


void Test2ListenEventStream::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test2ListenEventStream)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test2ListenEventStream::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test2ListenEventStream::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test2ListenEventStream)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test2ListenEventStream)
  return target;
}

size_t Test2ListenEventStream::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test2ListenEventStream)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test2ListenEventStream::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test2ListenEventStream)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2ListenEventStream* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test2ListenEventStream>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test2ListenEventStream)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test2ListenEventStream)
    MergeFrom(*source);
  }
}

void Test2ListenEventStream::MergeFrom(const Test2ListenEventStream& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test2ListenEventStream)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test2ListenEventStream::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test2ListenEventStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2ListenEventStream::CopyFrom(const Test2ListenEventStream& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test2ListenEventStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2ListenEventStream::IsInitialized() const {
  return true;
}

void Test2ListenEventStream::InternalSwap(Test2ListenEventStream* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test2ListenEventStream::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test2CreateRequest::InitAsDefaultInstance() {
}
class Test2CreateRequest::_Internal {
 public:
};

Test2CreateRequest::Test2CreateRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test2CreateRequest)
}
Test2CreateRequest::Test2CreateRequest(const Test2CreateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.Test2CreateRequest)
}

void Test2CreateRequest::SharedCtor() {
}

Test2CreateRequest::~Test2CreateRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test2CreateRequest)
  SharedDtor();
}

void Test2CreateRequest::SharedDtor() {
}

void Test2CreateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test2CreateRequest& Test2CreateRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test2CreateRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test2CreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test2CreateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* Test2CreateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test2CreateRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test2CreateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test2CreateRequest)
  return target;
}

size_t Test2CreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test2CreateRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test2CreateRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test2CreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2CreateRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test2CreateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test2CreateRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test2CreateRequest)
    MergeFrom(*source);
  }
}

void Test2CreateRequest::MergeFrom(const Test2CreateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test2CreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Test2CreateRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test2CreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2CreateRequest::CopyFrom(const Test2CreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test2CreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2CreateRequest::IsInitialized() const {
  return true;
}

void Test2CreateRequest::InternalSwap(Test2CreateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test2CreateRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test2CreateResponse::InitAsDefaultInstance() {
}
class Test2CreateResponse::_Internal {
 public:
};

Test2CreateResponse::Test2CreateResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test2CreateResponse)
}
Test2CreateResponse::Test2CreateResponse(const Test2CreateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test2CreateResponse)
}

void Test2CreateResponse::SharedCtor() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}

Test2CreateResponse::~Test2CreateResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test2CreateResponse)
  SharedDtor();
}

void Test2CreateResponse::SharedDtor() {
}

void Test2CreateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test2CreateResponse& Test2CreateResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test2CreateResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test2CreateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test2CreateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test2CreateResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test2CreateResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test2CreateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test2CreateResponse)
  return target;
}

size_t Test2CreateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test2CreateResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test2CreateResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test2CreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2CreateResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test2CreateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test2CreateResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test2CreateResponse)
    MergeFrom(*source);
  }
}

void Test2CreateResponse::MergeFrom(const Test2CreateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test2CreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test2CreateResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test2CreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2CreateResponse::CopyFrom(const Test2CreateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test2CreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2CreateResponse::IsInitialized() const {
  return true;
}

void Test2CreateResponse::InternalSwap(Test2CreateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test2CreateResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test2PropString2SetRequest::InitAsDefaultInstance() {
  ::Tests::_Test2PropString2SetRequest_default_instance_._instance.get_mutable()->value_ = const_cast< PROTOBUF_NAMESPACE_ID::StringValue*>(
      PROTOBUF_NAMESPACE_ID::StringValue::internal_default_instance());
}
class Test2PropString2SetRequest::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::StringValue& value(const Test2PropString2SetRequest* msg);
};

const PROTOBUF_NAMESPACE_ID::StringValue&
Test2PropString2SetRequest::_Internal::value(const Test2PropString2SetRequest* msg) {
  return *msg->value_;
}
void Test2PropString2SetRequest::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test2PropString2SetRequest::Test2PropString2SetRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test2PropString2SetRequest)
}
Test2PropString2SetRequest::Test2PropString2SetRequest(const Test2PropString2SetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test2PropString2SetRequest)
}

void Test2PropString2SetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test2PropString2SetRequest_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

Test2PropString2SetRequest::~Test2PropString2SetRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test2PropString2SetRequest)
  SharedDtor();
}

void Test2PropString2SetRequest::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test2PropString2SetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test2PropString2SetRequest& Test2PropString2SetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test2PropString2SetRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test2PropString2SetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test2PropString2SetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test2PropString2SetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test2PropString2SetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test2PropString2SetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .google.protobuf.StringValue value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test2PropString2SetRequest)
  return target;
}

size_t Test2PropString2SetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test2PropString2SetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.StringValue value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test2PropString2SetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test2PropString2SetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2PropString2SetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test2PropString2SetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test2PropString2SetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test2PropString2SetRequest)
    MergeFrom(*source);
  }
}

void Test2PropString2SetRequest::MergeFrom(const Test2PropString2SetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test2PropString2SetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test2PropString2SetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test2PropString2SetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2PropString2SetRequest::CopyFrom(const Test2PropString2SetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test2PropString2SetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2PropString2SetRequest::IsInitialized() const {
  return true;
}

void Test2PropString2SetRequest::InternalSwap(Test2PropString2SetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test2PropString2SetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test2PropString2SetResponse::InitAsDefaultInstance() {
}
class Test2PropString2SetResponse::_Internal {
 public:
};

Test2PropString2SetResponse::Test2PropString2SetResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test2PropString2SetResponse)
}
Test2PropString2SetResponse::Test2PropString2SetResponse(const Test2PropString2SetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.Test2PropString2SetResponse)
}

void Test2PropString2SetResponse::SharedCtor() {
}

Test2PropString2SetResponse::~Test2PropString2SetResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test2PropString2SetResponse)
  SharedDtor();
}

void Test2PropString2SetResponse::SharedDtor() {
}

void Test2PropString2SetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test2PropString2SetResponse& Test2PropString2SetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test2PropString2SetResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test2PropString2SetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test2PropString2SetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* Test2PropString2SetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test2PropString2SetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test2PropString2SetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test2PropString2SetResponse)
  return target;
}

size_t Test2PropString2SetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test2PropString2SetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test2PropString2SetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test2PropString2SetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2PropString2SetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test2PropString2SetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test2PropString2SetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test2PropString2SetResponse)
    MergeFrom(*source);
  }
}

void Test2PropString2SetResponse::MergeFrom(const Test2PropString2SetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test2PropString2SetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Test2PropString2SetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test2PropString2SetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2PropString2SetResponse::CopyFrom(const Test2PropString2SetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test2PropString2SetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2PropString2SetResponse::IsInitialized() const {
  return true;
}

void Test2PropString2SetResponse::InternalSwap(Test2PropString2SetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test2PropString2SetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test2PropString2GetRequest::InitAsDefaultInstance() {
}
class Test2PropString2GetRequest::_Internal {
 public:
};

Test2PropString2GetRequest::Test2PropString2GetRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test2PropString2GetRequest)
}
Test2PropString2GetRequest::Test2PropString2GetRequest(const Test2PropString2GetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test2PropString2GetRequest)
}

void Test2PropString2GetRequest::SharedCtor() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}

Test2PropString2GetRequest::~Test2PropString2GetRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test2PropString2GetRequest)
  SharedDtor();
}

void Test2PropString2GetRequest::SharedDtor() {
}

void Test2PropString2GetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test2PropString2GetRequest& Test2PropString2GetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test2PropString2GetRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test2PropString2GetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test2PropString2GetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test2PropString2GetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test2PropString2GetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test2PropString2GetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test2PropString2GetRequest)
  return target;
}

size_t Test2PropString2GetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test2PropString2GetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test2PropString2GetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test2PropString2GetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2PropString2GetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test2PropString2GetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test2PropString2GetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test2PropString2GetRequest)
    MergeFrom(*source);
  }
}

void Test2PropString2GetRequest::MergeFrom(const Test2PropString2GetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test2PropString2GetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test2PropString2GetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test2PropString2GetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2PropString2GetRequest::CopyFrom(const Test2PropString2GetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test2PropString2GetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2PropString2GetRequest::IsInitialized() const {
  return true;
}

void Test2PropString2GetRequest::InternalSwap(Test2PropString2GetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test2PropString2GetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test2PropString2GetResponse::InitAsDefaultInstance() {
  ::Tests::_Test2PropString2GetResponse_default_instance_._instance.get_mutable()->value_ = const_cast< PROTOBUF_NAMESPACE_ID::StringValue*>(
      PROTOBUF_NAMESPACE_ID::StringValue::internal_default_instance());
}
class Test2PropString2GetResponse::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::StringValue& value(const Test2PropString2GetResponse* msg);
};

const PROTOBUF_NAMESPACE_ID::StringValue&
Test2PropString2GetResponse::_Internal::value(const Test2PropString2GetResponse* msg) {
  return *msg->value_;
}
void Test2PropString2GetResponse::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test2PropString2GetResponse::Test2PropString2GetResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test2PropString2GetResponse)
}
Test2PropString2GetResponse::Test2PropString2GetResponse(const Test2PropString2GetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Tests.Test2PropString2GetResponse)
}

void Test2PropString2GetResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test2PropString2GetResponse_gen_2eproto.base);
  value_ = nullptr;
}

Test2PropString2GetResponse::~Test2PropString2GetResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test2PropString2GetResponse)
  SharedDtor();
}

void Test2PropString2GetResponse::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test2PropString2GetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test2PropString2GetResponse& Test2PropString2GetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test2PropString2GetResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test2PropString2GetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test2PropString2GetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  _internal_metadata_.Clear();
}

const char* Test2PropString2GetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.StringValue value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test2PropString2GetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test2PropString2GetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue value = 1;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test2PropString2GetResponse)
  return target;
}

size_t Test2PropString2GetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test2PropString2GetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.StringValue value = 1;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test2PropString2GetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test2PropString2GetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2PropString2GetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test2PropString2GetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test2PropString2GetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test2PropString2GetResponse)
    MergeFrom(*source);
  }
}

void Test2PropString2GetResponse::MergeFrom(const Test2PropString2GetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test2PropString2GetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_value());
  }
}

void Test2PropString2GetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test2PropString2GetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2PropString2GetResponse::CopyFrom(const Test2PropString2GetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test2PropString2GetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2PropString2GetResponse::IsInitialized() const {
  return true;
}

void Test2PropString2GetResponse::InternalSwap(Test2PropString2GetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test2PropString2GetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test2PropString2PropertyChanged::InitAsDefaultInstance() {
  ::Tests::_Test2PropString2PropertyChanged_default_instance_._instance.get_mutable()->value_ = const_cast< PROTOBUF_NAMESPACE_ID::StringValue*>(
      PROTOBUF_NAMESPACE_ID::StringValue::internal_default_instance());
}
class Test2PropString2PropertyChanged::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::StringValue& value(const Test2PropString2PropertyChanged* msg);
};

const PROTOBUF_NAMESPACE_ID::StringValue&
Test2PropString2PropertyChanged::_Internal::value(const Test2PropString2PropertyChanged* msg) {
  return *msg->value_;
}
void Test2PropString2PropertyChanged::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test2PropString2PropertyChanged::Test2PropString2PropertyChanged()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test2PropString2PropertyChanged)
}
Test2PropString2PropertyChanged::Test2PropString2PropertyChanged(const Test2PropString2PropertyChanged& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test2PropString2PropertyChanged)
}

void Test2PropString2PropertyChanged::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test2PropString2PropertyChanged_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

Test2PropString2PropertyChanged::~Test2PropString2PropertyChanged() {
  // @@protoc_insertion_point(destructor:Tests.Test2PropString2PropertyChanged)
  SharedDtor();
}

void Test2PropString2PropertyChanged::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test2PropString2PropertyChanged::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test2PropString2PropertyChanged& Test2PropString2PropertyChanged::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test2PropString2PropertyChanged_gen_2eproto.base);
  return *internal_default_instance();
}


void Test2PropString2PropertyChanged::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test2PropString2PropertyChanged)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test2PropString2PropertyChanged::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test2PropString2PropertyChanged::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test2PropString2PropertyChanged)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .google.protobuf.StringValue value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test2PropString2PropertyChanged)
  return target;
}

size_t Test2PropString2PropertyChanged::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test2PropString2PropertyChanged)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.StringValue value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test2PropString2PropertyChanged::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test2PropString2PropertyChanged)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2PropString2PropertyChanged* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test2PropString2PropertyChanged>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test2PropString2PropertyChanged)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test2PropString2PropertyChanged)
    MergeFrom(*source);
  }
}

void Test2PropString2PropertyChanged::MergeFrom(const Test2PropString2PropertyChanged& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test2PropString2PropertyChanged)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test2PropString2PropertyChanged::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test2PropString2PropertyChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2PropString2PropertyChanged::CopyFrom(const Test2PropString2PropertyChanged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test2PropString2PropertyChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2PropString2PropertyChanged::IsInitialized() const {
  return true;
}

void Test2PropString2PropertyChanged::InternalSwap(Test2PropString2PropertyChanged* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test2PropString2PropertyChanged::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test2PropComplex2SetRequest::InitAsDefaultInstance() {
  ::Tests::_Test2PropComplex2SetRequest_default_instance_._instance.get_mutable()->value_ = const_cast< ::custom::types::TestMessageResponse*>(
      ::custom::types::TestMessageResponse::internal_default_instance());
}
class Test2PropComplex2SetRequest::_Internal {
 public:
  static const ::custom::types::TestMessageResponse& value(const Test2PropComplex2SetRequest* msg);
};

const ::custom::types::TestMessageResponse&
Test2PropComplex2SetRequest::_Internal::value(const Test2PropComplex2SetRequest* msg) {
  return *msg->value_;
}
void Test2PropComplex2SetRequest::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test2PropComplex2SetRequest::Test2PropComplex2SetRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test2PropComplex2SetRequest)
}
Test2PropComplex2SetRequest::Test2PropComplex2SetRequest(const Test2PropComplex2SetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::custom::types::TestMessageResponse(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test2PropComplex2SetRequest)
}

void Test2PropComplex2SetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test2PropComplex2SetRequest_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

Test2PropComplex2SetRequest::~Test2PropComplex2SetRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test2PropComplex2SetRequest)
  SharedDtor();
}

void Test2PropComplex2SetRequest::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test2PropComplex2SetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test2PropComplex2SetRequest& Test2PropComplex2SetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test2PropComplex2SetRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test2PropComplex2SetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test2PropComplex2SetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test2PropComplex2SetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .custom.types.TestMessageResponse value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test2PropComplex2SetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test2PropComplex2SetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .custom.types.TestMessageResponse value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test2PropComplex2SetRequest)
  return target;
}

size_t Test2PropComplex2SetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test2PropComplex2SetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .custom.types.TestMessageResponse value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test2PropComplex2SetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test2PropComplex2SetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2PropComplex2SetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test2PropComplex2SetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test2PropComplex2SetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test2PropComplex2SetRequest)
    MergeFrom(*source);
  }
}

void Test2PropComplex2SetRequest::MergeFrom(const Test2PropComplex2SetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test2PropComplex2SetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::custom::types::TestMessageResponse::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test2PropComplex2SetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test2PropComplex2SetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2PropComplex2SetRequest::CopyFrom(const Test2PropComplex2SetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test2PropComplex2SetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2PropComplex2SetRequest::IsInitialized() const {
  return true;
}

void Test2PropComplex2SetRequest::InternalSwap(Test2PropComplex2SetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test2PropComplex2SetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test2PropComplex2SetResponse::InitAsDefaultInstance() {
}
class Test2PropComplex2SetResponse::_Internal {
 public:
};

Test2PropComplex2SetResponse::Test2PropComplex2SetResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test2PropComplex2SetResponse)
}
Test2PropComplex2SetResponse::Test2PropComplex2SetResponse(const Test2PropComplex2SetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.Test2PropComplex2SetResponse)
}

void Test2PropComplex2SetResponse::SharedCtor() {
}

Test2PropComplex2SetResponse::~Test2PropComplex2SetResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test2PropComplex2SetResponse)
  SharedDtor();
}

void Test2PropComplex2SetResponse::SharedDtor() {
}

void Test2PropComplex2SetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test2PropComplex2SetResponse& Test2PropComplex2SetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test2PropComplex2SetResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test2PropComplex2SetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test2PropComplex2SetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* Test2PropComplex2SetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test2PropComplex2SetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test2PropComplex2SetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test2PropComplex2SetResponse)
  return target;
}

size_t Test2PropComplex2SetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test2PropComplex2SetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test2PropComplex2SetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test2PropComplex2SetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2PropComplex2SetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test2PropComplex2SetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test2PropComplex2SetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test2PropComplex2SetResponse)
    MergeFrom(*source);
  }
}

void Test2PropComplex2SetResponse::MergeFrom(const Test2PropComplex2SetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test2PropComplex2SetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Test2PropComplex2SetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test2PropComplex2SetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2PropComplex2SetResponse::CopyFrom(const Test2PropComplex2SetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test2PropComplex2SetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2PropComplex2SetResponse::IsInitialized() const {
  return true;
}

void Test2PropComplex2SetResponse::InternalSwap(Test2PropComplex2SetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test2PropComplex2SetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test2PropComplex2GetRequest::InitAsDefaultInstance() {
}
class Test2PropComplex2GetRequest::_Internal {
 public:
};

Test2PropComplex2GetRequest::Test2PropComplex2GetRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test2PropComplex2GetRequest)
}
Test2PropComplex2GetRequest::Test2PropComplex2GetRequest(const Test2PropComplex2GetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test2PropComplex2GetRequest)
}

void Test2PropComplex2GetRequest::SharedCtor() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}

Test2PropComplex2GetRequest::~Test2PropComplex2GetRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test2PropComplex2GetRequest)
  SharedDtor();
}

void Test2PropComplex2GetRequest::SharedDtor() {
}

void Test2PropComplex2GetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test2PropComplex2GetRequest& Test2PropComplex2GetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test2PropComplex2GetRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test2PropComplex2GetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test2PropComplex2GetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test2PropComplex2GetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test2PropComplex2GetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test2PropComplex2GetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test2PropComplex2GetRequest)
  return target;
}

size_t Test2PropComplex2GetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test2PropComplex2GetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test2PropComplex2GetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test2PropComplex2GetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2PropComplex2GetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test2PropComplex2GetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test2PropComplex2GetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test2PropComplex2GetRequest)
    MergeFrom(*source);
  }
}

void Test2PropComplex2GetRequest::MergeFrom(const Test2PropComplex2GetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test2PropComplex2GetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test2PropComplex2GetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test2PropComplex2GetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2PropComplex2GetRequest::CopyFrom(const Test2PropComplex2GetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test2PropComplex2GetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2PropComplex2GetRequest::IsInitialized() const {
  return true;
}

void Test2PropComplex2GetRequest::InternalSwap(Test2PropComplex2GetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test2PropComplex2GetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test2PropComplex2GetResponse::InitAsDefaultInstance() {
  ::Tests::_Test2PropComplex2GetResponse_default_instance_._instance.get_mutable()->value_ = const_cast< ::custom::types::TestMessageResponse*>(
      ::custom::types::TestMessageResponse::internal_default_instance());
}
class Test2PropComplex2GetResponse::_Internal {
 public:
  static const ::custom::types::TestMessageResponse& value(const Test2PropComplex2GetResponse* msg);
};

const ::custom::types::TestMessageResponse&
Test2PropComplex2GetResponse::_Internal::value(const Test2PropComplex2GetResponse* msg) {
  return *msg->value_;
}
void Test2PropComplex2GetResponse::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test2PropComplex2GetResponse::Test2PropComplex2GetResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test2PropComplex2GetResponse)
}
Test2PropComplex2GetResponse::Test2PropComplex2GetResponse(const Test2PropComplex2GetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::custom::types::TestMessageResponse(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Tests.Test2PropComplex2GetResponse)
}

void Test2PropComplex2GetResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test2PropComplex2GetResponse_gen_2eproto.base);
  value_ = nullptr;
}

Test2PropComplex2GetResponse::~Test2PropComplex2GetResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test2PropComplex2GetResponse)
  SharedDtor();
}

void Test2PropComplex2GetResponse::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test2PropComplex2GetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test2PropComplex2GetResponse& Test2PropComplex2GetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test2PropComplex2GetResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test2PropComplex2GetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test2PropComplex2GetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  _internal_metadata_.Clear();
}

const char* Test2PropComplex2GetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .custom.types.TestMessageResponse value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test2PropComplex2GetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test2PropComplex2GetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .custom.types.TestMessageResponse value = 1;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test2PropComplex2GetResponse)
  return target;
}

size_t Test2PropComplex2GetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test2PropComplex2GetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .custom.types.TestMessageResponse value = 1;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test2PropComplex2GetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test2PropComplex2GetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2PropComplex2GetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test2PropComplex2GetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test2PropComplex2GetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test2PropComplex2GetResponse)
    MergeFrom(*source);
  }
}

void Test2PropComplex2GetResponse::MergeFrom(const Test2PropComplex2GetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test2PropComplex2GetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::custom::types::TestMessageResponse::MergeFrom(from._internal_value());
  }
}

void Test2PropComplex2GetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test2PropComplex2GetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2PropComplex2GetResponse::CopyFrom(const Test2PropComplex2GetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test2PropComplex2GetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2PropComplex2GetResponse::IsInitialized() const {
  return true;
}

void Test2PropComplex2GetResponse::InternalSwap(Test2PropComplex2GetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test2PropComplex2GetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test2PropComplex2PropertyChanged::InitAsDefaultInstance() {
  ::Tests::_Test2PropComplex2PropertyChanged_default_instance_._instance.get_mutable()->value_ = const_cast< ::custom::types::TestMessageResponse*>(
      ::custom::types::TestMessageResponse::internal_default_instance());
}
class Test2PropComplex2PropertyChanged::_Internal {
 public:
  static const ::custom::types::TestMessageResponse& value(const Test2PropComplex2PropertyChanged* msg);
};

const ::custom::types::TestMessageResponse&
Test2PropComplex2PropertyChanged::_Internal::value(const Test2PropComplex2PropertyChanged* msg) {
  return *msg->value_;
}
void Test2PropComplex2PropertyChanged::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test2PropComplex2PropertyChanged::Test2PropComplex2PropertyChanged()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test2PropComplex2PropertyChanged)
}
Test2PropComplex2PropertyChanged::Test2PropComplex2PropertyChanged(const Test2PropComplex2PropertyChanged& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::custom::types::TestMessageResponse(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test2PropComplex2PropertyChanged)
}

void Test2PropComplex2PropertyChanged::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test2PropComplex2PropertyChanged_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

Test2PropComplex2PropertyChanged::~Test2PropComplex2PropertyChanged() {
  // @@protoc_insertion_point(destructor:Tests.Test2PropComplex2PropertyChanged)
  SharedDtor();
}

void Test2PropComplex2PropertyChanged::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test2PropComplex2PropertyChanged::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test2PropComplex2PropertyChanged& Test2PropComplex2PropertyChanged::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test2PropComplex2PropertyChanged_gen_2eproto.base);
  return *internal_default_instance();
}


void Test2PropComplex2PropertyChanged::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test2PropComplex2PropertyChanged)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test2PropComplex2PropertyChanged::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .custom.types.TestMessageResponse value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test2PropComplex2PropertyChanged::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test2PropComplex2PropertyChanged)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .custom.types.TestMessageResponse value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test2PropComplex2PropertyChanged)
  return target;
}

size_t Test2PropComplex2PropertyChanged::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test2PropComplex2PropertyChanged)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .custom.types.TestMessageResponse value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test2PropComplex2PropertyChanged::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test2PropComplex2PropertyChanged)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2PropComplex2PropertyChanged* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test2PropComplex2PropertyChanged>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test2PropComplex2PropertyChanged)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test2PropComplex2PropertyChanged)
    MergeFrom(*source);
  }
}

void Test2PropComplex2PropertyChanged::MergeFrom(const Test2PropComplex2PropertyChanged& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test2PropComplex2PropertyChanged)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::custom::types::TestMessageResponse::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test2PropComplex2PropertyChanged::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test2PropComplex2PropertyChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2PropComplex2PropertyChanged::CopyFrom(const Test2PropComplex2PropertyChanged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test2PropComplex2PropertyChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2PropComplex2PropertyChanged::IsInitialized() const {
  return true;
}

void Test2PropComplex2PropertyChanged::InternalSwap(Test2PropComplex2PropertyChanged* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test2PropComplex2PropertyChanged::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test2TestEvent2Event::InitAsDefaultInstance() {
  ::Tests::_Test2TestEvent2Event_default_instance_._instance.get_mutable()->value_ = const_cast< PROTOBUF_NAMESPACE_ID::StringValue*>(
      PROTOBUF_NAMESPACE_ID::StringValue::internal_default_instance());
}
class Test2TestEvent2Event::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::StringValue& value(const Test2TestEvent2Event* msg);
};

const PROTOBUF_NAMESPACE_ID::StringValue&
Test2TestEvent2Event::_Internal::value(const Test2TestEvent2Event* msg) {
  return *msg->value_;
}
void Test2TestEvent2Event::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test2TestEvent2Event::Test2TestEvent2Event()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test2TestEvent2Event)
}
Test2TestEvent2Event::Test2TestEvent2Event(const Test2TestEvent2Event& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test2TestEvent2Event)
}

void Test2TestEvent2Event::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test2TestEvent2Event_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

Test2TestEvent2Event::~Test2TestEvent2Event() {
  // @@protoc_insertion_point(destructor:Tests.Test2TestEvent2Event)
  SharedDtor();
}

void Test2TestEvent2Event::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test2TestEvent2Event::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test2TestEvent2Event& Test2TestEvent2Event::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test2TestEvent2Event_gen_2eproto.base);
  return *internal_default_instance();
}


void Test2TestEvent2Event::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test2TestEvent2Event)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test2TestEvent2Event::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test2TestEvent2Event::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test2TestEvent2Event)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .google.protobuf.StringValue value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test2TestEvent2Event)
  return target;
}

size_t Test2TestEvent2Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test2TestEvent2Event)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.StringValue value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test2TestEvent2Event::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test2TestEvent2Event)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2TestEvent2Event* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test2TestEvent2Event>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test2TestEvent2Event)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test2TestEvent2Event)
    MergeFrom(*source);
  }
}

void Test2TestEvent2Event::MergeFrom(const Test2TestEvent2Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test2TestEvent2Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test2TestEvent2Event::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test2TestEvent2Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2TestEvent2Event::CopyFrom(const Test2TestEvent2Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test2TestEvent2Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2TestEvent2Event::IsInitialized() const {
  return true;
}

void Test2TestEvent2Event::InternalSwap(Test2TestEvent2Event* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test2TestEvent2Event::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test2TestEventComplex2Event::InitAsDefaultInstance() {
  ::Tests::_Test2TestEventComplex2Event_default_instance_._instance.get_mutable()->value_ = const_cast< ::custom::types::TestMessageResponse*>(
      ::custom::types::TestMessageResponse::internal_default_instance());
}
class Test2TestEventComplex2Event::_Internal {
 public:
  static const ::custom::types::TestMessageResponse& value(const Test2TestEventComplex2Event* msg);
};

const ::custom::types::TestMessageResponse&
Test2TestEventComplex2Event::_Internal::value(const Test2TestEventComplex2Event* msg) {
  return *msg->value_;
}
void Test2TestEventComplex2Event::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test2TestEventComplex2Event::Test2TestEventComplex2Event()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test2TestEventComplex2Event)
}
Test2TestEventComplex2Event::Test2TestEventComplex2Event(const Test2TestEventComplex2Event& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::custom::types::TestMessageResponse(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test2TestEventComplex2Event)
}

void Test2TestEventComplex2Event::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test2TestEventComplex2Event_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

Test2TestEventComplex2Event::~Test2TestEventComplex2Event() {
  // @@protoc_insertion_point(destructor:Tests.Test2TestEventComplex2Event)
  SharedDtor();
}

void Test2TestEventComplex2Event::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test2TestEventComplex2Event::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test2TestEventComplex2Event& Test2TestEventComplex2Event::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test2TestEventComplex2Event_gen_2eproto.base);
  return *internal_default_instance();
}


void Test2TestEventComplex2Event::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test2TestEventComplex2Event)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test2TestEventComplex2Event::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .custom.types.TestMessageResponse value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test2TestEventComplex2Event::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test2TestEventComplex2Event)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .custom.types.TestMessageResponse value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test2TestEventComplex2Event)
  return target;
}

size_t Test2TestEventComplex2Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test2TestEventComplex2Event)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .custom.types.TestMessageResponse value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test2TestEventComplex2Event::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test2TestEventComplex2Event)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2TestEventComplex2Event* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test2TestEventComplex2Event>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test2TestEventComplex2Event)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test2TestEventComplex2Event)
    MergeFrom(*source);
  }
}

void Test2TestEventComplex2Event::MergeFrom(const Test2TestEventComplex2Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test2TestEventComplex2Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::custom::types::TestMessageResponse::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test2TestEventComplex2Event::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test2TestEventComplex2Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2TestEventComplex2Event::CopyFrom(const Test2TestEventComplex2Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test2TestEventComplex2Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2TestEventComplex2Event::IsInitialized() const {
  return true;
}

void Test2TestEventComplex2Event::InternalSwap(Test2TestEventComplex2Event* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test2TestEventComplex2Event::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test2TestEventNoData2Event::InitAsDefaultInstance() {
}
class Test2TestEventNoData2Event::_Internal {
 public:
};

Test2TestEventNoData2Event::Test2TestEventNoData2Event()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test2TestEventNoData2Event)
}
Test2TestEventNoData2Event::Test2TestEventNoData2Event(const Test2TestEventNoData2Event& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test2TestEventNoData2Event)
}

void Test2TestEventNoData2Event::SharedCtor() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}

Test2TestEventNoData2Event::~Test2TestEventNoData2Event() {
  // @@protoc_insertion_point(destructor:Tests.Test2TestEventNoData2Event)
  SharedDtor();
}

void Test2TestEventNoData2Event::SharedDtor() {
}

void Test2TestEventNoData2Event::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test2TestEventNoData2Event& Test2TestEventNoData2Event::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test2TestEventNoData2Event_gen_2eproto.base);
  return *internal_default_instance();
}


void Test2TestEventNoData2Event::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test2TestEventNoData2Event)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test2TestEventNoData2Event::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test2TestEventNoData2Event::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test2TestEventNoData2Event)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test2TestEventNoData2Event)
  return target;
}

size_t Test2TestEventNoData2Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test2TestEventNoData2Event)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test2TestEventNoData2Event::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test2TestEventNoData2Event)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2TestEventNoData2Event* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test2TestEventNoData2Event>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test2TestEventNoData2Event)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test2TestEventNoData2Event)
    MergeFrom(*source);
  }
}

void Test2TestEventNoData2Event::MergeFrom(const Test2TestEventNoData2Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test2TestEventNoData2Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test2TestEventNoData2Event::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test2TestEventNoData2Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2TestEventNoData2Event::CopyFrom(const Test2TestEventNoData2Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test2TestEventNoData2Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2TestEventNoData2Event::IsInitialized() const {
  return true;
}

void Test2TestEventNoData2Event::InternalSwap(Test2TestEventNoData2Event* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test2TestEventNoData2Event::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test2TestMethod2MethodRequest::InitAsDefaultInstance() {
  ::Tests::_Test2TestMethod2MethodRequest_default_instance_._instance.get_mutable()->value_ = const_cast< ::custom::types::TestMessageRequest*>(
      ::custom::types::TestMessageRequest::internal_default_instance());
}
class Test2TestMethod2MethodRequest::_Internal {
 public:
  static const ::custom::types::TestMessageRequest& value(const Test2TestMethod2MethodRequest* msg);
};

const ::custom::types::TestMessageRequest&
Test2TestMethod2MethodRequest::_Internal::value(const Test2TestMethod2MethodRequest* msg) {
  return *msg->value_;
}
void Test2TestMethod2MethodRequest::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test2TestMethod2MethodRequest::Test2TestMethod2MethodRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test2TestMethod2MethodRequest)
}
Test2TestMethod2MethodRequest::Test2TestMethod2MethodRequest(const Test2TestMethod2MethodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::custom::types::TestMessageRequest(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test2TestMethod2MethodRequest)
}

void Test2TestMethod2MethodRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test2TestMethod2MethodRequest_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

Test2TestMethod2MethodRequest::~Test2TestMethod2MethodRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test2TestMethod2MethodRequest)
  SharedDtor();
}

void Test2TestMethod2MethodRequest::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test2TestMethod2MethodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test2TestMethod2MethodRequest& Test2TestMethod2MethodRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test2TestMethod2MethodRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test2TestMethod2MethodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test2TestMethod2MethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test2TestMethod2MethodRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .custom.types.TestMessageRequest value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test2TestMethod2MethodRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test2TestMethod2MethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .custom.types.TestMessageRequest value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test2TestMethod2MethodRequest)
  return target;
}

size_t Test2TestMethod2MethodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test2TestMethod2MethodRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .custom.types.TestMessageRequest value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test2TestMethod2MethodRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test2TestMethod2MethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2TestMethod2MethodRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test2TestMethod2MethodRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test2TestMethod2MethodRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test2TestMethod2MethodRequest)
    MergeFrom(*source);
  }
}

void Test2TestMethod2MethodRequest::MergeFrom(const Test2TestMethod2MethodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test2TestMethod2MethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::custom::types::TestMessageRequest::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test2TestMethod2MethodRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test2TestMethod2MethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2TestMethod2MethodRequest::CopyFrom(const Test2TestMethod2MethodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test2TestMethod2MethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2TestMethod2MethodRequest::IsInitialized() const {
  return true;
}

void Test2TestMethod2MethodRequest::InternalSwap(Test2TestMethod2MethodRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test2TestMethod2MethodRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test2TestMethod2MethodResponse::InitAsDefaultInstance() {
  ::Tests::_Test2TestMethod2MethodResponse_default_instance_._instance.get_mutable()->value_ = const_cast< ::custom::types::TestMessageResponse*>(
      ::custom::types::TestMessageResponse::internal_default_instance());
}
class Test2TestMethod2MethodResponse::_Internal {
 public:
  static const ::custom::types::TestMessageResponse& value(const Test2TestMethod2MethodResponse* msg);
};

const ::custom::types::TestMessageResponse&
Test2TestMethod2MethodResponse::_Internal::value(const Test2TestMethod2MethodResponse* msg) {
  return *msg->value_;
}
void Test2TestMethod2MethodResponse::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test2TestMethod2MethodResponse::Test2TestMethod2MethodResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test2TestMethod2MethodResponse)
}
Test2TestMethod2MethodResponse::Test2TestMethod2MethodResponse(const Test2TestMethod2MethodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::custom::types::TestMessageResponse(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Tests.Test2TestMethod2MethodResponse)
}

void Test2TestMethod2MethodResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test2TestMethod2MethodResponse_gen_2eproto.base);
  value_ = nullptr;
}

Test2TestMethod2MethodResponse::~Test2TestMethod2MethodResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test2TestMethod2MethodResponse)
  SharedDtor();
}

void Test2TestMethod2MethodResponse::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test2TestMethod2MethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test2TestMethod2MethodResponse& Test2TestMethod2MethodResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test2TestMethod2MethodResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test2TestMethod2MethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test2TestMethod2MethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  _internal_metadata_.Clear();
}

const char* Test2TestMethod2MethodResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .custom.types.TestMessageResponse value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test2TestMethod2MethodResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test2TestMethod2MethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .custom.types.TestMessageResponse value = 1;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test2TestMethod2MethodResponse)
  return target;
}

size_t Test2TestMethod2MethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test2TestMethod2MethodResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .custom.types.TestMessageResponse value = 1;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test2TestMethod2MethodResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test2TestMethod2MethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2TestMethod2MethodResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test2TestMethod2MethodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test2TestMethod2MethodResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test2TestMethod2MethodResponse)
    MergeFrom(*source);
  }
}

void Test2TestMethod2MethodResponse::MergeFrom(const Test2TestMethod2MethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test2TestMethod2MethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::custom::types::TestMessageResponse::MergeFrom(from._internal_value());
  }
}

void Test2TestMethod2MethodResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test2TestMethod2MethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2TestMethod2MethodResponse::CopyFrom(const Test2TestMethod2MethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test2TestMethod2MethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2TestMethod2MethodResponse::IsInitialized() const {
  return true;
}

void Test2TestMethod2MethodResponse::InternalSwap(Test2TestMethod2MethodResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test2TestMethod2MethodResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test2TestMethodSync2MethodRequest::InitAsDefaultInstance() {
  ::Tests::_Test2TestMethodSync2MethodRequest_default_instance_._instance.get_mutable()->value_ = const_cast< ::custom::types::TestMessageRequest*>(
      ::custom::types::TestMessageRequest::internal_default_instance());
}
class Test2TestMethodSync2MethodRequest::_Internal {
 public:
  static const ::custom::types::TestMessageRequest& value(const Test2TestMethodSync2MethodRequest* msg);
};

const ::custom::types::TestMessageRequest&
Test2TestMethodSync2MethodRequest::_Internal::value(const Test2TestMethodSync2MethodRequest* msg) {
  return *msg->value_;
}
void Test2TestMethodSync2MethodRequest::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test2TestMethodSync2MethodRequest::Test2TestMethodSync2MethodRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test2TestMethodSync2MethodRequest)
}
Test2TestMethodSync2MethodRequest::Test2TestMethodSync2MethodRequest(const Test2TestMethodSync2MethodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::custom::types::TestMessageRequest(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test2TestMethodSync2MethodRequest)
}

void Test2TestMethodSync2MethodRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test2TestMethodSync2MethodRequest_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

Test2TestMethodSync2MethodRequest::~Test2TestMethodSync2MethodRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test2TestMethodSync2MethodRequest)
  SharedDtor();
}

void Test2TestMethodSync2MethodRequest::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test2TestMethodSync2MethodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test2TestMethodSync2MethodRequest& Test2TestMethodSync2MethodRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test2TestMethodSync2MethodRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test2TestMethodSync2MethodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test2TestMethodSync2MethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test2TestMethodSync2MethodRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .custom.types.TestMessageRequest value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test2TestMethodSync2MethodRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test2TestMethodSync2MethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .custom.types.TestMessageRequest value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test2TestMethodSync2MethodRequest)
  return target;
}

size_t Test2TestMethodSync2MethodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test2TestMethodSync2MethodRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .custom.types.TestMessageRequest value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test2TestMethodSync2MethodRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test2TestMethodSync2MethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2TestMethodSync2MethodRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test2TestMethodSync2MethodRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test2TestMethodSync2MethodRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test2TestMethodSync2MethodRequest)
    MergeFrom(*source);
  }
}

void Test2TestMethodSync2MethodRequest::MergeFrom(const Test2TestMethodSync2MethodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test2TestMethodSync2MethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::custom::types::TestMessageRequest::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test2TestMethodSync2MethodRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test2TestMethodSync2MethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2TestMethodSync2MethodRequest::CopyFrom(const Test2TestMethodSync2MethodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test2TestMethodSync2MethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2TestMethodSync2MethodRequest::IsInitialized() const {
  return true;
}

void Test2TestMethodSync2MethodRequest::InternalSwap(Test2TestMethodSync2MethodRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test2TestMethodSync2MethodRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test2TestMethodSync2MethodResponse::InitAsDefaultInstance() {
  ::Tests::_Test2TestMethodSync2MethodResponse_default_instance_._instance.get_mutable()->value_ = const_cast< ::custom::types::TestMessageResponse*>(
      ::custom::types::TestMessageResponse::internal_default_instance());
}
class Test2TestMethodSync2MethodResponse::_Internal {
 public:
  static const ::custom::types::TestMessageResponse& value(const Test2TestMethodSync2MethodResponse* msg);
};

const ::custom::types::TestMessageResponse&
Test2TestMethodSync2MethodResponse::_Internal::value(const Test2TestMethodSync2MethodResponse* msg) {
  return *msg->value_;
}
void Test2TestMethodSync2MethodResponse::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test2TestMethodSync2MethodResponse::Test2TestMethodSync2MethodResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test2TestMethodSync2MethodResponse)
}
Test2TestMethodSync2MethodResponse::Test2TestMethodSync2MethodResponse(const Test2TestMethodSync2MethodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::custom::types::TestMessageResponse(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Tests.Test2TestMethodSync2MethodResponse)
}

void Test2TestMethodSync2MethodResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test2TestMethodSync2MethodResponse_gen_2eproto.base);
  value_ = nullptr;
}

Test2TestMethodSync2MethodResponse::~Test2TestMethodSync2MethodResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test2TestMethodSync2MethodResponse)
  SharedDtor();
}

void Test2TestMethodSync2MethodResponse::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test2TestMethodSync2MethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test2TestMethodSync2MethodResponse& Test2TestMethodSync2MethodResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test2TestMethodSync2MethodResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test2TestMethodSync2MethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test2TestMethodSync2MethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  _internal_metadata_.Clear();
}

const char* Test2TestMethodSync2MethodResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .custom.types.TestMessageResponse value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test2TestMethodSync2MethodResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test2TestMethodSync2MethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .custom.types.TestMessageResponse value = 1;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test2TestMethodSync2MethodResponse)
  return target;
}

size_t Test2TestMethodSync2MethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test2TestMethodSync2MethodResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .custom.types.TestMessageResponse value = 1;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test2TestMethodSync2MethodResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test2TestMethodSync2MethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2TestMethodSync2MethodResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test2TestMethodSync2MethodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test2TestMethodSync2MethodResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test2TestMethodSync2MethodResponse)
    MergeFrom(*source);
  }
}

void Test2TestMethodSync2MethodResponse::MergeFrom(const Test2TestMethodSync2MethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test2TestMethodSync2MethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::custom::types::TestMessageResponse::MergeFrom(from._internal_value());
  }
}

void Test2TestMethodSync2MethodResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test2TestMethodSync2MethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2TestMethodSync2MethodResponse::CopyFrom(const Test2TestMethodSync2MethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test2TestMethodSync2MethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2TestMethodSync2MethodResponse::IsInitialized() const {
  return true;
}

void Test2TestMethodSync2MethodResponse::InternalSwap(Test2TestMethodSync2MethodResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test2TestMethodSync2MethodResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test2TestMethodWithNoResponse2MethodRequest::InitAsDefaultInstance() {
  ::Tests::_Test2TestMethodWithNoResponse2MethodRequest_default_instance_._instance.get_mutable()->value_ = const_cast< ::custom::types::TestMessageRequest*>(
      ::custom::types::TestMessageRequest::internal_default_instance());
}
class Test2TestMethodWithNoResponse2MethodRequest::_Internal {
 public:
  static const ::custom::types::TestMessageRequest& value(const Test2TestMethodWithNoResponse2MethodRequest* msg);
};

const ::custom::types::TestMessageRequest&
Test2TestMethodWithNoResponse2MethodRequest::_Internal::value(const Test2TestMethodWithNoResponse2MethodRequest* msg) {
  return *msg->value_;
}
void Test2TestMethodWithNoResponse2MethodRequest::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test2TestMethodWithNoResponse2MethodRequest::Test2TestMethodWithNoResponse2MethodRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test2TestMethodWithNoResponse2MethodRequest)
}
Test2TestMethodWithNoResponse2MethodRequest::Test2TestMethodWithNoResponse2MethodRequest(const Test2TestMethodWithNoResponse2MethodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::custom::types::TestMessageRequest(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test2TestMethodWithNoResponse2MethodRequest)
}

void Test2TestMethodWithNoResponse2MethodRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test2TestMethodWithNoResponse2MethodRequest_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

Test2TestMethodWithNoResponse2MethodRequest::~Test2TestMethodWithNoResponse2MethodRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test2TestMethodWithNoResponse2MethodRequest)
  SharedDtor();
}

void Test2TestMethodWithNoResponse2MethodRequest::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test2TestMethodWithNoResponse2MethodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test2TestMethodWithNoResponse2MethodRequest& Test2TestMethodWithNoResponse2MethodRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test2TestMethodWithNoResponse2MethodRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test2TestMethodWithNoResponse2MethodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test2TestMethodWithNoResponse2MethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test2TestMethodWithNoResponse2MethodRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .custom.types.TestMessageRequest value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test2TestMethodWithNoResponse2MethodRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test2TestMethodWithNoResponse2MethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .custom.types.TestMessageRequest value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test2TestMethodWithNoResponse2MethodRequest)
  return target;
}

size_t Test2TestMethodWithNoResponse2MethodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test2TestMethodWithNoResponse2MethodRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .custom.types.TestMessageRequest value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test2TestMethodWithNoResponse2MethodRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test2TestMethodWithNoResponse2MethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2TestMethodWithNoResponse2MethodRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test2TestMethodWithNoResponse2MethodRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test2TestMethodWithNoResponse2MethodRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test2TestMethodWithNoResponse2MethodRequest)
    MergeFrom(*source);
  }
}

void Test2TestMethodWithNoResponse2MethodRequest::MergeFrom(const Test2TestMethodWithNoResponse2MethodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test2TestMethodWithNoResponse2MethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::custom::types::TestMessageRequest::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test2TestMethodWithNoResponse2MethodRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test2TestMethodWithNoResponse2MethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2TestMethodWithNoResponse2MethodRequest::CopyFrom(const Test2TestMethodWithNoResponse2MethodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test2TestMethodWithNoResponse2MethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2TestMethodWithNoResponse2MethodRequest::IsInitialized() const {
  return true;
}

void Test2TestMethodWithNoResponse2MethodRequest::InternalSwap(Test2TestMethodWithNoResponse2MethodRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test2TestMethodWithNoResponse2MethodRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test2TestMethodWithNoResponse2MethodResponse::InitAsDefaultInstance() {
}
class Test2TestMethodWithNoResponse2MethodResponse::_Internal {
 public:
};

Test2TestMethodWithNoResponse2MethodResponse::Test2TestMethodWithNoResponse2MethodResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test2TestMethodWithNoResponse2MethodResponse)
}
Test2TestMethodWithNoResponse2MethodResponse::Test2TestMethodWithNoResponse2MethodResponse(const Test2TestMethodWithNoResponse2MethodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.Test2TestMethodWithNoResponse2MethodResponse)
}

void Test2TestMethodWithNoResponse2MethodResponse::SharedCtor() {
}

Test2TestMethodWithNoResponse2MethodResponse::~Test2TestMethodWithNoResponse2MethodResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test2TestMethodWithNoResponse2MethodResponse)
  SharedDtor();
}

void Test2TestMethodWithNoResponse2MethodResponse::SharedDtor() {
}

void Test2TestMethodWithNoResponse2MethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test2TestMethodWithNoResponse2MethodResponse& Test2TestMethodWithNoResponse2MethodResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test2TestMethodWithNoResponse2MethodResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test2TestMethodWithNoResponse2MethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test2TestMethodWithNoResponse2MethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* Test2TestMethodWithNoResponse2MethodResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test2TestMethodWithNoResponse2MethodResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test2TestMethodWithNoResponse2MethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test2TestMethodWithNoResponse2MethodResponse)
  return target;
}

size_t Test2TestMethodWithNoResponse2MethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test2TestMethodWithNoResponse2MethodResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test2TestMethodWithNoResponse2MethodResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test2TestMethodWithNoResponse2MethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2TestMethodWithNoResponse2MethodResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test2TestMethodWithNoResponse2MethodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test2TestMethodWithNoResponse2MethodResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test2TestMethodWithNoResponse2MethodResponse)
    MergeFrom(*source);
  }
}

void Test2TestMethodWithNoResponse2MethodResponse::MergeFrom(const Test2TestMethodWithNoResponse2MethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test2TestMethodWithNoResponse2MethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Test2TestMethodWithNoResponse2MethodResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test2TestMethodWithNoResponse2MethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2TestMethodWithNoResponse2MethodResponse::CopyFrom(const Test2TestMethodWithNoResponse2MethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test2TestMethodWithNoResponse2MethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2TestMethodWithNoResponse2MethodResponse::IsInitialized() const {
  return true;
}

void Test2TestMethodWithNoResponse2MethodResponse::InternalSwap(Test2TestMethodWithNoResponse2MethodResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test2TestMethodWithNoResponse2MethodResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test2TestMethodNoRequest2MethodRequest::InitAsDefaultInstance() {
}
class Test2TestMethodNoRequest2MethodRequest::_Internal {
 public:
};

Test2TestMethodNoRequest2MethodRequest::Test2TestMethodNoRequest2MethodRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test2TestMethodNoRequest2MethodRequest)
}
Test2TestMethodNoRequest2MethodRequest::Test2TestMethodNoRequest2MethodRequest(const Test2TestMethodNoRequest2MethodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test2TestMethodNoRequest2MethodRequest)
}

void Test2TestMethodNoRequest2MethodRequest::SharedCtor() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}

Test2TestMethodNoRequest2MethodRequest::~Test2TestMethodNoRequest2MethodRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test2TestMethodNoRequest2MethodRequest)
  SharedDtor();
}

void Test2TestMethodNoRequest2MethodRequest::SharedDtor() {
}

void Test2TestMethodNoRequest2MethodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test2TestMethodNoRequest2MethodRequest& Test2TestMethodNoRequest2MethodRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test2TestMethodNoRequest2MethodRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test2TestMethodNoRequest2MethodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test2TestMethodNoRequest2MethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test2TestMethodNoRequest2MethodRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test2TestMethodNoRequest2MethodRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test2TestMethodNoRequest2MethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test2TestMethodNoRequest2MethodRequest)
  return target;
}

size_t Test2TestMethodNoRequest2MethodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test2TestMethodNoRequest2MethodRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test2TestMethodNoRequest2MethodRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test2TestMethodNoRequest2MethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2TestMethodNoRequest2MethodRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test2TestMethodNoRequest2MethodRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test2TestMethodNoRequest2MethodRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test2TestMethodNoRequest2MethodRequest)
    MergeFrom(*source);
  }
}

void Test2TestMethodNoRequest2MethodRequest::MergeFrom(const Test2TestMethodNoRequest2MethodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test2TestMethodNoRequest2MethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test2TestMethodNoRequest2MethodRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test2TestMethodNoRequest2MethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2TestMethodNoRequest2MethodRequest::CopyFrom(const Test2TestMethodNoRequest2MethodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test2TestMethodNoRequest2MethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2TestMethodNoRequest2MethodRequest::IsInitialized() const {
  return true;
}

void Test2TestMethodNoRequest2MethodRequest::InternalSwap(Test2TestMethodNoRequest2MethodRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test2TestMethodNoRequest2MethodRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test2TestMethodNoRequest2MethodResponse::InitAsDefaultInstance() {
}
class Test2TestMethodNoRequest2MethodResponse::_Internal {
 public:
};

Test2TestMethodNoRequest2MethodResponse::Test2TestMethodNoRequest2MethodResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test2TestMethodNoRequest2MethodResponse)
}
Test2TestMethodNoRequest2MethodResponse::Test2TestMethodNoRequest2MethodResponse(const Test2TestMethodNoRequest2MethodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.Test2TestMethodNoRequest2MethodResponse)
}

void Test2TestMethodNoRequest2MethodResponse::SharedCtor() {
}

Test2TestMethodNoRequest2MethodResponse::~Test2TestMethodNoRequest2MethodResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test2TestMethodNoRequest2MethodResponse)
  SharedDtor();
}

void Test2TestMethodNoRequest2MethodResponse::SharedDtor() {
}

void Test2TestMethodNoRequest2MethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test2TestMethodNoRequest2MethodResponse& Test2TestMethodNoRequest2MethodResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test2TestMethodNoRequest2MethodResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test2TestMethodNoRequest2MethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test2TestMethodNoRequest2MethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* Test2TestMethodNoRequest2MethodResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test2TestMethodNoRequest2MethodResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test2TestMethodNoRequest2MethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test2TestMethodNoRequest2MethodResponse)
  return target;
}

size_t Test2TestMethodNoRequest2MethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test2TestMethodNoRequest2MethodResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test2TestMethodNoRequest2MethodResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test2TestMethodNoRequest2MethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2TestMethodNoRequest2MethodResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test2TestMethodNoRequest2MethodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test2TestMethodNoRequest2MethodResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test2TestMethodNoRequest2MethodResponse)
    MergeFrom(*source);
  }
}

void Test2TestMethodNoRequest2MethodResponse::MergeFrom(const Test2TestMethodNoRequest2MethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test2TestMethodNoRequest2MethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Test2TestMethodNoRequest2MethodResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test2TestMethodNoRequest2MethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2TestMethodNoRequest2MethodResponse::CopyFrom(const Test2TestMethodNoRequest2MethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test2TestMethodNoRequest2MethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2TestMethodNoRequest2MethodResponse::IsInitialized() const {
  return true;
}

void Test2TestMethodNoRequest2MethodResponse::InternalSwap(Test2TestMethodNoRequest2MethodResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test2TestMethodNoRequest2MethodResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TestTypesListenEventStream::InitAsDefaultInstance() {
}
class TestTypesListenEventStream::_Internal {
 public:
};

TestTypesListenEventStream::TestTypesListenEventStream()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.TestTypesListenEventStream)
}
TestTypesListenEventStream::TestTypesListenEventStream(const TestTypesListenEventStream& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.TestTypesListenEventStream)
}

void TestTypesListenEventStream::SharedCtor() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}

TestTypesListenEventStream::~TestTypesListenEventStream() {
  // @@protoc_insertion_point(destructor:Tests.TestTypesListenEventStream)
  SharedDtor();
}

void TestTypesListenEventStream::SharedDtor() {
}

void TestTypesListenEventStream::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestTypesListenEventStream& TestTypesListenEventStream::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestTypesListenEventStream_gen_2eproto.base);
  return *internal_default_instance();
}


void TestTypesListenEventStream::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.TestTypesListenEventStream)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* TestTypesListenEventStream::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestTypesListenEventStream::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.TestTypesListenEventStream)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.TestTypesListenEventStream)
  return target;
}

size_t TestTypesListenEventStream::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.TestTypesListenEventStream)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestTypesListenEventStream::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.TestTypesListenEventStream)
  GOOGLE_DCHECK_NE(&from, this);
  const TestTypesListenEventStream* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestTypesListenEventStream>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.TestTypesListenEventStream)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.TestTypesListenEventStream)
    MergeFrom(*source);
  }
}

void TestTypesListenEventStream::MergeFrom(const TestTypesListenEventStream& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.TestTypesListenEventStream)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void TestTypesListenEventStream::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.TestTypesListenEventStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestTypesListenEventStream::CopyFrom(const TestTypesListenEventStream& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.TestTypesListenEventStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestTypesListenEventStream::IsInitialized() const {
  return true;
}

void TestTypesListenEventStream::InternalSwap(TestTypesListenEventStream* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestTypesListenEventStream::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TestTypesCreateRequest::InitAsDefaultInstance() {
}
class TestTypesCreateRequest::_Internal {
 public:
};

TestTypesCreateRequest::TestTypesCreateRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.TestTypesCreateRequest)
}
TestTypesCreateRequest::TestTypesCreateRequest(const TestTypesCreateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.TestTypesCreateRequest)
}

void TestTypesCreateRequest::SharedCtor() {
}

TestTypesCreateRequest::~TestTypesCreateRequest() {
  // @@protoc_insertion_point(destructor:Tests.TestTypesCreateRequest)
  SharedDtor();
}

void TestTypesCreateRequest::SharedDtor() {
}

void TestTypesCreateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestTypesCreateRequest& TestTypesCreateRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestTypesCreateRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void TestTypesCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.TestTypesCreateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* TestTypesCreateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestTypesCreateRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.TestTypesCreateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.TestTypesCreateRequest)
  return target;
}

size_t TestTypesCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.TestTypesCreateRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestTypesCreateRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.TestTypesCreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TestTypesCreateRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestTypesCreateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.TestTypesCreateRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.TestTypesCreateRequest)
    MergeFrom(*source);
  }
}

void TestTypesCreateRequest::MergeFrom(const TestTypesCreateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.TestTypesCreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TestTypesCreateRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.TestTypesCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestTypesCreateRequest::CopyFrom(const TestTypesCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.TestTypesCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestTypesCreateRequest::IsInitialized() const {
  return true;
}

void TestTypesCreateRequest::InternalSwap(TestTypesCreateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestTypesCreateRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TestTypesCreateResponse::InitAsDefaultInstance() {
}
class TestTypesCreateResponse::_Internal {
 public:
};

TestTypesCreateResponse::TestTypesCreateResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.TestTypesCreateResponse)
}
TestTypesCreateResponse::TestTypesCreateResponse(const TestTypesCreateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.TestTypesCreateResponse)
}

void TestTypesCreateResponse::SharedCtor() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}

TestTypesCreateResponse::~TestTypesCreateResponse() {
  // @@protoc_insertion_point(destructor:Tests.TestTypesCreateResponse)
  SharedDtor();
}

void TestTypesCreateResponse::SharedDtor() {
}

void TestTypesCreateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestTypesCreateResponse& TestTypesCreateResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestTypesCreateResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void TestTypesCreateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.TestTypesCreateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* TestTypesCreateResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestTypesCreateResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.TestTypesCreateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.TestTypesCreateResponse)
  return target;
}

size_t TestTypesCreateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.TestTypesCreateResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestTypesCreateResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.TestTypesCreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TestTypesCreateResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestTypesCreateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.TestTypesCreateResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.TestTypesCreateResponse)
    MergeFrom(*source);
  }
}

void TestTypesCreateResponse::MergeFrom(const TestTypesCreateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.TestTypesCreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void TestTypesCreateResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.TestTypesCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestTypesCreateResponse::CopyFrom(const TestTypesCreateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.TestTypesCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestTypesCreateResponse::IsInitialized() const {
  return true;
}

void TestTypesCreateResponse::InternalSwap(TestTypesCreateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestTypesCreateResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TestTypesTestEventEvent::InitAsDefaultInstance() {
  ::Tests::_TestTypesTestEventEvent_default_instance_._instance.get_mutable()->value_ = const_cast< PROTOBUF_NAMESPACE_ID::StringValue*>(
      PROTOBUF_NAMESPACE_ID::StringValue::internal_default_instance());
}
class TestTypesTestEventEvent::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::StringValue& value(const TestTypesTestEventEvent* msg);
};

const PROTOBUF_NAMESPACE_ID::StringValue&
TestTypesTestEventEvent::_Internal::value(const TestTypesTestEventEvent* msg) {
  return *msg->value_;
}
void TestTypesTestEventEvent::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
TestTypesTestEventEvent::TestTypesTestEventEvent()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.TestTypesTestEventEvent)
}
TestTypesTestEventEvent::TestTypesTestEventEvent(const TestTypesTestEventEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.TestTypesTestEventEvent)
}

void TestTypesTestEventEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TestTypesTestEventEvent_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

TestTypesTestEventEvent::~TestTypesTestEventEvent() {
  // @@protoc_insertion_point(destructor:Tests.TestTypesTestEventEvent)
  SharedDtor();
}

void TestTypesTestEventEvent::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void TestTypesTestEventEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestTypesTestEventEvent& TestTypesTestEventEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestTypesTestEventEvent_gen_2eproto.base);
  return *internal_default_instance();
}


void TestTypesTestEventEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.TestTypesTestEventEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* TestTypesTestEventEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestTypesTestEventEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.TestTypesTestEventEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .google.protobuf.StringValue value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.TestTypesTestEventEvent)
  return target;
}

size_t TestTypesTestEventEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.TestTypesTestEventEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.StringValue value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestTypesTestEventEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.TestTypesTestEventEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const TestTypesTestEventEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestTypesTestEventEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.TestTypesTestEventEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.TestTypesTestEventEvent)
    MergeFrom(*source);
  }
}

void TestTypesTestEventEvent::MergeFrom(const TestTypesTestEventEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.TestTypesTestEventEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void TestTypesTestEventEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.TestTypesTestEventEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestTypesTestEventEvent::CopyFrom(const TestTypesTestEventEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.TestTypesTestEventEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestTypesTestEventEvent::IsInitialized() const {
  return true;
}

void TestTypesTestEventEvent::InternalSwap(TestTypesTestEventEvent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestTypesTestEventEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TestTypesTestParamDoubleMethodRequest::InitAsDefaultInstance() {
}
class TestTypesTestParamDoubleMethodRequest::_Internal {
 public:
};

TestTypesTestParamDoubleMethodRequest::TestTypesTestParamDoubleMethodRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.TestTypesTestParamDoubleMethodRequest)
}
TestTypesTestParamDoubleMethodRequest::TestTypesTestParamDoubleMethodRequest(const TestTypesTestParamDoubleMethodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&objectid_, &from.objectid_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:Tests.TestTypesTestParamDoubleMethodRequest)
}

void TestTypesTestParamDoubleMethodRequest::SharedCtor() {
  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
}

TestTypesTestParamDoubleMethodRequest::~TestTypesTestParamDoubleMethodRequest() {
  // @@protoc_insertion_point(destructor:Tests.TestTypesTestParamDoubleMethodRequest)
  SharedDtor();
}

void TestTypesTestParamDoubleMethodRequest::SharedDtor() {
}

void TestTypesTestParamDoubleMethodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestTypesTestParamDoubleMethodRequest& TestTypesTestParamDoubleMethodRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestTypesTestParamDoubleMethodRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void TestTypesTestParamDoubleMethodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.TestTypesTestParamDoubleMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

const char* TestTypesTestParamDoubleMethodRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestTypesTestParamDoubleMethodRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.TestTypesTestParamDoubleMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // double value = 2;
  if (!(this->value() <= 0 && this->value() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.TestTypesTestParamDoubleMethodRequest)
  return target;
}

size_t TestTypesTestParamDoubleMethodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.TestTypesTestParamDoubleMethodRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  // double value = 2;
  if (!(this->value() <= 0 && this->value() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestTypesTestParamDoubleMethodRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.TestTypesTestParamDoubleMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TestTypesTestParamDoubleMethodRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestTypesTestParamDoubleMethodRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.TestTypesTestParamDoubleMethodRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.TestTypesTestParamDoubleMethodRequest)
    MergeFrom(*source);
  }
}

void TestTypesTestParamDoubleMethodRequest::MergeFrom(const TestTypesTestParamDoubleMethodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.TestTypesTestParamDoubleMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
  if (!(from.value() <= 0 && from.value() >= 0)) {
    _internal_set_value(from._internal_value());
  }
}

void TestTypesTestParamDoubleMethodRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.TestTypesTestParamDoubleMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestTypesTestParamDoubleMethodRequest::CopyFrom(const TestTypesTestParamDoubleMethodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.TestTypesTestParamDoubleMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestTypesTestParamDoubleMethodRequest::IsInitialized() const {
  return true;
}

void TestTypesTestParamDoubleMethodRequest::InternalSwap(TestTypesTestParamDoubleMethodRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestTypesTestParamDoubleMethodRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TestTypesTestParamDoubleMethodResponse::InitAsDefaultInstance() {
}
class TestTypesTestParamDoubleMethodResponse::_Internal {
 public:
};

TestTypesTestParamDoubleMethodResponse::TestTypesTestParamDoubleMethodResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.TestTypesTestParamDoubleMethodResponse)
}
TestTypesTestParamDoubleMethodResponse::TestTypesTestParamDoubleMethodResponse(const TestTypesTestParamDoubleMethodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.TestTypesTestParamDoubleMethodResponse)
}

void TestTypesTestParamDoubleMethodResponse::SharedCtor() {
}

TestTypesTestParamDoubleMethodResponse::~TestTypesTestParamDoubleMethodResponse() {
  // @@protoc_insertion_point(destructor:Tests.TestTypesTestParamDoubleMethodResponse)
  SharedDtor();
}

void TestTypesTestParamDoubleMethodResponse::SharedDtor() {
}

void TestTypesTestParamDoubleMethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestTypesTestParamDoubleMethodResponse& TestTypesTestParamDoubleMethodResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestTypesTestParamDoubleMethodResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void TestTypesTestParamDoubleMethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.TestTypesTestParamDoubleMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* TestTypesTestParamDoubleMethodResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestTypesTestParamDoubleMethodResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.TestTypesTestParamDoubleMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.TestTypesTestParamDoubleMethodResponse)
  return target;
}

size_t TestTypesTestParamDoubleMethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.TestTypesTestParamDoubleMethodResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestTypesTestParamDoubleMethodResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.TestTypesTestParamDoubleMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TestTypesTestParamDoubleMethodResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestTypesTestParamDoubleMethodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.TestTypesTestParamDoubleMethodResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.TestTypesTestParamDoubleMethodResponse)
    MergeFrom(*source);
  }
}

void TestTypesTestParamDoubleMethodResponse::MergeFrom(const TestTypesTestParamDoubleMethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.TestTypesTestParamDoubleMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TestTypesTestParamDoubleMethodResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.TestTypesTestParamDoubleMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestTypesTestParamDoubleMethodResponse::CopyFrom(const TestTypesTestParamDoubleMethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.TestTypesTestParamDoubleMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestTypesTestParamDoubleMethodResponse::IsInitialized() const {
  return true;
}

void TestTypesTestParamDoubleMethodResponse::InternalSwap(TestTypesTestParamDoubleMethodResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestTypesTestParamDoubleMethodResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TestTypesTestParamFloatMethodRequest::InitAsDefaultInstance() {
}
class TestTypesTestParamFloatMethodRequest::_Internal {
 public:
};

TestTypesTestParamFloatMethodRequest::TestTypesTestParamFloatMethodRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.TestTypesTestParamFloatMethodRequest)
}
TestTypesTestParamFloatMethodRequest::TestTypesTestParamFloatMethodRequest(const TestTypesTestParamFloatMethodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&objectid_, &from.objectid_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:Tests.TestTypesTestParamFloatMethodRequest)
}

void TestTypesTestParamFloatMethodRequest::SharedCtor() {
  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
}

TestTypesTestParamFloatMethodRequest::~TestTypesTestParamFloatMethodRequest() {
  // @@protoc_insertion_point(destructor:Tests.TestTypesTestParamFloatMethodRequest)
  SharedDtor();
}

void TestTypesTestParamFloatMethodRequest::SharedDtor() {
}

void TestTypesTestParamFloatMethodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestTypesTestParamFloatMethodRequest& TestTypesTestParamFloatMethodRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestTypesTestParamFloatMethodRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void TestTypesTestParamFloatMethodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.TestTypesTestParamFloatMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

const char* TestTypesTestParamFloatMethodRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestTypesTestParamFloatMethodRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.TestTypesTestParamFloatMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // float value = 2;
  if (!(this->value() <= 0 && this->value() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.TestTypesTestParamFloatMethodRequest)
  return target;
}

size_t TestTypesTestParamFloatMethodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.TestTypesTestParamFloatMethodRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  // float value = 2;
  if (!(this->value() <= 0 && this->value() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestTypesTestParamFloatMethodRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.TestTypesTestParamFloatMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TestTypesTestParamFloatMethodRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestTypesTestParamFloatMethodRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.TestTypesTestParamFloatMethodRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.TestTypesTestParamFloatMethodRequest)
    MergeFrom(*source);
  }
}

void TestTypesTestParamFloatMethodRequest::MergeFrom(const TestTypesTestParamFloatMethodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.TestTypesTestParamFloatMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
  if (!(from.value() <= 0 && from.value() >= 0)) {
    _internal_set_value(from._internal_value());
  }
}

void TestTypesTestParamFloatMethodRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.TestTypesTestParamFloatMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestTypesTestParamFloatMethodRequest::CopyFrom(const TestTypesTestParamFloatMethodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.TestTypesTestParamFloatMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestTypesTestParamFloatMethodRequest::IsInitialized() const {
  return true;
}

void TestTypesTestParamFloatMethodRequest::InternalSwap(TestTypesTestParamFloatMethodRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestTypesTestParamFloatMethodRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TestTypesTestParamFloatMethodResponse::InitAsDefaultInstance() {
}
class TestTypesTestParamFloatMethodResponse::_Internal {
 public:
};

TestTypesTestParamFloatMethodResponse::TestTypesTestParamFloatMethodResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.TestTypesTestParamFloatMethodResponse)
}
TestTypesTestParamFloatMethodResponse::TestTypesTestParamFloatMethodResponse(const TestTypesTestParamFloatMethodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.TestTypesTestParamFloatMethodResponse)
}

void TestTypesTestParamFloatMethodResponse::SharedCtor() {
}

TestTypesTestParamFloatMethodResponse::~TestTypesTestParamFloatMethodResponse() {
  // @@protoc_insertion_point(destructor:Tests.TestTypesTestParamFloatMethodResponse)
  SharedDtor();
}

void TestTypesTestParamFloatMethodResponse::SharedDtor() {
}

void TestTypesTestParamFloatMethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestTypesTestParamFloatMethodResponse& TestTypesTestParamFloatMethodResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestTypesTestParamFloatMethodResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void TestTypesTestParamFloatMethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.TestTypesTestParamFloatMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* TestTypesTestParamFloatMethodResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestTypesTestParamFloatMethodResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.TestTypesTestParamFloatMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.TestTypesTestParamFloatMethodResponse)
  return target;
}

size_t TestTypesTestParamFloatMethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.TestTypesTestParamFloatMethodResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestTypesTestParamFloatMethodResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.TestTypesTestParamFloatMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TestTypesTestParamFloatMethodResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestTypesTestParamFloatMethodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.TestTypesTestParamFloatMethodResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.TestTypesTestParamFloatMethodResponse)
    MergeFrom(*source);
  }
}

void TestTypesTestParamFloatMethodResponse::MergeFrom(const TestTypesTestParamFloatMethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.TestTypesTestParamFloatMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TestTypesTestParamFloatMethodResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.TestTypesTestParamFloatMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestTypesTestParamFloatMethodResponse::CopyFrom(const TestTypesTestParamFloatMethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.TestTypesTestParamFloatMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestTypesTestParamFloatMethodResponse::IsInitialized() const {
  return true;
}

void TestTypesTestParamFloatMethodResponse::InternalSwap(TestTypesTestParamFloatMethodResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestTypesTestParamFloatMethodResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TestTypesTestParamIntMethodRequest::InitAsDefaultInstance() {
}
class TestTypesTestParamIntMethodRequest::_Internal {
 public:
};

TestTypesTestParamIntMethodRequest::TestTypesTestParamIntMethodRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.TestTypesTestParamIntMethodRequest)
}
TestTypesTestParamIntMethodRequest::TestTypesTestParamIntMethodRequest(const TestTypesTestParamIntMethodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&objectid_, &from.objectid_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:Tests.TestTypesTestParamIntMethodRequest)
}

void TestTypesTestParamIntMethodRequest::SharedCtor() {
  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
}

TestTypesTestParamIntMethodRequest::~TestTypesTestParamIntMethodRequest() {
  // @@protoc_insertion_point(destructor:Tests.TestTypesTestParamIntMethodRequest)
  SharedDtor();
}

void TestTypesTestParamIntMethodRequest::SharedDtor() {
}

void TestTypesTestParamIntMethodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestTypesTestParamIntMethodRequest& TestTypesTestParamIntMethodRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestTypesTestParamIntMethodRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void TestTypesTestParamIntMethodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.TestTypesTestParamIntMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

const char* TestTypesTestParamIntMethodRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestTypesTestParamIntMethodRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.TestTypesTestParamIntMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // int32 value = 2;
  if (this->value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.TestTypesTestParamIntMethodRequest)
  return target;
}

size_t TestTypesTestParamIntMethodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.TestTypesTestParamIntMethodRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  // int32 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestTypesTestParamIntMethodRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.TestTypesTestParamIntMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TestTypesTestParamIntMethodRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestTypesTestParamIntMethodRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.TestTypesTestParamIntMethodRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.TestTypesTestParamIntMethodRequest)
    MergeFrom(*source);
  }
}

void TestTypesTestParamIntMethodRequest::MergeFrom(const TestTypesTestParamIntMethodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.TestTypesTestParamIntMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
  if (from.value() != 0) {
    _internal_set_value(from._internal_value());
  }
}

void TestTypesTestParamIntMethodRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.TestTypesTestParamIntMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestTypesTestParamIntMethodRequest::CopyFrom(const TestTypesTestParamIntMethodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.TestTypesTestParamIntMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestTypesTestParamIntMethodRequest::IsInitialized() const {
  return true;
}

void TestTypesTestParamIntMethodRequest::InternalSwap(TestTypesTestParamIntMethodRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestTypesTestParamIntMethodRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TestTypesTestParamIntMethodResponse::InitAsDefaultInstance() {
}
class TestTypesTestParamIntMethodResponse::_Internal {
 public:
};

TestTypesTestParamIntMethodResponse::TestTypesTestParamIntMethodResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.TestTypesTestParamIntMethodResponse)
}
TestTypesTestParamIntMethodResponse::TestTypesTestParamIntMethodResponse(const TestTypesTestParamIntMethodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.TestTypesTestParamIntMethodResponse)
}

void TestTypesTestParamIntMethodResponse::SharedCtor() {
}

TestTypesTestParamIntMethodResponse::~TestTypesTestParamIntMethodResponse() {
  // @@protoc_insertion_point(destructor:Tests.TestTypesTestParamIntMethodResponse)
  SharedDtor();
}

void TestTypesTestParamIntMethodResponse::SharedDtor() {
}

void TestTypesTestParamIntMethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestTypesTestParamIntMethodResponse& TestTypesTestParamIntMethodResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestTypesTestParamIntMethodResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void TestTypesTestParamIntMethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.TestTypesTestParamIntMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* TestTypesTestParamIntMethodResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestTypesTestParamIntMethodResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.TestTypesTestParamIntMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.TestTypesTestParamIntMethodResponse)
  return target;
}

size_t TestTypesTestParamIntMethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.TestTypesTestParamIntMethodResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestTypesTestParamIntMethodResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.TestTypesTestParamIntMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TestTypesTestParamIntMethodResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestTypesTestParamIntMethodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.TestTypesTestParamIntMethodResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.TestTypesTestParamIntMethodResponse)
    MergeFrom(*source);
  }
}

void TestTypesTestParamIntMethodResponse::MergeFrom(const TestTypesTestParamIntMethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.TestTypesTestParamIntMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TestTypesTestParamIntMethodResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.TestTypesTestParamIntMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestTypesTestParamIntMethodResponse::CopyFrom(const TestTypesTestParamIntMethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.TestTypesTestParamIntMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestTypesTestParamIntMethodResponse::IsInitialized() const {
  return true;
}

void TestTypesTestParamIntMethodResponse::InternalSwap(TestTypesTestParamIntMethodResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestTypesTestParamIntMethodResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TestTypesTestParamUIntMethodRequest::InitAsDefaultInstance() {
}
class TestTypesTestParamUIntMethodRequest::_Internal {
 public:
};

TestTypesTestParamUIntMethodRequest::TestTypesTestParamUIntMethodRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.TestTypesTestParamUIntMethodRequest)
}
TestTypesTestParamUIntMethodRequest::TestTypesTestParamUIntMethodRequest(const TestTypesTestParamUIntMethodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&objectid_, &from.objectid_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:Tests.TestTypesTestParamUIntMethodRequest)
}

void TestTypesTestParamUIntMethodRequest::SharedCtor() {
  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
}

TestTypesTestParamUIntMethodRequest::~TestTypesTestParamUIntMethodRequest() {
  // @@protoc_insertion_point(destructor:Tests.TestTypesTestParamUIntMethodRequest)
  SharedDtor();
}

void TestTypesTestParamUIntMethodRequest::SharedDtor() {
}

void TestTypesTestParamUIntMethodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestTypesTestParamUIntMethodRequest& TestTypesTestParamUIntMethodRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestTypesTestParamUIntMethodRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void TestTypesTestParamUIntMethodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.TestTypesTestParamUIntMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

const char* TestTypesTestParamUIntMethodRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestTypesTestParamUIntMethodRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.TestTypesTestParamUIntMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // uint32 value = 2;
  if (this->value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.TestTypesTestParamUIntMethodRequest)
  return target;
}

size_t TestTypesTestParamUIntMethodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.TestTypesTestParamUIntMethodRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  // uint32 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestTypesTestParamUIntMethodRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.TestTypesTestParamUIntMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TestTypesTestParamUIntMethodRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestTypesTestParamUIntMethodRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.TestTypesTestParamUIntMethodRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.TestTypesTestParamUIntMethodRequest)
    MergeFrom(*source);
  }
}

void TestTypesTestParamUIntMethodRequest::MergeFrom(const TestTypesTestParamUIntMethodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.TestTypesTestParamUIntMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
  if (from.value() != 0) {
    _internal_set_value(from._internal_value());
  }
}

void TestTypesTestParamUIntMethodRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.TestTypesTestParamUIntMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestTypesTestParamUIntMethodRequest::CopyFrom(const TestTypesTestParamUIntMethodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.TestTypesTestParamUIntMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestTypesTestParamUIntMethodRequest::IsInitialized() const {
  return true;
}

void TestTypesTestParamUIntMethodRequest::InternalSwap(TestTypesTestParamUIntMethodRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestTypesTestParamUIntMethodRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TestTypesTestParamUIntMethodResponse::InitAsDefaultInstance() {
}
class TestTypesTestParamUIntMethodResponse::_Internal {
 public:
};

TestTypesTestParamUIntMethodResponse::TestTypesTestParamUIntMethodResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.TestTypesTestParamUIntMethodResponse)
}
TestTypesTestParamUIntMethodResponse::TestTypesTestParamUIntMethodResponse(const TestTypesTestParamUIntMethodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.TestTypesTestParamUIntMethodResponse)
}

void TestTypesTestParamUIntMethodResponse::SharedCtor() {
}

TestTypesTestParamUIntMethodResponse::~TestTypesTestParamUIntMethodResponse() {
  // @@protoc_insertion_point(destructor:Tests.TestTypesTestParamUIntMethodResponse)
  SharedDtor();
}

void TestTypesTestParamUIntMethodResponse::SharedDtor() {
}

void TestTypesTestParamUIntMethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestTypesTestParamUIntMethodResponse& TestTypesTestParamUIntMethodResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestTypesTestParamUIntMethodResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void TestTypesTestParamUIntMethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.TestTypesTestParamUIntMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* TestTypesTestParamUIntMethodResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestTypesTestParamUIntMethodResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.TestTypesTestParamUIntMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.TestTypesTestParamUIntMethodResponse)
  return target;
}

size_t TestTypesTestParamUIntMethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.TestTypesTestParamUIntMethodResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestTypesTestParamUIntMethodResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.TestTypesTestParamUIntMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TestTypesTestParamUIntMethodResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestTypesTestParamUIntMethodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.TestTypesTestParamUIntMethodResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.TestTypesTestParamUIntMethodResponse)
    MergeFrom(*source);
  }
}

void TestTypesTestParamUIntMethodResponse::MergeFrom(const TestTypesTestParamUIntMethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.TestTypesTestParamUIntMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TestTypesTestParamUIntMethodResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.TestTypesTestParamUIntMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestTypesTestParamUIntMethodResponse::CopyFrom(const TestTypesTestParamUIntMethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.TestTypesTestParamUIntMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestTypesTestParamUIntMethodResponse::IsInitialized() const {
  return true;
}

void TestTypesTestParamUIntMethodResponse::InternalSwap(TestTypesTestParamUIntMethodResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestTypesTestParamUIntMethodResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TestTypesTestParamLongMethodRequest::InitAsDefaultInstance() {
}
class TestTypesTestParamLongMethodRequest::_Internal {
 public:
};

TestTypesTestParamLongMethodRequest::TestTypesTestParamLongMethodRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.TestTypesTestParamLongMethodRequest)
}
TestTypesTestParamLongMethodRequest::TestTypesTestParamLongMethodRequest(const TestTypesTestParamLongMethodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&objectid_, &from.objectid_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:Tests.TestTypesTestParamLongMethodRequest)
}

void TestTypesTestParamLongMethodRequest::SharedCtor() {
  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
}

TestTypesTestParamLongMethodRequest::~TestTypesTestParamLongMethodRequest() {
  // @@protoc_insertion_point(destructor:Tests.TestTypesTestParamLongMethodRequest)
  SharedDtor();
}

void TestTypesTestParamLongMethodRequest::SharedDtor() {
}

void TestTypesTestParamLongMethodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestTypesTestParamLongMethodRequest& TestTypesTestParamLongMethodRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestTypesTestParamLongMethodRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void TestTypesTestParamLongMethodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.TestTypesTestParamLongMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

const char* TestTypesTestParamLongMethodRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestTypesTestParamLongMethodRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.TestTypesTestParamLongMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // int64 value = 2;
  if (this->value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.TestTypesTestParamLongMethodRequest)
  return target;
}

size_t TestTypesTestParamLongMethodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.TestTypesTestParamLongMethodRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  // int64 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestTypesTestParamLongMethodRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.TestTypesTestParamLongMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TestTypesTestParamLongMethodRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestTypesTestParamLongMethodRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.TestTypesTestParamLongMethodRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.TestTypesTestParamLongMethodRequest)
    MergeFrom(*source);
  }
}

void TestTypesTestParamLongMethodRequest::MergeFrom(const TestTypesTestParamLongMethodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.TestTypesTestParamLongMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
  if (from.value() != 0) {
    _internal_set_value(from._internal_value());
  }
}

void TestTypesTestParamLongMethodRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.TestTypesTestParamLongMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestTypesTestParamLongMethodRequest::CopyFrom(const TestTypesTestParamLongMethodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.TestTypesTestParamLongMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestTypesTestParamLongMethodRequest::IsInitialized() const {
  return true;
}

void TestTypesTestParamLongMethodRequest::InternalSwap(TestTypesTestParamLongMethodRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestTypesTestParamLongMethodRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TestTypesTestParamLongMethodResponse::InitAsDefaultInstance() {
}
class TestTypesTestParamLongMethodResponse::_Internal {
 public:
};

TestTypesTestParamLongMethodResponse::TestTypesTestParamLongMethodResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.TestTypesTestParamLongMethodResponse)
}
TestTypesTestParamLongMethodResponse::TestTypesTestParamLongMethodResponse(const TestTypesTestParamLongMethodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.TestTypesTestParamLongMethodResponse)
}

void TestTypesTestParamLongMethodResponse::SharedCtor() {
}

TestTypesTestParamLongMethodResponse::~TestTypesTestParamLongMethodResponse() {
  // @@protoc_insertion_point(destructor:Tests.TestTypesTestParamLongMethodResponse)
  SharedDtor();
}

void TestTypesTestParamLongMethodResponse::SharedDtor() {
}

void TestTypesTestParamLongMethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestTypesTestParamLongMethodResponse& TestTypesTestParamLongMethodResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestTypesTestParamLongMethodResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void TestTypesTestParamLongMethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.TestTypesTestParamLongMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* TestTypesTestParamLongMethodResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestTypesTestParamLongMethodResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.TestTypesTestParamLongMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.TestTypesTestParamLongMethodResponse)
  return target;
}

size_t TestTypesTestParamLongMethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.TestTypesTestParamLongMethodResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestTypesTestParamLongMethodResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.TestTypesTestParamLongMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TestTypesTestParamLongMethodResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestTypesTestParamLongMethodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.TestTypesTestParamLongMethodResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.TestTypesTestParamLongMethodResponse)
    MergeFrom(*source);
  }
}

void TestTypesTestParamLongMethodResponse::MergeFrom(const TestTypesTestParamLongMethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.TestTypesTestParamLongMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TestTypesTestParamLongMethodResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.TestTypesTestParamLongMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestTypesTestParamLongMethodResponse::CopyFrom(const TestTypesTestParamLongMethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.TestTypesTestParamLongMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestTypesTestParamLongMethodResponse::IsInitialized() const {
  return true;
}

void TestTypesTestParamLongMethodResponse::InternalSwap(TestTypesTestParamLongMethodResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestTypesTestParamLongMethodResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TestTypesTestParamULongMethodRequest::InitAsDefaultInstance() {
}
class TestTypesTestParamULongMethodRequest::_Internal {
 public:
};

TestTypesTestParamULongMethodRequest::TestTypesTestParamULongMethodRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.TestTypesTestParamULongMethodRequest)
}
TestTypesTestParamULongMethodRequest::TestTypesTestParamULongMethodRequest(const TestTypesTestParamULongMethodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&objectid_, &from.objectid_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:Tests.TestTypesTestParamULongMethodRequest)
}

void TestTypesTestParamULongMethodRequest::SharedCtor() {
  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
}

TestTypesTestParamULongMethodRequest::~TestTypesTestParamULongMethodRequest() {
  // @@protoc_insertion_point(destructor:Tests.TestTypesTestParamULongMethodRequest)
  SharedDtor();
}

void TestTypesTestParamULongMethodRequest::SharedDtor() {
}

void TestTypesTestParamULongMethodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestTypesTestParamULongMethodRequest& TestTypesTestParamULongMethodRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestTypesTestParamULongMethodRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void TestTypesTestParamULongMethodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.TestTypesTestParamULongMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

const char* TestTypesTestParamULongMethodRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestTypesTestParamULongMethodRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.TestTypesTestParamULongMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // uint64 value = 2;
  if (this->value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.TestTypesTestParamULongMethodRequest)
  return target;
}

size_t TestTypesTestParamULongMethodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.TestTypesTestParamULongMethodRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  // uint64 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestTypesTestParamULongMethodRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.TestTypesTestParamULongMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TestTypesTestParamULongMethodRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestTypesTestParamULongMethodRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.TestTypesTestParamULongMethodRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.TestTypesTestParamULongMethodRequest)
    MergeFrom(*source);
  }
}

void TestTypesTestParamULongMethodRequest::MergeFrom(const TestTypesTestParamULongMethodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.TestTypesTestParamULongMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
  if (from.value() != 0) {
    _internal_set_value(from._internal_value());
  }
}

void TestTypesTestParamULongMethodRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.TestTypesTestParamULongMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestTypesTestParamULongMethodRequest::CopyFrom(const TestTypesTestParamULongMethodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.TestTypesTestParamULongMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestTypesTestParamULongMethodRequest::IsInitialized() const {
  return true;
}

void TestTypesTestParamULongMethodRequest::InternalSwap(TestTypesTestParamULongMethodRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestTypesTestParamULongMethodRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TestTypesTestParamULongMethodResponse::InitAsDefaultInstance() {
}
class TestTypesTestParamULongMethodResponse::_Internal {
 public:
};

TestTypesTestParamULongMethodResponse::TestTypesTestParamULongMethodResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.TestTypesTestParamULongMethodResponse)
}
TestTypesTestParamULongMethodResponse::TestTypesTestParamULongMethodResponse(const TestTypesTestParamULongMethodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.TestTypesTestParamULongMethodResponse)
}

void TestTypesTestParamULongMethodResponse::SharedCtor() {
}

TestTypesTestParamULongMethodResponse::~TestTypesTestParamULongMethodResponse() {
  // @@protoc_insertion_point(destructor:Tests.TestTypesTestParamULongMethodResponse)
  SharedDtor();
}

void TestTypesTestParamULongMethodResponse::SharedDtor() {
}

void TestTypesTestParamULongMethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestTypesTestParamULongMethodResponse& TestTypesTestParamULongMethodResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestTypesTestParamULongMethodResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void TestTypesTestParamULongMethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.TestTypesTestParamULongMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* TestTypesTestParamULongMethodResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestTypesTestParamULongMethodResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.TestTypesTestParamULongMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.TestTypesTestParamULongMethodResponse)
  return target;
}

size_t TestTypesTestParamULongMethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.TestTypesTestParamULongMethodResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestTypesTestParamULongMethodResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.TestTypesTestParamULongMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TestTypesTestParamULongMethodResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestTypesTestParamULongMethodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.TestTypesTestParamULongMethodResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.TestTypesTestParamULongMethodResponse)
    MergeFrom(*source);
  }
}

void TestTypesTestParamULongMethodResponse::MergeFrom(const TestTypesTestParamULongMethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.TestTypesTestParamULongMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TestTypesTestParamULongMethodResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.TestTypesTestParamULongMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestTypesTestParamULongMethodResponse::CopyFrom(const TestTypesTestParamULongMethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.TestTypesTestParamULongMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestTypesTestParamULongMethodResponse::IsInitialized() const {
  return true;
}

void TestTypesTestParamULongMethodResponse::InternalSwap(TestTypesTestParamULongMethodResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestTypesTestParamULongMethodResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TestTypesTestParamBoolMethodRequest::InitAsDefaultInstance() {
}
class TestTypesTestParamBoolMethodRequest::_Internal {
 public:
};

TestTypesTestParamBoolMethodRequest::TestTypesTestParamBoolMethodRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.TestTypesTestParamBoolMethodRequest)
}
TestTypesTestParamBoolMethodRequest::TestTypesTestParamBoolMethodRequest(const TestTypesTestParamBoolMethodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&objectid_, &from.objectid_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:Tests.TestTypesTestParamBoolMethodRequest)
}

void TestTypesTestParamBoolMethodRequest::SharedCtor() {
  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
}

TestTypesTestParamBoolMethodRequest::~TestTypesTestParamBoolMethodRequest() {
  // @@protoc_insertion_point(destructor:Tests.TestTypesTestParamBoolMethodRequest)
  SharedDtor();
}

void TestTypesTestParamBoolMethodRequest::SharedDtor() {
}

void TestTypesTestParamBoolMethodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestTypesTestParamBoolMethodRequest& TestTypesTestParamBoolMethodRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestTypesTestParamBoolMethodRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void TestTypesTestParamBoolMethodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.TestTypesTestParamBoolMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

const char* TestTypesTestParamBoolMethodRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestTypesTestParamBoolMethodRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.TestTypesTestParamBoolMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // bool value = 2;
  if (this->value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.TestTypesTestParamBoolMethodRequest)
  return target;
}

size_t TestTypesTestParamBoolMethodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.TestTypesTestParamBoolMethodRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  // bool value = 2;
  if (this->value() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestTypesTestParamBoolMethodRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.TestTypesTestParamBoolMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TestTypesTestParamBoolMethodRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestTypesTestParamBoolMethodRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.TestTypesTestParamBoolMethodRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.TestTypesTestParamBoolMethodRequest)
    MergeFrom(*source);
  }
}

void TestTypesTestParamBoolMethodRequest::MergeFrom(const TestTypesTestParamBoolMethodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.TestTypesTestParamBoolMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
  if (from.value() != 0) {
    _internal_set_value(from._internal_value());
  }
}

void TestTypesTestParamBoolMethodRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.TestTypesTestParamBoolMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestTypesTestParamBoolMethodRequest::CopyFrom(const TestTypesTestParamBoolMethodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.TestTypesTestParamBoolMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestTypesTestParamBoolMethodRequest::IsInitialized() const {
  return true;
}

void TestTypesTestParamBoolMethodRequest::InternalSwap(TestTypesTestParamBoolMethodRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestTypesTestParamBoolMethodRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TestTypesTestParamBoolMethodResponse::InitAsDefaultInstance() {
}
class TestTypesTestParamBoolMethodResponse::_Internal {
 public:
};

TestTypesTestParamBoolMethodResponse::TestTypesTestParamBoolMethodResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.TestTypesTestParamBoolMethodResponse)
}
TestTypesTestParamBoolMethodResponse::TestTypesTestParamBoolMethodResponse(const TestTypesTestParamBoolMethodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.TestTypesTestParamBoolMethodResponse)
}

void TestTypesTestParamBoolMethodResponse::SharedCtor() {
}

TestTypesTestParamBoolMethodResponse::~TestTypesTestParamBoolMethodResponse() {
  // @@protoc_insertion_point(destructor:Tests.TestTypesTestParamBoolMethodResponse)
  SharedDtor();
}

void TestTypesTestParamBoolMethodResponse::SharedDtor() {
}

void TestTypesTestParamBoolMethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestTypesTestParamBoolMethodResponse& TestTypesTestParamBoolMethodResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestTypesTestParamBoolMethodResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void TestTypesTestParamBoolMethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.TestTypesTestParamBoolMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* TestTypesTestParamBoolMethodResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestTypesTestParamBoolMethodResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.TestTypesTestParamBoolMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.TestTypesTestParamBoolMethodResponse)
  return target;
}

size_t TestTypesTestParamBoolMethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.TestTypesTestParamBoolMethodResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestTypesTestParamBoolMethodResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.TestTypesTestParamBoolMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TestTypesTestParamBoolMethodResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestTypesTestParamBoolMethodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.TestTypesTestParamBoolMethodResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.TestTypesTestParamBoolMethodResponse)
    MergeFrom(*source);
  }
}

void TestTypesTestParamBoolMethodResponse::MergeFrom(const TestTypesTestParamBoolMethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.TestTypesTestParamBoolMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TestTypesTestParamBoolMethodResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.TestTypesTestParamBoolMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestTypesTestParamBoolMethodResponse::CopyFrom(const TestTypesTestParamBoolMethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.TestTypesTestParamBoolMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestTypesTestParamBoolMethodResponse::IsInitialized() const {
  return true;
}

void TestTypesTestParamBoolMethodResponse::InternalSwap(TestTypesTestParamBoolMethodResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestTypesTestParamBoolMethodResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TestTypesTestParamStringMethodRequest::InitAsDefaultInstance() {
  ::Tests::_TestTypesTestParamStringMethodRequest_default_instance_._instance.get_mutable()->value_ = const_cast< PROTOBUF_NAMESPACE_ID::StringValue*>(
      PROTOBUF_NAMESPACE_ID::StringValue::internal_default_instance());
}
class TestTypesTestParamStringMethodRequest::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::StringValue& value(const TestTypesTestParamStringMethodRequest* msg);
};

const PROTOBUF_NAMESPACE_ID::StringValue&
TestTypesTestParamStringMethodRequest::_Internal::value(const TestTypesTestParamStringMethodRequest* msg) {
  return *msg->value_;
}
void TestTypesTestParamStringMethodRequest::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
TestTypesTestParamStringMethodRequest::TestTypesTestParamStringMethodRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.TestTypesTestParamStringMethodRequest)
}
TestTypesTestParamStringMethodRequest::TestTypesTestParamStringMethodRequest(const TestTypesTestParamStringMethodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.TestTypesTestParamStringMethodRequest)
}

void TestTypesTestParamStringMethodRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TestTypesTestParamStringMethodRequest_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

TestTypesTestParamStringMethodRequest::~TestTypesTestParamStringMethodRequest() {
  // @@protoc_insertion_point(destructor:Tests.TestTypesTestParamStringMethodRequest)
  SharedDtor();
}

void TestTypesTestParamStringMethodRequest::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void TestTypesTestParamStringMethodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestTypesTestParamStringMethodRequest& TestTypesTestParamStringMethodRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestTypesTestParamStringMethodRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void TestTypesTestParamStringMethodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.TestTypesTestParamStringMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* TestTypesTestParamStringMethodRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestTypesTestParamStringMethodRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.TestTypesTestParamStringMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .google.protobuf.StringValue value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.TestTypesTestParamStringMethodRequest)
  return target;
}

size_t TestTypesTestParamStringMethodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.TestTypesTestParamStringMethodRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.StringValue value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestTypesTestParamStringMethodRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.TestTypesTestParamStringMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TestTypesTestParamStringMethodRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestTypesTestParamStringMethodRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.TestTypesTestParamStringMethodRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.TestTypesTestParamStringMethodRequest)
    MergeFrom(*source);
  }
}

void TestTypesTestParamStringMethodRequest::MergeFrom(const TestTypesTestParamStringMethodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.TestTypesTestParamStringMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void TestTypesTestParamStringMethodRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.TestTypesTestParamStringMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestTypesTestParamStringMethodRequest::CopyFrom(const TestTypesTestParamStringMethodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.TestTypesTestParamStringMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestTypesTestParamStringMethodRequest::IsInitialized() const {
  return true;
}

void TestTypesTestParamStringMethodRequest::InternalSwap(TestTypesTestParamStringMethodRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestTypesTestParamStringMethodRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TestTypesTestParamStringMethodResponse::InitAsDefaultInstance() {
}
class TestTypesTestParamStringMethodResponse::_Internal {
 public:
};

TestTypesTestParamStringMethodResponse::TestTypesTestParamStringMethodResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.TestTypesTestParamStringMethodResponse)
}
TestTypesTestParamStringMethodResponse::TestTypesTestParamStringMethodResponse(const TestTypesTestParamStringMethodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.TestTypesTestParamStringMethodResponse)
}

void TestTypesTestParamStringMethodResponse::SharedCtor() {
}

TestTypesTestParamStringMethodResponse::~TestTypesTestParamStringMethodResponse() {
  // @@protoc_insertion_point(destructor:Tests.TestTypesTestParamStringMethodResponse)
  SharedDtor();
}

void TestTypesTestParamStringMethodResponse::SharedDtor() {
}

void TestTypesTestParamStringMethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestTypesTestParamStringMethodResponse& TestTypesTestParamStringMethodResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestTypesTestParamStringMethodResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void TestTypesTestParamStringMethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.TestTypesTestParamStringMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* TestTypesTestParamStringMethodResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestTypesTestParamStringMethodResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.TestTypesTestParamStringMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.TestTypesTestParamStringMethodResponse)
  return target;
}

size_t TestTypesTestParamStringMethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.TestTypesTestParamStringMethodResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestTypesTestParamStringMethodResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.TestTypesTestParamStringMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TestTypesTestParamStringMethodResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestTypesTestParamStringMethodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.TestTypesTestParamStringMethodResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.TestTypesTestParamStringMethodResponse)
    MergeFrom(*source);
  }
}

void TestTypesTestParamStringMethodResponse::MergeFrom(const TestTypesTestParamStringMethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.TestTypesTestParamStringMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TestTypesTestParamStringMethodResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.TestTypesTestParamStringMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestTypesTestParamStringMethodResponse::CopyFrom(const TestTypesTestParamStringMethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.TestTypesTestParamStringMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestTypesTestParamStringMethodResponse::IsInitialized() const {
  return true;
}

void TestTypesTestParamStringMethodResponse::InternalSwap(TestTypesTestParamStringMethodResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestTypesTestParamStringMethodResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TestTypesTestParamByteMethodRequest::InitAsDefaultInstance() {
}
class TestTypesTestParamByteMethodRequest::_Internal {
 public:
};

TestTypesTestParamByteMethodRequest::TestTypesTestParamByteMethodRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.TestTypesTestParamByteMethodRequest)
}
TestTypesTestParamByteMethodRequest::TestTypesTestParamByteMethodRequest(const TestTypesTestParamByteMethodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&objectid_, &from.objectid_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:Tests.TestTypesTestParamByteMethodRequest)
}

void TestTypesTestParamByteMethodRequest::SharedCtor() {
  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
}

TestTypesTestParamByteMethodRequest::~TestTypesTestParamByteMethodRequest() {
  // @@protoc_insertion_point(destructor:Tests.TestTypesTestParamByteMethodRequest)
  SharedDtor();
}

void TestTypesTestParamByteMethodRequest::SharedDtor() {
}

void TestTypesTestParamByteMethodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestTypesTestParamByteMethodRequest& TestTypesTestParamByteMethodRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestTypesTestParamByteMethodRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void TestTypesTestParamByteMethodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.TestTypesTestParamByteMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

const char* TestTypesTestParamByteMethodRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestTypesTestParamByteMethodRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.TestTypesTestParamByteMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // uint32 value = 2;
  if (this->value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.TestTypesTestParamByteMethodRequest)
  return target;
}

size_t TestTypesTestParamByteMethodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.TestTypesTestParamByteMethodRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  // uint32 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestTypesTestParamByteMethodRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.TestTypesTestParamByteMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TestTypesTestParamByteMethodRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestTypesTestParamByteMethodRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.TestTypesTestParamByteMethodRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.TestTypesTestParamByteMethodRequest)
    MergeFrom(*source);
  }
}

void TestTypesTestParamByteMethodRequest::MergeFrom(const TestTypesTestParamByteMethodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.TestTypesTestParamByteMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
  if (from.value() != 0) {
    _internal_set_value(from._internal_value());
  }
}

void TestTypesTestParamByteMethodRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.TestTypesTestParamByteMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestTypesTestParamByteMethodRequest::CopyFrom(const TestTypesTestParamByteMethodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.TestTypesTestParamByteMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestTypesTestParamByteMethodRequest::IsInitialized() const {
  return true;
}

void TestTypesTestParamByteMethodRequest::InternalSwap(TestTypesTestParamByteMethodRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestTypesTestParamByteMethodRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TestTypesTestParamByteMethodResponse::InitAsDefaultInstance() {
}
class TestTypesTestParamByteMethodResponse::_Internal {
 public:
};

TestTypesTestParamByteMethodResponse::TestTypesTestParamByteMethodResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.TestTypesTestParamByteMethodResponse)
}
TestTypesTestParamByteMethodResponse::TestTypesTestParamByteMethodResponse(const TestTypesTestParamByteMethodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.TestTypesTestParamByteMethodResponse)
}

void TestTypesTestParamByteMethodResponse::SharedCtor() {
}

TestTypesTestParamByteMethodResponse::~TestTypesTestParamByteMethodResponse() {
  // @@protoc_insertion_point(destructor:Tests.TestTypesTestParamByteMethodResponse)
  SharedDtor();
}

void TestTypesTestParamByteMethodResponse::SharedDtor() {
}

void TestTypesTestParamByteMethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestTypesTestParamByteMethodResponse& TestTypesTestParamByteMethodResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestTypesTestParamByteMethodResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void TestTypesTestParamByteMethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.TestTypesTestParamByteMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* TestTypesTestParamByteMethodResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestTypesTestParamByteMethodResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.TestTypesTestParamByteMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.TestTypesTestParamByteMethodResponse)
  return target;
}

size_t TestTypesTestParamByteMethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.TestTypesTestParamByteMethodResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestTypesTestParamByteMethodResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.TestTypesTestParamByteMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TestTypesTestParamByteMethodResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestTypesTestParamByteMethodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.TestTypesTestParamByteMethodResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.TestTypesTestParamByteMethodResponse)
    MergeFrom(*source);
  }
}

void TestTypesTestParamByteMethodResponse::MergeFrom(const TestTypesTestParamByteMethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.TestTypesTestParamByteMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TestTypesTestParamByteMethodResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.TestTypesTestParamByteMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestTypesTestParamByteMethodResponse::CopyFrom(const TestTypesTestParamByteMethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.TestTypesTestParamByteMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestTypesTestParamByteMethodResponse::IsInitialized() const {
  return true;
}

void TestTypesTestParamByteMethodResponse::InternalSwap(TestTypesTestParamByteMethodResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestTypesTestParamByteMethodResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TestTypesTestParamBytesMethodRequest::InitAsDefaultInstance() {
}
class TestTypesTestParamBytesMethodRequest::_Internal {
 public:
};

TestTypesTestParamBytesMethodRequest::TestTypesTestParamBytesMethodRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.TestTypesTestParamBytesMethodRequest)
}
TestTypesTestParamBytesMethodRequest::TestTypesTestParamBytesMethodRequest(const TestTypesTestParamBytesMethodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.TestTypesTestParamBytesMethodRequest)
}

void TestTypesTestParamBytesMethodRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TestTypesTestParamBytesMethodRequest_gen_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  objectid_ = PROTOBUF_ULONGLONG(0);
}

TestTypesTestParamBytesMethodRequest::~TestTypesTestParamBytesMethodRequest() {
  // @@protoc_insertion_point(destructor:Tests.TestTypesTestParamBytesMethodRequest)
  SharedDtor();
}

void TestTypesTestParamBytesMethodRequest::SharedDtor() {
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TestTypesTestParamBytesMethodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestTypesTestParamBytesMethodRequest& TestTypesTestParamBytesMethodRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestTypesTestParamBytesMethodRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void TestTypesTestParamBytesMethodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.TestTypesTestParamBytesMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* TestTypesTestParamBytesMethodRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestTypesTestParamBytesMethodRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.TestTypesTestParamBytesMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.TestTypesTestParamBytesMethodRequest)
  return target;
}

size_t TestTypesTestParamBytesMethodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.TestTypesTestParamBytesMethodRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_value());
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestTypesTestParamBytesMethodRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.TestTypesTestParamBytesMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TestTypesTestParamBytesMethodRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestTypesTestParamBytesMethodRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.TestTypesTestParamBytesMethodRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.TestTypesTestParamBytesMethodRequest)
    MergeFrom(*source);
  }
}

void TestTypesTestParamBytesMethodRequest::MergeFrom(const TestTypesTestParamBytesMethodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.TestTypesTestParamBytesMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void TestTypesTestParamBytesMethodRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.TestTypesTestParamBytesMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestTypesTestParamBytesMethodRequest::CopyFrom(const TestTypesTestParamBytesMethodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.TestTypesTestParamBytesMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestTypesTestParamBytesMethodRequest::IsInitialized() const {
  return true;
}

void TestTypesTestParamBytesMethodRequest::InternalSwap(TestTypesTestParamBytesMethodRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestTypesTestParamBytesMethodRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TestTypesTestParamBytesMethodResponse::InitAsDefaultInstance() {
}
class TestTypesTestParamBytesMethodResponse::_Internal {
 public:
};

TestTypesTestParamBytesMethodResponse::TestTypesTestParamBytesMethodResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.TestTypesTestParamBytesMethodResponse)
}
TestTypesTestParamBytesMethodResponse::TestTypesTestParamBytesMethodResponse(const TestTypesTestParamBytesMethodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.TestTypesTestParamBytesMethodResponse)
}

void TestTypesTestParamBytesMethodResponse::SharedCtor() {
}

TestTypesTestParamBytesMethodResponse::~TestTypesTestParamBytesMethodResponse() {
  // @@protoc_insertion_point(destructor:Tests.TestTypesTestParamBytesMethodResponse)
  SharedDtor();
}

void TestTypesTestParamBytesMethodResponse::SharedDtor() {
}

void TestTypesTestParamBytesMethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestTypesTestParamBytesMethodResponse& TestTypesTestParamBytesMethodResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestTypesTestParamBytesMethodResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void TestTypesTestParamBytesMethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.TestTypesTestParamBytesMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* TestTypesTestParamBytesMethodResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestTypesTestParamBytesMethodResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.TestTypesTestParamBytesMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.TestTypesTestParamBytesMethodResponse)
  return target;
}

size_t TestTypesTestParamBytesMethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.TestTypesTestParamBytesMethodResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestTypesTestParamBytesMethodResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.TestTypesTestParamBytesMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TestTypesTestParamBytesMethodResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestTypesTestParamBytesMethodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.TestTypesTestParamBytesMethodResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.TestTypesTestParamBytesMethodResponse)
    MergeFrom(*source);
  }
}

void TestTypesTestParamBytesMethodResponse::MergeFrom(const TestTypesTestParamBytesMethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.TestTypesTestParamBytesMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TestTypesTestParamBytesMethodResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.TestTypesTestParamBytesMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestTypesTestParamBytesMethodResponse::CopyFrom(const TestTypesTestParamBytesMethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.TestTypesTestParamBytesMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestTypesTestParamBytesMethodResponse::IsInitialized() const {
  return true;
}

void TestTypesTestParamBytesMethodResponse::InternalSwap(TestTypesTestParamBytesMethodResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestTypesTestParamBytesMethodResponse::GetMetadata() const {
  return GetMetadataStatic();
}

::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false >
  create(kCreateFieldNumber, false);
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false >
  eventListener(kEventListenerFieldNumber, false);
const std::string methodName_default("");
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  methodName(kMethodNameFieldNumber, methodName_default);
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false >
  sync(kSyncFieldNumber, false);
const std::string propName_default("");
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  propName(kPropNameFieldNumber, propName_default);
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false >
  propSet(kPropSetFieldNumber, false);
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false >
  propGet(kPropGetFieldNumber, false);
const std::string messageObjectName_default("");
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  messageObjectName(kMessageObjectNameFieldNumber, messageObjectName_default);
const std::string eventName_default("");
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  eventName(kEventNameFieldNumber, eventName_default);
const std::string forProp_default("");
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  forProp(kForPropFieldNumber, forProp_default);
const std::string serviceObjectName_default("");
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::ServiceOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  serviceObjectName(kServiceObjectNameFieldNumber, serviceObjectName_default);

// @@protoc_insertion_point(namespace_scope)
}  // namespace Tests
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Tests::Test1ListenEventStream* Arena::CreateMaybeMessage< ::Tests::Test1ListenEventStream >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1ListenEventStream >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1CreateRequest* Arena::CreateMaybeMessage< ::Tests::Test1CreateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1CreateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1CreateResponse* Arena::CreateMaybeMessage< ::Tests::Test1CreateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1CreateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1PropStringSetRequest* Arena::CreateMaybeMessage< ::Tests::Test1PropStringSetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1PropStringSetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1PropStringSetResponse* Arena::CreateMaybeMessage< ::Tests::Test1PropStringSetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1PropStringSetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1PropStringGetRequest* Arena::CreateMaybeMessage< ::Tests::Test1PropStringGetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1PropStringGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1PropStringGetResponse* Arena::CreateMaybeMessage< ::Tests::Test1PropStringGetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1PropStringGetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1PropStringPropertyChanged* Arena::CreateMaybeMessage< ::Tests::Test1PropStringPropertyChanged >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1PropStringPropertyChanged >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1PropComplexSetRequest* Arena::CreateMaybeMessage< ::Tests::Test1PropComplexSetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1PropComplexSetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1PropComplexSetResponse* Arena::CreateMaybeMessage< ::Tests::Test1PropComplexSetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1PropComplexSetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1PropComplexGetRequest* Arena::CreateMaybeMessage< ::Tests::Test1PropComplexGetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1PropComplexGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1PropComplexGetResponse* Arena::CreateMaybeMessage< ::Tests::Test1PropComplexGetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1PropComplexGetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1PropComplexPropertyChanged* Arena::CreateMaybeMessage< ::Tests::Test1PropComplexPropertyChanged >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1PropComplexPropertyChanged >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestEventEvent* Arena::CreateMaybeMessage< ::Tests::Test1TestEventEvent >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestEventEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestEventComplexEvent* Arena::CreateMaybeMessage< ::Tests::Test1TestEventComplexEvent >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestEventComplexEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestEventNoDataEvent* Arena::CreateMaybeMessage< ::Tests::Test1TestEventNoDataEvent >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestEventNoDataEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestMethodMethodRequest* Arena::CreateMaybeMessage< ::Tests::Test1TestMethodMethodRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestMethodMethodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestMethodMethodResponse* Arena::CreateMaybeMessage< ::Tests::Test1TestMethodMethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestMethodMethodResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestMethodSyncMethodRequest* Arena::CreateMaybeMessage< ::Tests::Test1TestMethodSyncMethodRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestMethodSyncMethodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestMethodSyncMethodResponse* Arena::CreateMaybeMessage< ::Tests::Test1TestMethodSyncMethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestMethodSyncMethodResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestMethodWithNoResponseMethodRequest* Arena::CreateMaybeMessage< ::Tests::Test1TestMethodWithNoResponseMethodRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestMethodWithNoResponseMethodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestMethodWithNoResponseMethodResponse* Arena::CreateMaybeMessage< ::Tests::Test1TestMethodWithNoResponseMethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestMethodWithNoResponseMethodResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestMethodPrimitiveMethodRequest* Arena::CreateMaybeMessage< ::Tests::Test1TestMethodPrimitiveMethodRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestMethodPrimitiveMethodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestMethodPrimitiveMethodResponse* Arena::CreateMaybeMessage< ::Tests::Test1TestMethodPrimitiveMethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestMethodPrimitiveMethodResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestMethodNoRequestOrResponseMethodRequest* Arena::CreateMaybeMessage< ::Tests::Test1TestMethodNoRequestOrResponseMethodRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestMethodNoRequestOrResponseMethodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestMethodNoRequestOrResponseMethodResponse* Arena::CreateMaybeMessage< ::Tests::Test1TestMethodNoRequestOrResponseMethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestMethodNoRequestOrResponseMethodResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestMethodNoRequestMethodRequest* Arena::CreateMaybeMessage< ::Tests::Test1TestMethodNoRequestMethodRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestMethodNoRequestMethodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestMethodNoRequestMethodResponse* Arena::CreateMaybeMessage< ::Tests::Test1TestMethodNoRequestMethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestMethodNoRequestMethodResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestMethodNoResponseMethodRequest* Arena::CreateMaybeMessage< ::Tests::Test1TestMethodNoResponseMethodRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestMethodNoResponseMethodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestMethodNoResponseMethodResponse* Arena::CreateMaybeMessage< ::Tests::Test1TestMethodNoResponseMethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestMethodNoResponseMethodResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test2ListenEventStream* Arena::CreateMaybeMessage< ::Tests::Test2ListenEventStream >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test2ListenEventStream >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test2CreateRequest* Arena::CreateMaybeMessage< ::Tests::Test2CreateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test2CreateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test2CreateResponse* Arena::CreateMaybeMessage< ::Tests::Test2CreateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test2CreateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test2PropString2SetRequest* Arena::CreateMaybeMessage< ::Tests::Test2PropString2SetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test2PropString2SetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test2PropString2SetResponse* Arena::CreateMaybeMessage< ::Tests::Test2PropString2SetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test2PropString2SetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test2PropString2GetRequest* Arena::CreateMaybeMessage< ::Tests::Test2PropString2GetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test2PropString2GetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test2PropString2GetResponse* Arena::CreateMaybeMessage< ::Tests::Test2PropString2GetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test2PropString2GetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test2PropString2PropertyChanged* Arena::CreateMaybeMessage< ::Tests::Test2PropString2PropertyChanged >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test2PropString2PropertyChanged >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test2PropComplex2SetRequest* Arena::CreateMaybeMessage< ::Tests::Test2PropComplex2SetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test2PropComplex2SetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test2PropComplex2SetResponse* Arena::CreateMaybeMessage< ::Tests::Test2PropComplex2SetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test2PropComplex2SetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test2PropComplex2GetRequest* Arena::CreateMaybeMessage< ::Tests::Test2PropComplex2GetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test2PropComplex2GetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test2PropComplex2GetResponse* Arena::CreateMaybeMessage< ::Tests::Test2PropComplex2GetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test2PropComplex2GetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test2PropComplex2PropertyChanged* Arena::CreateMaybeMessage< ::Tests::Test2PropComplex2PropertyChanged >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test2PropComplex2PropertyChanged >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test2TestEvent2Event* Arena::CreateMaybeMessage< ::Tests::Test2TestEvent2Event >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test2TestEvent2Event >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test2TestEventComplex2Event* Arena::CreateMaybeMessage< ::Tests::Test2TestEventComplex2Event >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test2TestEventComplex2Event >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test2TestEventNoData2Event* Arena::CreateMaybeMessage< ::Tests::Test2TestEventNoData2Event >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test2TestEventNoData2Event >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test2TestMethod2MethodRequest* Arena::CreateMaybeMessage< ::Tests::Test2TestMethod2MethodRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test2TestMethod2MethodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test2TestMethod2MethodResponse* Arena::CreateMaybeMessage< ::Tests::Test2TestMethod2MethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test2TestMethod2MethodResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test2TestMethodSync2MethodRequest* Arena::CreateMaybeMessage< ::Tests::Test2TestMethodSync2MethodRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test2TestMethodSync2MethodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test2TestMethodSync2MethodResponse* Arena::CreateMaybeMessage< ::Tests::Test2TestMethodSync2MethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test2TestMethodSync2MethodResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test2TestMethodWithNoResponse2MethodRequest* Arena::CreateMaybeMessage< ::Tests::Test2TestMethodWithNoResponse2MethodRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test2TestMethodWithNoResponse2MethodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test2TestMethodWithNoResponse2MethodResponse* Arena::CreateMaybeMessage< ::Tests::Test2TestMethodWithNoResponse2MethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test2TestMethodWithNoResponse2MethodResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test2TestMethodNoRequest2MethodRequest* Arena::CreateMaybeMessage< ::Tests::Test2TestMethodNoRequest2MethodRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test2TestMethodNoRequest2MethodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test2TestMethodNoRequest2MethodResponse* Arena::CreateMaybeMessage< ::Tests::Test2TestMethodNoRequest2MethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test2TestMethodNoRequest2MethodResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::TestTypesListenEventStream* Arena::CreateMaybeMessage< ::Tests::TestTypesListenEventStream >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::TestTypesListenEventStream >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::TestTypesCreateRequest* Arena::CreateMaybeMessage< ::Tests::TestTypesCreateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::TestTypesCreateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::TestTypesCreateResponse* Arena::CreateMaybeMessage< ::Tests::TestTypesCreateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::TestTypesCreateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::TestTypesTestEventEvent* Arena::CreateMaybeMessage< ::Tests::TestTypesTestEventEvent >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::TestTypesTestEventEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::TestTypesTestParamDoubleMethodRequest* Arena::CreateMaybeMessage< ::Tests::TestTypesTestParamDoubleMethodRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::TestTypesTestParamDoubleMethodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::TestTypesTestParamDoubleMethodResponse* Arena::CreateMaybeMessage< ::Tests::TestTypesTestParamDoubleMethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::TestTypesTestParamDoubleMethodResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::TestTypesTestParamFloatMethodRequest* Arena::CreateMaybeMessage< ::Tests::TestTypesTestParamFloatMethodRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::TestTypesTestParamFloatMethodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::TestTypesTestParamFloatMethodResponse* Arena::CreateMaybeMessage< ::Tests::TestTypesTestParamFloatMethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::TestTypesTestParamFloatMethodResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::TestTypesTestParamIntMethodRequest* Arena::CreateMaybeMessage< ::Tests::TestTypesTestParamIntMethodRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::TestTypesTestParamIntMethodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::TestTypesTestParamIntMethodResponse* Arena::CreateMaybeMessage< ::Tests::TestTypesTestParamIntMethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::TestTypesTestParamIntMethodResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::TestTypesTestParamUIntMethodRequest* Arena::CreateMaybeMessage< ::Tests::TestTypesTestParamUIntMethodRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::TestTypesTestParamUIntMethodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::TestTypesTestParamUIntMethodResponse* Arena::CreateMaybeMessage< ::Tests::TestTypesTestParamUIntMethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::TestTypesTestParamUIntMethodResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::TestTypesTestParamLongMethodRequest* Arena::CreateMaybeMessage< ::Tests::TestTypesTestParamLongMethodRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::TestTypesTestParamLongMethodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::TestTypesTestParamLongMethodResponse* Arena::CreateMaybeMessage< ::Tests::TestTypesTestParamLongMethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::TestTypesTestParamLongMethodResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::TestTypesTestParamULongMethodRequest* Arena::CreateMaybeMessage< ::Tests::TestTypesTestParamULongMethodRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::TestTypesTestParamULongMethodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::TestTypesTestParamULongMethodResponse* Arena::CreateMaybeMessage< ::Tests::TestTypesTestParamULongMethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::TestTypesTestParamULongMethodResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::TestTypesTestParamBoolMethodRequest* Arena::CreateMaybeMessage< ::Tests::TestTypesTestParamBoolMethodRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::TestTypesTestParamBoolMethodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::TestTypesTestParamBoolMethodResponse* Arena::CreateMaybeMessage< ::Tests::TestTypesTestParamBoolMethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::TestTypesTestParamBoolMethodResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::TestTypesTestParamStringMethodRequest* Arena::CreateMaybeMessage< ::Tests::TestTypesTestParamStringMethodRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::TestTypesTestParamStringMethodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::TestTypesTestParamStringMethodResponse* Arena::CreateMaybeMessage< ::Tests::TestTypesTestParamStringMethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::TestTypesTestParamStringMethodResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::TestTypesTestParamByteMethodRequest* Arena::CreateMaybeMessage< ::Tests::TestTypesTestParamByteMethodRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::TestTypesTestParamByteMethodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::TestTypesTestParamByteMethodResponse* Arena::CreateMaybeMessage< ::Tests::TestTypesTestParamByteMethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::TestTypesTestParamByteMethodResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::TestTypesTestParamBytesMethodRequest* Arena::CreateMaybeMessage< ::Tests::TestTypesTestParamBytesMethodRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::TestTypesTestParamBytesMethodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::TestTypesTestParamBytesMethodResponse* Arena::CreateMaybeMessage< ::Tests::TestTypesTestParamBytesMethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::TestTypesTestParamBytesMethodResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
