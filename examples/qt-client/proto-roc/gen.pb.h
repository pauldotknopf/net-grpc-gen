// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gen.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_gen_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_gen_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include <google/protobuf/descriptor.pb.h>
#include <google/protobuf/wrappers.pb.h>
#include "types.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_gen_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_gen_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[52]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_gen_2eproto;
namespace Tests {
class Test1CreateResponse;
class Test1CreateResponseDefaultTypeInternal;
extern Test1CreateResponseDefaultTypeInternal _Test1CreateResponse_default_instance_;
class Test1ListenEventStream;
class Test1ListenEventStreamDefaultTypeInternal;
extern Test1ListenEventStreamDefaultTypeInternal _Test1ListenEventStream_default_instance_;
class Test1PropComplexGetRequest;
class Test1PropComplexGetRequestDefaultTypeInternal;
extern Test1PropComplexGetRequestDefaultTypeInternal _Test1PropComplexGetRequest_default_instance_;
class Test1PropComplexGetResponse;
class Test1PropComplexGetResponseDefaultTypeInternal;
extern Test1PropComplexGetResponseDefaultTypeInternal _Test1PropComplexGetResponse_default_instance_;
class Test1PropComplexPropertyChanged;
class Test1PropComplexPropertyChangedDefaultTypeInternal;
extern Test1PropComplexPropertyChangedDefaultTypeInternal _Test1PropComplexPropertyChanged_default_instance_;
class Test1PropComplexSetRequest;
class Test1PropComplexSetRequestDefaultTypeInternal;
extern Test1PropComplexSetRequestDefaultTypeInternal _Test1PropComplexSetRequest_default_instance_;
class Test1PropComplexSetResponse;
class Test1PropComplexSetResponseDefaultTypeInternal;
extern Test1PropComplexSetResponseDefaultTypeInternal _Test1PropComplexSetResponse_default_instance_;
class Test1PropStringGetRequest;
class Test1PropStringGetRequestDefaultTypeInternal;
extern Test1PropStringGetRequestDefaultTypeInternal _Test1PropStringGetRequest_default_instance_;
class Test1PropStringGetResponse;
class Test1PropStringGetResponseDefaultTypeInternal;
extern Test1PropStringGetResponseDefaultTypeInternal _Test1PropStringGetResponse_default_instance_;
class Test1PropStringPropertyChanged;
class Test1PropStringPropertyChangedDefaultTypeInternal;
extern Test1PropStringPropertyChangedDefaultTypeInternal _Test1PropStringPropertyChanged_default_instance_;
class Test1PropStringSetRequest;
class Test1PropStringSetRequestDefaultTypeInternal;
extern Test1PropStringSetRequestDefaultTypeInternal _Test1PropStringSetRequest_default_instance_;
class Test1PropStringSetResponse;
class Test1PropStringSetResponseDefaultTypeInternal;
extern Test1PropStringSetResponseDefaultTypeInternal _Test1PropStringSetResponse_default_instance_;
class Test1StopRequest;
class Test1StopRequestDefaultTypeInternal;
extern Test1StopRequestDefaultTypeInternal _Test1StopRequest_default_instance_;
class Test1StopResponse;
class Test1StopResponseDefaultTypeInternal;
extern Test1StopResponseDefaultTypeInternal _Test1StopResponse_default_instance_;
class Test1TestEventComplexEvent;
class Test1TestEventComplexEventDefaultTypeInternal;
extern Test1TestEventComplexEventDefaultTypeInternal _Test1TestEventComplexEvent_default_instance_;
class Test1TestEventEvent;
class Test1TestEventEventDefaultTypeInternal;
extern Test1TestEventEventDefaultTypeInternal _Test1TestEventEvent_default_instance_;
class Test1TestEventNoDataEvent;
class Test1TestEventNoDataEventDefaultTypeInternal;
extern Test1TestEventNoDataEventDefaultTypeInternal _Test1TestEventNoDataEvent_default_instance_;
class Test1TestMethodMethodRequest;
class Test1TestMethodMethodRequestDefaultTypeInternal;
extern Test1TestMethodMethodRequestDefaultTypeInternal _Test1TestMethodMethodRequest_default_instance_;
class Test1TestMethodMethodResponse;
class Test1TestMethodMethodResponseDefaultTypeInternal;
extern Test1TestMethodMethodResponseDefaultTypeInternal _Test1TestMethodMethodResponse_default_instance_;
class Test1TestMethodNoRequestMethodRequest;
class Test1TestMethodNoRequestMethodRequestDefaultTypeInternal;
extern Test1TestMethodNoRequestMethodRequestDefaultTypeInternal _Test1TestMethodNoRequestMethodRequest_default_instance_;
class Test1TestMethodNoRequestMethodResponse;
class Test1TestMethodNoRequestMethodResponseDefaultTypeInternal;
extern Test1TestMethodNoRequestMethodResponseDefaultTypeInternal _Test1TestMethodNoRequestMethodResponse_default_instance_;
class Test1TestMethodPrimitiveMethodRequest;
class Test1TestMethodPrimitiveMethodRequestDefaultTypeInternal;
extern Test1TestMethodPrimitiveMethodRequestDefaultTypeInternal _Test1TestMethodPrimitiveMethodRequest_default_instance_;
class Test1TestMethodPrimitiveMethodResponse;
class Test1TestMethodPrimitiveMethodResponseDefaultTypeInternal;
extern Test1TestMethodPrimitiveMethodResponseDefaultTypeInternal _Test1TestMethodPrimitiveMethodResponse_default_instance_;
class Test1TestMethodSyncMethodRequest;
class Test1TestMethodSyncMethodRequestDefaultTypeInternal;
extern Test1TestMethodSyncMethodRequestDefaultTypeInternal _Test1TestMethodSyncMethodRequest_default_instance_;
class Test1TestMethodSyncMethodResponse;
class Test1TestMethodSyncMethodResponseDefaultTypeInternal;
extern Test1TestMethodSyncMethodResponseDefaultTypeInternal _Test1TestMethodSyncMethodResponse_default_instance_;
class Test1TestMethodWithNoResponseMethodRequest;
class Test1TestMethodWithNoResponseMethodRequestDefaultTypeInternal;
extern Test1TestMethodWithNoResponseMethodRequestDefaultTypeInternal _Test1TestMethodWithNoResponseMethodRequest_default_instance_;
class Test1TestMethodWithNoResponseMethodResponse;
class Test1TestMethodWithNoResponseMethodResponseDefaultTypeInternal;
extern Test1TestMethodWithNoResponseMethodResponseDefaultTypeInternal _Test1TestMethodWithNoResponseMethodResponse_default_instance_;
class Test2CreateResponse;
class Test2CreateResponseDefaultTypeInternal;
extern Test2CreateResponseDefaultTypeInternal _Test2CreateResponse_default_instance_;
class Test2ListenEventStream;
class Test2ListenEventStreamDefaultTypeInternal;
extern Test2ListenEventStreamDefaultTypeInternal _Test2ListenEventStream_default_instance_;
class Test2PropComplex2GetRequest;
class Test2PropComplex2GetRequestDefaultTypeInternal;
extern Test2PropComplex2GetRequestDefaultTypeInternal _Test2PropComplex2GetRequest_default_instance_;
class Test2PropComplex2GetResponse;
class Test2PropComplex2GetResponseDefaultTypeInternal;
extern Test2PropComplex2GetResponseDefaultTypeInternal _Test2PropComplex2GetResponse_default_instance_;
class Test2PropComplex2PropertyChanged;
class Test2PropComplex2PropertyChangedDefaultTypeInternal;
extern Test2PropComplex2PropertyChangedDefaultTypeInternal _Test2PropComplex2PropertyChanged_default_instance_;
class Test2PropComplex2SetRequest;
class Test2PropComplex2SetRequestDefaultTypeInternal;
extern Test2PropComplex2SetRequestDefaultTypeInternal _Test2PropComplex2SetRequest_default_instance_;
class Test2PropComplex2SetResponse;
class Test2PropComplex2SetResponseDefaultTypeInternal;
extern Test2PropComplex2SetResponseDefaultTypeInternal _Test2PropComplex2SetResponse_default_instance_;
class Test2PropString2GetRequest;
class Test2PropString2GetRequestDefaultTypeInternal;
extern Test2PropString2GetRequestDefaultTypeInternal _Test2PropString2GetRequest_default_instance_;
class Test2PropString2GetResponse;
class Test2PropString2GetResponseDefaultTypeInternal;
extern Test2PropString2GetResponseDefaultTypeInternal _Test2PropString2GetResponse_default_instance_;
class Test2PropString2PropertyChanged;
class Test2PropString2PropertyChangedDefaultTypeInternal;
extern Test2PropString2PropertyChangedDefaultTypeInternal _Test2PropString2PropertyChanged_default_instance_;
class Test2PropString2SetRequest;
class Test2PropString2SetRequestDefaultTypeInternal;
extern Test2PropString2SetRequestDefaultTypeInternal _Test2PropString2SetRequest_default_instance_;
class Test2PropString2SetResponse;
class Test2PropString2SetResponseDefaultTypeInternal;
extern Test2PropString2SetResponseDefaultTypeInternal _Test2PropString2SetResponse_default_instance_;
class Test2StopRequest;
class Test2StopRequestDefaultTypeInternal;
extern Test2StopRequestDefaultTypeInternal _Test2StopRequest_default_instance_;
class Test2StopResponse;
class Test2StopResponseDefaultTypeInternal;
extern Test2StopResponseDefaultTypeInternal _Test2StopResponse_default_instance_;
class Test2TestEvent2Event;
class Test2TestEvent2EventDefaultTypeInternal;
extern Test2TestEvent2EventDefaultTypeInternal _Test2TestEvent2Event_default_instance_;
class Test2TestEventComplex2Event;
class Test2TestEventComplex2EventDefaultTypeInternal;
extern Test2TestEventComplex2EventDefaultTypeInternal _Test2TestEventComplex2Event_default_instance_;
class Test2TestEventNoData2Event;
class Test2TestEventNoData2EventDefaultTypeInternal;
extern Test2TestEventNoData2EventDefaultTypeInternal _Test2TestEventNoData2Event_default_instance_;
class Test2TestMethod2MethodRequest;
class Test2TestMethod2MethodRequestDefaultTypeInternal;
extern Test2TestMethod2MethodRequestDefaultTypeInternal _Test2TestMethod2MethodRequest_default_instance_;
class Test2TestMethod2MethodResponse;
class Test2TestMethod2MethodResponseDefaultTypeInternal;
extern Test2TestMethod2MethodResponseDefaultTypeInternal _Test2TestMethod2MethodResponse_default_instance_;
class Test2TestMethodNoRequest2MethodRequest;
class Test2TestMethodNoRequest2MethodRequestDefaultTypeInternal;
extern Test2TestMethodNoRequest2MethodRequestDefaultTypeInternal _Test2TestMethodNoRequest2MethodRequest_default_instance_;
class Test2TestMethodNoRequest2MethodResponse;
class Test2TestMethodNoRequest2MethodResponseDefaultTypeInternal;
extern Test2TestMethodNoRequest2MethodResponseDefaultTypeInternal _Test2TestMethodNoRequest2MethodResponse_default_instance_;
class Test2TestMethodSync2MethodRequest;
class Test2TestMethodSync2MethodRequestDefaultTypeInternal;
extern Test2TestMethodSync2MethodRequestDefaultTypeInternal _Test2TestMethodSync2MethodRequest_default_instance_;
class Test2TestMethodSync2MethodResponse;
class Test2TestMethodSync2MethodResponseDefaultTypeInternal;
extern Test2TestMethodSync2MethodResponseDefaultTypeInternal _Test2TestMethodSync2MethodResponse_default_instance_;
class Test2TestMethodWithNoResponse2MethodRequest;
class Test2TestMethodWithNoResponse2MethodRequestDefaultTypeInternal;
extern Test2TestMethodWithNoResponse2MethodRequestDefaultTypeInternal _Test2TestMethodWithNoResponse2MethodRequest_default_instance_;
class Test2TestMethodWithNoResponse2MethodResponse;
class Test2TestMethodWithNoResponse2MethodResponseDefaultTypeInternal;
extern Test2TestMethodWithNoResponse2MethodResponseDefaultTypeInternal _Test2TestMethodWithNoResponse2MethodResponse_default_instance_;
}  // namespace Tests
PROTOBUF_NAMESPACE_OPEN
template<> ::Tests::Test1CreateResponse* Arena::CreateMaybeMessage<::Tests::Test1CreateResponse>(Arena*);
template<> ::Tests::Test1ListenEventStream* Arena::CreateMaybeMessage<::Tests::Test1ListenEventStream>(Arena*);
template<> ::Tests::Test1PropComplexGetRequest* Arena::CreateMaybeMessage<::Tests::Test1PropComplexGetRequest>(Arena*);
template<> ::Tests::Test1PropComplexGetResponse* Arena::CreateMaybeMessage<::Tests::Test1PropComplexGetResponse>(Arena*);
template<> ::Tests::Test1PropComplexPropertyChanged* Arena::CreateMaybeMessage<::Tests::Test1PropComplexPropertyChanged>(Arena*);
template<> ::Tests::Test1PropComplexSetRequest* Arena::CreateMaybeMessage<::Tests::Test1PropComplexSetRequest>(Arena*);
template<> ::Tests::Test1PropComplexSetResponse* Arena::CreateMaybeMessage<::Tests::Test1PropComplexSetResponse>(Arena*);
template<> ::Tests::Test1PropStringGetRequest* Arena::CreateMaybeMessage<::Tests::Test1PropStringGetRequest>(Arena*);
template<> ::Tests::Test1PropStringGetResponse* Arena::CreateMaybeMessage<::Tests::Test1PropStringGetResponse>(Arena*);
template<> ::Tests::Test1PropStringPropertyChanged* Arena::CreateMaybeMessage<::Tests::Test1PropStringPropertyChanged>(Arena*);
template<> ::Tests::Test1PropStringSetRequest* Arena::CreateMaybeMessage<::Tests::Test1PropStringSetRequest>(Arena*);
template<> ::Tests::Test1PropStringSetResponse* Arena::CreateMaybeMessage<::Tests::Test1PropStringSetResponse>(Arena*);
template<> ::Tests::Test1StopRequest* Arena::CreateMaybeMessage<::Tests::Test1StopRequest>(Arena*);
template<> ::Tests::Test1StopResponse* Arena::CreateMaybeMessage<::Tests::Test1StopResponse>(Arena*);
template<> ::Tests::Test1TestEventComplexEvent* Arena::CreateMaybeMessage<::Tests::Test1TestEventComplexEvent>(Arena*);
template<> ::Tests::Test1TestEventEvent* Arena::CreateMaybeMessage<::Tests::Test1TestEventEvent>(Arena*);
template<> ::Tests::Test1TestEventNoDataEvent* Arena::CreateMaybeMessage<::Tests::Test1TestEventNoDataEvent>(Arena*);
template<> ::Tests::Test1TestMethodMethodRequest* Arena::CreateMaybeMessage<::Tests::Test1TestMethodMethodRequest>(Arena*);
template<> ::Tests::Test1TestMethodMethodResponse* Arena::CreateMaybeMessage<::Tests::Test1TestMethodMethodResponse>(Arena*);
template<> ::Tests::Test1TestMethodNoRequestMethodRequest* Arena::CreateMaybeMessage<::Tests::Test1TestMethodNoRequestMethodRequest>(Arena*);
template<> ::Tests::Test1TestMethodNoRequestMethodResponse* Arena::CreateMaybeMessage<::Tests::Test1TestMethodNoRequestMethodResponse>(Arena*);
template<> ::Tests::Test1TestMethodPrimitiveMethodRequest* Arena::CreateMaybeMessage<::Tests::Test1TestMethodPrimitiveMethodRequest>(Arena*);
template<> ::Tests::Test1TestMethodPrimitiveMethodResponse* Arena::CreateMaybeMessage<::Tests::Test1TestMethodPrimitiveMethodResponse>(Arena*);
template<> ::Tests::Test1TestMethodSyncMethodRequest* Arena::CreateMaybeMessage<::Tests::Test1TestMethodSyncMethodRequest>(Arena*);
template<> ::Tests::Test1TestMethodSyncMethodResponse* Arena::CreateMaybeMessage<::Tests::Test1TestMethodSyncMethodResponse>(Arena*);
template<> ::Tests::Test1TestMethodWithNoResponseMethodRequest* Arena::CreateMaybeMessage<::Tests::Test1TestMethodWithNoResponseMethodRequest>(Arena*);
template<> ::Tests::Test1TestMethodWithNoResponseMethodResponse* Arena::CreateMaybeMessage<::Tests::Test1TestMethodWithNoResponseMethodResponse>(Arena*);
template<> ::Tests::Test2CreateResponse* Arena::CreateMaybeMessage<::Tests::Test2CreateResponse>(Arena*);
template<> ::Tests::Test2ListenEventStream* Arena::CreateMaybeMessage<::Tests::Test2ListenEventStream>(Arena*);
template<> ::Tests::Test2PropComplex2GetRequest* Arena::CreateMaybeMessage<::Tests::Test2PropComplex2GetRequest>(Arena*);
template<> ::Tests::Test2PropComplex2GetResponse* Arena::CreateMaybeMessage<::Tests::Test2PropComplex2GetResponse>(Arena*);
template<> ::Tests::Test2PropComplex2PropertyChanged* Arena::CreateMaybeMessage<::Tests::Test2PropComplex2PropertyChanged>(Arena*);
template<> ::Tests::Test2PropComplex2SetRequest* Arena::CreateMaybeMessage<::Tests::Test2PropComplex2SetRequest>(Arena*);
template<> ::Tests::Test2PropComplex2SetResponse* Arena::CreateMaybeMessage<::Tests::Test2PropComplex2SetResponse>(Arena*);
template<> ::Tests::Test2PropString2GetRequest* Arena::CreateMaybeMessage<::Tests::Test2PropString2GetRequest>(Arena*);
template<> ::Tests::Test2PropString2GetResponse* Arena::CreateMaybeMessage<::Tests::Test2PropString2GetResponse>(Arena*);
template<> ::Tests::Test2PropString2PropertyChanged* Arena::CreateMaybeMessage<::Tests::Test2PropString2PropertyChanged>(Arena*);
template<> ::Tests::Test2PropString2SetRequest* Arena::CreateMaybeMessage<::Tests::Test2PropString2SetRequest>(Arena*);
template<> ::Tests::Test2PropString2SetResponse* Arena::CreateMaybeMessage<::Tests::Test2PropString2SetResponse>(Arena*);
template<> ::Tests::Test2StopRequest* Arena::CreateMaybeMessage<::Tests::Test2StopRequest>(Arena*);
template<> ::Tests::Test2StopResponse* Arena::CreateMaybeMessage<::Tests::Test2StopResponse>(Arena*);
template<> ::Tests::Test2TestEvent2Event* Arena::CreateMaybeMessage<::Tests::Test2TestEvent2Event>(Arena*);
template<> ::Tests::Test2TestEventComplex2Event* Arena::CreateMaybeMessage<::Tests::Test2TestEventComplex2Event>(Arena*);
template<> ::Tests::Test2TestEventNoData2Event* Arena::CreateMaybeMessage<::Tests::Test2TestEventNoData2Event>(Arena*);
template<> ::Tests::Test2TestMethod2MethodRequest* Arena::CreateMaybeMessage<::Tests::Test2TestMethod2MethodRequest>(Arena*);
template<> ::Tests::Test2TestMethod2MethodResponse* Arena::CreateMaybeMessage<::Tests::Test2TestMethod2MethodResponse>(Arena*);
template<> ::Tests::Test2TestMethodNoRequest2MethodRequest* Arena::CreateMaybeMessage<::Tests::Test2TestMethodNoRequest2MethodRequest>(Arena*);
template<> ::Tests::Test2TestMethodNoRequest2MethodResponse* Arena::CreateMaybeMessage<::Tests::Test2TestMethodNoRequest2MethodResponse>(Arena*);
template<> ::Tests::Test2TestMethodSync2MethodRequest* Arena::CreateMaybeMessage<::Tests::Test2TestMethodSync2MethodRequest>(Arena*);
template<> ::Tests::Test2TestMethodSync2MethodResponse* Arena::CreateMaybeMessage<::Tests::Test2TestMethodSync2MethodResponse>(Arena*);
template<> ::Tests::Test2TestMethodWithNoResponse2MethodRequest* Arena::CreateMaybeMessage<::Tests::Test2TestMethodWithNoResponse2MethodRequest>(Arena*);
template<> ::Tests::Test2TestMethodWithNoResponse2MethodResponse* Arena::CreateMaybeMessage<::Tests::Test2TestMethodWithNoResponse2MethodResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Tests {

// ===================================================================

class Test1ListenEventStream :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test1ListenEventStream) */ {
 public:
  Test1ListenEventStream();
  virtual ~Test1ListenEventStream();

  Test1ListenEventStream(const Test1ListenEventStream& from);
  Test1ListenEventStream(Test1ListenEventStream&& from) noexcept
    : Test1ListenEventStream() {
    *this = ::std::move(from);
  }

  inline Test1ListenEventStream& operator=(const Test1ListenEventStream& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test1ListenEventStream& operator=(Test1ListenEventStream&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test1ListenEventStream& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test1ListenEventStream* internal_default_instance() {
    return reinterpret_cast<const Test1ListenEventStream*>(
               &_Test1ListenEventStream_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Test1ListenEventStream& a, Test1ListenEventStream& b) {
    a.Swap(&b);
  }
  inline void Swap(Test1ListenEventStream* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test1ListenEventStream* New() const final {
    return CreateMaybeMessage<Test1ListenEventStream>(nullptr);
  }

  Test1ListenEventStream* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test1ListenEventStream>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test1ListenEventStream& from);
  void MergeFrom(const Test1ListenEventStream& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test1ListenEventStream* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test1ListenEventStream";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
  };
  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test1ListenEventStream)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test1CreateResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test1CreateResponse) */ {
 public:
  Test1CreateResponse();
  virtual ~Test1CreateResponse();

  Test1CreateResponse(const Test1CreateResponse& from);
  Test1CreateResponse(Test1CreateResponse&& from) noexcept
    : Test1CreateResponse() {
    *this = ::std::move(from);
  }

  inline Test1CreateResponse& operator=(const Test1CreateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test1CreateResponse& operator=(Test1CreateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test1CreateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test1CreateResponse* internal_default_instance() {
    return reinterpret_cast<const Test1CreateResponse*>(
               &_Test1CreateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Test1CreateResponse& a, Test1CreateResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(Test1CreateResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test1CreateResponse* New() const final {
    return CreateMaybeMessage<Test1CreateResponse>(nullptr);
  }

  Test1CreateResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test1CreateResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test1CreateResponse& from);
  void MergeFrom(const Test1CreateResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test1CreateResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test1CreateResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
  };
  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test1CreateResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test1StopRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test1StopRequest) */ {
 public:
  Test1StopRequest();
  virtual ~Test1StopRequest();

  Test1StopRequest(const Test1StopRequest& from);
  Test1StopRequest(Test1StopRequest&& from) noexcept
    : Test1StopRequest() {
    *this = ::std::move(from);
  }

  inline Test1StopRequest& operator=(const Test1StopRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test1StopRequest& operator=(Test1StopRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test1StopRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test1StopRequest* internal_default_instance() {
    return reinterpret_cast<const Test1StopRequest*>(
               &_Test1StopRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Test1StopRequest& a, Test1StopRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(Test1StopRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test1StopRequest* New() const final {
    return CreateMaybeMessage<Test1StopRequest>(nullptr);
  }

  Test1StopRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test1StopRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test1StopRequest& from);
  void MergeFrom(const Test1StopRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test1StopRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test1StopRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Tests.Test1StopRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test1StopResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test1StopResponse) */ {
 public:
  Test1StopResponse();
  virtual ~Test1StopResponse();

  Test1StopResponse(const Test1StopResponse& from);
  Test1StopResponse(Test1StopResponse&& from) noexcept
    : Test1StopResponse() {
    *this = ::std::move(from);
  }

  inline Test1StopResponse& operator=(const Test1StopResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test1StopResponse& operator=(Test1StopResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test1StopResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test1StopResponse* internal_default_instance() {
    return reinterpret_cast<const Test1StopResponse*>(
               &_Test1StopResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Test1StopResponse& a, Test1StopResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(Test1StopResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test1StopResponse* New() const final {
    return CreateMaybeMessage<Test1StopResponse>(nullptr);
  }

  Test1StopResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test1StopResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test1StopResponse& from);
  void MergeFrom(const Test1StopResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test1StopResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test1StopResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Tests.Test1StopResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test1PropStringSetRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test1PropStringSetRequest) */ {
 public:
  Test1PropStringSetRequest();
  virtual ~Test1PropStringSetRequest();

  Test1PropStringSetRequest(const Test1PropStringSetRequest& from);
  Test1PropStringSetRequest(Test1PropStringSetRequest&& from) noexcept
    : Test1PropStringSetRequest() {
    *this = ::std::move(from);
  }

  inline Test1PropStringSetRequest& operator=(const Test1PropStringSetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test1PropStringSetRequest& operator=(Test1PropStringSetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test1PropStringSetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test1PropStringSetRequest* internal_default_instance() {
    return reinterpret_cast<const Test1PropStringSetRequest*>(
               &_Test1PropStringSetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Test1PropStringSetRequest& a, Test1PropStringSetRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(Test1PropStringSetRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test1PropStringSetRequest* New() const final {
    return CreateMaybeMessage<Test1PropStringSetRequest>(nullptr);
  }

  Test1PropStringSetRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test1PropStringSetRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test1PropStringSetRequest& from);
  void MergeFrom(const Test1PropStringSetRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test1PropStringSetRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test1PropStringSetRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kObjectIdFieldNumber = 1,
  };
  // .google.protobuf.StringValue value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const PROTOBUF_NAMESPACE_ID::StringValue& value() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_value();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_value();
  void set_allocated_value(PROTOBUF_NAMESPACE_ID::StringValue* value);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_value() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_value();
  public:

  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test1PropStringSetRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  PROTOBUF_NAMESPACE_ID::StringValue* value_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test1PropStringSetResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test1PropStringSetResponse) */ {
 public:
  Test1PropStringSetResponse();
  virtual ~Test1PropStringSetResponse();

  Test1PropStringSetResponse(const Test1PropStringSetResponse& from);
  Test1PropStringSetResponse(Test1PropStringSetResponse&& from) noexcept
    : Test1PropStringSetResponse() {
    *this = ::std::move(from);
  }

  inline Test1PropStringSetResponse& operator=(const Test1PropStringSetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test1PropStringSetResponse& operator=(Test1PropStringSetResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test1PropStringSetResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test1PropStringSetResponse* internal_default_instance() {
    return reinterpret_cast<const Test1PropStringSetResponse*>(
               &_Test1PropStringSetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Test1PropStringSetResponse& a, Test1PropStringSetResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(Test1PropStringSetResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test1PropStringSetResponse* New() const final {
    return CreateMaybeMessage<Test1PropStringSetResponse>(nullptr);
  }

  Test1PropStringSetResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test1PropStringSetResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test1PropStringSetResponse& from);
  void MergeFrom(const Test1PropStringSetResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test1PropStringSetResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test1PropStringSetResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Tests.Test1PropStringSetResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test1PropStringGetRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test1PropStringGetRequest) */ {
 public:
  Test1PropStringGetRequest();
  virtual ~Test1PropStringGetRequest();

  Test1PropStringGetRequest(const Test1PropStringGetRequest& from);
  Test1PropStringGetRequest(Test1PropStringGetRequest&& from) noexcept
    : Test1PropStringGetRequest() {
    *this = ::std::move(from);
  }

  inline Test1PropStringGetRequest& operator=(const Test1PropStringGetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test1PropStringGetRequest& operator=(Test1PropStringGetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test1PropStringGetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test1PropStringGetRequest* internal_default_instance() {
    return reinterpret_cast<const Test1PropStringGetRequest*>(
               &_Test1PropStringGetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(Test1PropStringGetRequest& a, Test1PropStringGetRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(Test1PropStringGetRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test1PropStringGetRequest* New() const final {
    return CreateMaybeMessage<Test1PropStringGetRequest>(nullptr);
  }

  Test1PropStringGetRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test1PropStringGetRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test1PropStringGetRequest& from);
  void MergeFrom(const Test1PropStringGetRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test1PropStringGetRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test1PropStringGetRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
  };
  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test1PropStringGetRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test1PropStringGetResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test1PropStringGetResponse) */ {
 public:
  Test1PropStringGetResponse();
  virtual ~Test1PropStringGetResponse();

  Test1PropStringGetResponse(const Test1PropStringGetResponse& from);
  Test1PropStringGetResponse(Test1PropStringGetResponse&& from) noexcept
    : Test1PropStringGetResponse() {
    *this = ::std::move(from);
  }

  inline Test1PropStringGetResponse& operator=(const Test1PropStringGetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test1PropStringGetResponse& operator=(Test1PropStringGetResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test1PropStringGetResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test1PropStringGetResponse* internal_default_instance() {
    return reinterpret_cast<const Test1PropStringGetResponse*>(
               &_Test1PropStringGetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(Test1PropStringGetResponse& a, Test1PropStringGetResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(Test1PropStringGetResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test1PropStringGetResponse* New() const final {
    return CreateMaybeMessage<Test1PropStringGetResponse>(nullptr);
  }

  Test1PropStringGetResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test1PropStringGetResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test1PropStringGetResponse& from);
  void MergeFrom(const Test1PropStringGetResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test1PropStringGetResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test1PropStringGetResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // .google.protobuf.StringValue value = 1;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const PROTOBUF_NAMESPACE_ID::StringValue& value() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_value();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_value();
  void set_allocated_value(PROTOBUF_NAMESPACE_ID::StringValue* value);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_value() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_value();
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test1PropStringGetResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  PROTOBUF_NAMESPACE_ID::StringValue* value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test1PropStringPropertyChanged :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test1PropStringPropertyChanged) */ {
 public:
  Test1PropStringPropertyChanged();
  virtual ~Test1PropStringPropertyChanged();

  Test1PropStringPropertyChanged(const Test1PropStringPropertyChanged& from);
  Test1PropStringPropertyChanged(Test1PropStringPropertyChanged&& from) noexcept
    : Test1PropStringPropertyChanged() {
    *this = ::std::move(from);
  }

  inline Test1PropStringPropertyChanged& operator=(const Test1PropStringPropertyChanged& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test1PropStringPropertyChanged& operator=(Test1PropStringPropertyChanged&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test1PropStringPropertyChanged& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test1PropStringPropertyChanged* internal_default_instance() {
    return reinterpret_cast<const Test1PropStringPropertyChanged*>(
               &_Test1PropStringPropertyChanged_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(Test1PropStringPropertyChanged& a, Test1PropStringPropertyChanged& b) {
    a.Swap(&b);
  }
  inline void Swap(Test1PropStringPropertyChanged* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test1PropStringPropertyChanged* New() const final {
    return CreateMaybeMessage<Test1PropStringPropertyChanged>(nullptr);
  }

  Test1PropStringPropertyChanged* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test1PropStringPropertyChanged>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test1PropStringPropertyChanged& from);
  void MergeFrom(const Test1PropStringPropertyChanged& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test1PropStringPropertyChanged* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test1PropStringPropertyChanged";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kObjectIdFieldNumber = 1,
  };
  // .google.protobuf.StringValue value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const PROTOBUF_NAMESPACE_ID::StringValue& value() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_value();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_value();
  void set_allocated_value(PROTOBUF_NAMESPACE_ID::StringValue* value);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_value() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_value();
  public:

  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test1PropStringPropertyChanged)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  PROTOBUF_NAMESPACE_ID::StringValue* value_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test1PropComplexSetRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test1PropComplexSetRequest) */ {
 public:
  Test1PropComplexSetRequest();
  virtual ~Test1PropComplexSetRequest();

  Test1PropComplexSetRequest(const Test1PropComplexSetRequest& from);
  Test1PropComplexSetRequest(Test1PropComplexSetRequest&& from) noexcept
    : Test1PropComplexSetRequest() {
    *this = ::std::move(from);
  }

  inline Test1PropComplexSetRequest& operator=(const Test1PropComplexSetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test1PropComplexSetRequest& operator=(Test1PropComplexSetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test1PropComplexSetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test1PropComplexSetRequest* internal_default_instance() {
    return reinterpret_cast<const Test1PropComplexSetRequest*>(
               &_Test1PropComplexSetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(Test1PropComplexSetRequest& a, Test1PropComplexSetRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(Test1PropComplexSetRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test1PropComplexSetRequest* New() const final {
    return CreateMaybeMessage<Test1PropComplexSetRequest>(nullptr);
  }

  Test1PropComplexSetRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test1PropComplexSetRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test1PropComplexSetRequest& from);
  void MergeFrom(const Test1PropComplexSetRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test1PropComplexSetRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test1PropComplexSetRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kObjectIdFieldNumber = 1,
  };
  // .custom.types.TestMessageResponse value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::custom::types::TestMessageResponse& value() const;
  ::custom::types::TestMessageResponse* release_value();
  ::custom::types::TestMessageResponse* mutable_value();
  void set_allocated_value(::custom::types::TestMessageResponse* value);
  private:
  const ::custom::types::TestMessageResponse& _internal_value() const;
  ::custom::types::TestMessageResponse* _internal_mutable_value();
  public:

  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test1PropComplexSetRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::custom::types::TestMessageResponse* value_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test1PropComplexSetResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test1PropComplexSetResponse) */ {
 public:
  Test1PropComplexSetResponse();
  virtual ~Test1PropComplexSetResponse();

  Test1PropComplexSetResponse(const Test1PropComplexSetResponse& from);
  Test1PropComplexSetResponse(Test1PropComplexSetResponse&& from) noexcept
    : Test1PropComplexSetResponse() {
    *this = ::std::move(from);
  }

  inline Test1PropComplexSetResponse& operator=(const Test1PropComplexSetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test1PropComplexSetResponse& operator=(Test1PropComplexSetResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test1PropComplexSetResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test1PropComplexSetResponse* internal_default_instance() {
    return reinterpret_cast<const Test1PropComplexSetResponse*>(
               &_Test1PropComplexSetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(Test1PropComplexSetResponse& a, Test1PropComplexSetResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(Test1PropComplexSetResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test1PropComplexSetResponse* New() const final {
    return CreateMaybeMessage<Test1PropComplexSetResponse>(nullptr);
  }

  Test1PropComplexSetResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test1PropComplexSetResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test1PropComplexSetResponse& from);
  void MergeFrom(const Test1PropComplexSetResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test1PropComplexSetResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test1PropComplexSetResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Tests.Test1PropComplexSetResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test1PropComplexGetRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test1PropComplexGetRequest) */ {
 public:
  Test1PropComplexGetRequest();
  virtual ~Test1PropComplexGetRequest();

  Test1PropComplexGetRequest(const Test1PropComplexGetRequest& from);
  Test1PropComplexGetRequest(Test1PropComplexGetRequest&& from) noexcept
    : Test1PropComplexGetRequest() {
    *this = ::std::move(from);
  }

  inline Test1PropComplexGetRequest& operator=(const Test1PropComplexGetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test1PropComplexGetRequest& operator=(Test1PropComplexGetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test1PropComplexGetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test1PropComplexGetRequest* internal_default_instance() {
    return reinterpret_cast<const Test1PropComplexGetRequest*>(
               &_Test1PropComplexGetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(Test1PropComplexGetRequest& a, Test1PropComplexGetRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(Test1PropComplexGetRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test1PropComplexGetRequest* New() const final {
    return CreateMaybeMessage<Test1PropComplexGetRequest>(nullptr);
  }

  Test1PropComplexGetRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test1PropComplexGetRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test1PropComplexGetRequest& from);
  void MergeFrom(const Test1PropComplexGetRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test1PropComplexGetRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test1PropComplexGetRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
  };
  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test1PropComplexGetRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test1PropComplexGetResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test1PropComplexGetResponse) */ {
 public:
  Test1PropComplexGetResponse();
  virtual ~Test1PropComplexGetResponse();

  Test1PropComplexGetResponse(const Test1PropComplexGetResponse& from);
  Test1PropComplexGetResponse(Test1PropComplexGetResponse&& from) noexcept
    : Test1PropComplexGetResponse() {
    *this = ::std::move(from);
  }

  inline Test1PropComplexGetResponse& operator=(const Test1PropComplexGetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test1PropComplexGetResponse& operator=(Test1PropComplexGetResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test1PropComplexGetResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test1PropComplexGetResponse* internal_default_instance() {
    return reinterpret_cast<const Test1PropComplexGetResponse*>(
               &_Test1PropComplexGetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(Test1PropComplexGetResponse& a, Test1PropComplexGetResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(Test1PropComplexGetResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test1PropComplexGetResponse* New() const final {
    return CreateMaybeMessage<Test1PropComplexGetResponse>(nullptr);
  }

  Test1PropComplexGetResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test1PropComplexGetResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test1PropComplexGetResponse& from);
  void MergeFrom(const Test1PropComplexGetResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test1PropComplexGetResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test1PropComplexGetResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // .custom.types.TestMessageResponse value = 1;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::custom::types::TestMessageResponse& value() const;
  ::custom::types::TestMessageResponse* release_value();
  ::custom::types::TestMessageResponse* mutable_value();
  void set_allocated_value(::custom::types::TestMessageResponse* value);
  private:
  const ::custom::types::TestMessageResponse& _internal_value() const;
  ::custom::types::TestMessageResponse* _internal_mutable_value();
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test1PropComplexGetResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::custom::types::TestMessageResponse* value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test1PropComplexPropertyChanged :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test1PropComplexPropertyChanged) */ {
 public:
  Test1PropComplexPropertyChanged();
  virtual ~Test1PropComplexPropertyChanged();

  Test1PropComplexPropertyChanged(const Test1PropComplexPropertyChanged& from);
  Test1PropComplexPropertyChanged(Test1PropComplexPropertyChanged&& from) noexcept
    : Test1PropComplexPropertyChanged() {
    *this = ::std::move(from);
  }

  inline Test1PropComplexPropertyChanged& operator=(const Test1PropComplexPropertyChanged& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test1PropComplexPropertyChanged& operator=(Test1PropComplexPropertyChanged&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test1PropComplexPropertyChanged& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test1PropComplexPropertyChanged* internal_default_instance() {
    return reinterpret_cast<const Test1PropComplexPropertyChanged*>(
               &_Test1PropComplexPropertyChanged_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(Test1PropComplexPropertyChanged& a, Test1PropComplexPropertyChanged& b) {
    a.Swap(&b);
  }
  inline void Swap(Test1PropComplexPropertyChanged* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test1PropComplexPropertyChanged* New() const final {
    return CreateMaybeMessage<Test1PropComplexPropertyChanged>(nullptr);
  }

  Test1PropComplexPropertyChanged* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test1PropComplexPropertyChanged>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test1PropComplexPropertyChanged& from);
  void MergeFrom(const Test1PropComplexPropertyChanged& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test1PropComplexPropertyChanged* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test1PropComplexPropertyChanged";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kObjectIdFieldNumber = 1,
  };
  // .custom.types.TestMessageResponse value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::custom::types::TestMessageResponse& value() const;
  ::custom::types::TestMessageResponse* release_value();
  ::custom::types::TestMessageResponse* mutable_value();
  void set_allocated_value(::custom::types::TestMessageResponse* value);
  private:
  const ::custom::types::TestMessageResponse& _internal_value() const;
  ::custom::types::TestMessageResponse* _internal_mutable_value();
  public:

  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test1PropComplexPropertyChanged)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::custom::types::TestMessageResponse* value_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test1TestEventEvent :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test1TestEventEvent) */ {
 public:
  Test1TestEventEvent();
  virtual ~Test1TestEventEvent();

  Test1TestEventEvent(const Test1TestEventEvent& from);
  Test1TestEventEvent(Test1TestEventEvent&& from) noexcept
    : Test1TestEventEvent() {
    *this = ::std::move(from);
  }

  inline Test1TestEventEvent& operator=(const Test1TestEventEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test1TestEventEvent& operator=(Test1TestEventEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test1TestEventEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test1TestEventEvent* internal_default_instance() {
    return reinterpret_cast<const Test1TestEventEvent*>(
               &_Test1TestEventEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(Test1TestEventEvent& a, Test1TestEventEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(Test1TestEventEvent* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test1TestEventEvent* New() const final {
    return CreateMaybeMessage<Test1TestEventEvent>(nullptr);
  }

  Test1TestEventEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test1TestEventEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test1TestEventEvent& from);
  void MergeFrom(const Test1TestEventEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test1TestEventEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test1TestEventEvent";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kObjectIdFieldNumber = 1,
  };
  // .google.protobuf.StringValue value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const PROTOBUF_NAMESPACE_ID::StringValue& value() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_value();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_value();
  void set_allocated_value(PROTOBUF_NAMESPACE_ID::StringValue* value);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_value() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_value();
  public:

  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test1TestEventEvent)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  PROTOBUF_NAMESPACE_ID::StringValue* value_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test1TestEventComplexEvent :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test1TestEventComplexEvent) */ {
 public:
  Test1TestEventComplexEvent();
  virtual ~Test1TestEventComplexEvent();

  Test1TestEventComplexEvent(const Test1TestEventComplexEvent& from);
  Test1TestEventComplexEvent(Test1TestEventComplexEvent&& from) noexcept
    : Test1TestEventComplexEvent() {
    *this = ::std::move(from);
  }

  inline Test1TestEventComplexEvent& operator=(const Test1TestEventComplexEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test1TestEventComplexEvent& operator=(Test1TestEventComplexEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test1TestEventComplexEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test1TestEventComplexEvent* internal_default_instance() {
    return reinterpret_cast<const Test1TestEventComplexEvent*>(
               &_Test1TestEventComplexEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(Test1TestEventComplexEvent& a, Test1TestEventComplexEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(Test1TestEventComplexEvent* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test1TestEventComplexEvent* New() const final {
    return CreateMaybeMessage<Test1TestEventComplexEvent>(nullptr);
  }

  Test1TestEventComplexEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test1TestEventComplexEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test1TestEventComplexEvent& from);
  void MergeFrom(const Test1TestEventComplexEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test1TestEventComplexEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test1TestEventComplexEvent";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kObjectIdFieldNumber = 1,
  };
  // .custom.types.TestMessageResponse value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::custom::types::TestMessageResponse& value() const;
  ::custom::types::TestMessageResponse* release_value();
  ::custom::types::TestMessageResponse* mutable_value();
  void set_allocated_value(::custom::types::TestMessageResponse* value);
  private:
  const ::custom::types::TestMessageResponse& _internal_value() const;
  ::custom::types::TestMessageResponse* _internal_mutable_value();
  public:

  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test1TestEventComplexEvent)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::custom::types::TestMessageResponse* value_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test1TestEventNoDataEvent :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test1TestEventNoDataEvent) */ {
 public:
  Test1TestEventNoDataEvent();
  virtual ~Test1TestEventNoDataEvent();

  Test1TestEventNoDataEvent(const Test1TestEventNoDataEvent& from);
  Test1TestEventNoDataEvent(Test1TestEventNoDataEvent&& from) noexcept
    : Test1TestEventNoDataEvent() {
    *this = ::std::move(from);
  }

  inline Test1TestEventNoDataEvent& operator=(const Test1TestEventNoDataEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test1TestEventNoDataEvent& operator=(Test1TestEventNoDataEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test1TestEventNoDataEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test1TestEventNoDataEvent* internal_default_instance() {
    return reinterpret_cast<const Test1TestEventNoDataEvent*>(
               &_Test1TestEventNoDataEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(Test1TestEventNoDataEvent& a, Test1TestEventNoDataEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(Test1TestEventNoDataEvent* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test1TestEventNoDataEvent* New() const final {
    return CreateMaybeMessage<Test1TestEventNoDataEvent>(nullptr);
  }

  Test1TestEventNoDataEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test1TestEventNoDataEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test1TestEventNoDataEvent& from);
  void MergeFrom(const Test1TestEventNoDataEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test1TestEventNoDataEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test1TestEventNoDataEvent";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
  };
  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test1TestEventNoDataEvent)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test1TestMethodMethodRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test1TestMethodMethodRequest) */ {
 public:
  Test1TestMethodMethodRequest();
  virtual ~Test1TestMethodMethodRequest();

  Test1TestMethodMethodRequest(const Test1TestMethodMethodRequest& from);
  Test1TestMethodMethodRequest(Test1TestMethodMethodRequest&& from) noexcept
    : Test1TestMethodMethodRequest() {
    *this = ::std::move(from);
  }

  inline Test1TestMethodMethodRequest& operator=(const Test1TestMethodMethodRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test1TestMethodMethodRequest& operator=(Test1TestMethodMethodRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test1TestMethodMethodRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test1TestMethodMethodRequest* internal_default_instance() {
    return reinterpret_cast<const Test1TestMethodMethodRequest*>(
               &_Test1TestMethodMethodRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(Test1TestMethodMethodRequest& a, Test1TestMethodMethodRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(Test1TestMethodMethodRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test1TestMethodMethodRequest* New() const final {
    return CreateMaybeMessage<Test1TestMethodMethodRequest>(nullptr);
  }

  Test1TestMethodMethodRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test1TestMethodMethodRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test1TestMethodMethodRequest& from);
  void MergeFrom(const Test1TestMethodMethodRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test1TestMethodMethodRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test1TestMethodMethodRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kObjectIdFieldNumber = 1,
  };
  // .custom.types.TestMessageRequest value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::custom::types::TestMessageRequest& value() const;
  ::custom::types::TestMessageRequest* release_value();
  ::custom::types::TestMessageRequest* mutable_value();
  void set_allocated_value(::custom::types::TestMessageRequest* value);
  private:
  const ::custom::types::TestMessageRequest& _internal_value() const;
  ::custom::types::TestMessageRequest* _internal_mutable_value();
  public:

  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test1TestMethodMethodRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::custom::types::TestMessageRequest* value_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test1TestMethodMethodResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test1TestMethodMethodResponse) */ {
 public:
  Test1TestMethodMethodResponse();
  virtual ~Test1TestMethodMethodResponse();

  Test1TestMethodMethodResponse(const Test1TestMethodMethodResponse& from);
  Test1TestMethodMethodResponse(Test1TestMethodMethodResponse&& from) noexcept
    : Test1TestMethodMethodResponse() {
    *this = ::std::move(from);
  }

  inline Test1TestMethodMethodResponse& operator=(const Test1TestMethodMethodResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test1TestMethodMethodResponse& operator=(Test1TestMethodMethodResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test1TestMethodMethodResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test1TestMethodMethodResponse* internal_default_instance() {
    return reinterpret_cast<const Test1TestMethodMethodResponse*>(
               &_Test1TestMethodMethodResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(Test1TestMethodMethodResponse& a, Test1TestMethodMethodResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(Test1TestMethodMethodResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test1TestMethodMethodResponse* New() const final {
    return CreateMaybeMessage<Test1TestMethodMethodResponse>(nullptr);
  }

  Test1TestMethodMethodResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test1TestMethodMethodResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test1TestMethodMethodResponse& from);
  void MergeFrom(const Test1TestMethodMethodResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test1TestMethodMethodResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test1TestMethodMethodResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // .custom.types.TestMessageResponse value = 1;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::custom::types::TestMessageResponse& value() const;
  ::custom::types::TestMessageResponse* release_value();
  ::custom::types::TestMessageResponse* mutable_value();
  void set_allocated_value(::custom::types::TestMessageResponse* value);
  private:
  const ::custom::types::TestMessageResponse& _internal_value() const;
  ::custom::types::TestMessageResponse* _internal_mutable_value();
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test1TestMethodMethodResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::custom::types::TestMessageResponse* value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test1TestMethodSyncMethodRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test1TestMethodSyncMethodRequest) */ {
 public:
  Test1TestMethodSyncMethodRequest();
  virtual ~Test1TestMethodSyncMethodRequest();

  Test1TestMethodSyncMethodRequest(const Test1TestMethodSyncMethodRequest& from);
  Test1TestMethodSyncMethodRequest(Test1TestMethodSyncMethodRequest&& from) noexcept
    : Test1TestMethodSyncMethodRequest() {
    *this = ::std::move(from);
  }

  inline Test1TestMethodSyncMethodRequest& operator=(const Test1TestMethodSyncMethodRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test1TestMethodSyncMethodRequest& operator=(Test1TestMethodSyncMethodRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test1TestMethodSyncMethodRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test1TestMethodSyncMethodRequest* internal_default_instance() {
    return reinterpret_cast<const Test1TestMethodSyncMethodRequest*>(
               &_Test1TestMethodSyncMethodRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(Test1TestMethodSyncMethodRequest& a, Test1TestMethodSyncMethodRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(Test1TestMethodSyncMethodRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test1TestMethodSyncMethodRequest* New() const final {
    return CreateMaybeMessage<Test1TestMethodSyncMethodRequest>(nullptr);
  }

  Test1TestMethodSyncMethodRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test1TestMethodSyncMethodRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test1TestMethodSyncMethodRequest& from);
  void MergeFrom(const Test1TestMethodSyncMethodRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test1TestMethodSyncMethodRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test1TestMethodSyncMethodRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kObjectIdFieldNumber = 1,
  };
  // .custom.types.TestMessageRequest value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::custom::types::TestMessageRequest& value() const;
  ::custom::types::TestMessageRequest* release_value();
  ::custom::types::TestMessageRequest* mutable_value();
  void set_allocated_value(::custom::types::TestMessageRequest* value);
  private:
  const ::custom::types::TestMessageRequest& _internal_value() const;
  ::custom::types::TestMessageRequest* _internal_mutable_value();
  public:

  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test1TestMethodSyncMethodRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::custom::types::TestMessageRequest* value_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test1TestMethodSyncMethodResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test1TestMethodSyncMethodResponse) */ {
 public:
  Test1TestMethodSyncMethodResponse();
  virtual ~Test1TestMethodSyncMethodResponse();

  Test1TestMethodSyncMethodResponse(const Test1TestMethodSyncMethodResponse& from);
  Test1TestMethodSyncMethodResponse(Test1TestMethodSyncMethodResponse&& from) noexcept
    : Test1TestMethodSyncMethodResponse() {
    *this = ::std::move(from);
  }

  inline Test1TestMethodSyncMethodResponse& operator=(const Test1TestMethodSyncMethodResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test1TestMethodSyncMethodResponse& operator=(Test1TestMethodSyncMethodResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test1TestMethodSyncMethodResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test1TestMethodSyncMethodResponse* internal_default_instance() {
    return reinterpret_cast<const Test1TestMethodSyncMethodResponse*>(
               &_Test1TestMethodSyncMethodResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(Test1TestMethodSyncMethodResponse& a, Test1TestMethodSyncMethodResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(Test1TestMethodSyncMethodResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test1TestMethodSyncMethodResponse* New() const final {
    return CreateMaybeMessage<Test1TestMethodSyncMethodResponse>(nullptr);
  }

  Test1TestMethodSyncMethodResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test1TestMethodSyncMethodResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test1TestMethodSyncMethodResponse& from);
  void MergeFrom(const Test1TestMethodSyncMethodResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test1TestMethodSyncMethodResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test1TestMethodSyncMethodResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // .custom.types.TestMessageResponse value = 1;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::custom::types::TestMessageResponse& value() const;
  ::custom::types::TestMessageResponse* release_value();
  ::custom::types::TestMessageResponse* mutable_value();
  void set_allocated_value(::custom::types::TestMessageResponse* value);
  private:
  const ::custom::types::TestMessageResponse& _internal_value() const;
  ::custom::types::TestMessageResponse* _internal_mutable_value();
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test1TestMethodSyncMethodResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::custom::types::TestMessageResponse* value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test1TestMethodWithNoResponseMethodRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test1TestMethodWithNoResponseMethodRequest) */ {
 public:
  Test1TestMethodWithNoResponseMethodRequest();
  virtual ~Test1TestMethodWithNoResponseMethodRequest();

  Test1TestMethodWithNoResponseMethodRequest(const Test1TestMethodWithNoResponseMethodRequest& from);
  Test1TestMethodWithNoResponseMethodRequest(Test1TestMethodWithNoResponseMethodRequest&& from) noexcept
    : Test1TestMethodWithNoResponseMethodRequest() {
    *this = ::std::move(from);
  }

  inline Test1TestMethodWithNoResponseMethodRequest& operator=(const Test1TestMethodWithNoResponseMethodRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test1TestMethodWithNoResponseMethodRequest& operator=(Test1TestMethodWithNoResponseMethodRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test1TestMethodWithNoResponseMethodRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test1TestMethodWithNoResponseMethodRequest* internal_default_instance() {
    return reinterpret_cast<const Test1TestMethodWithNoResponseMethodRequest*>(
               &_Test1TestMethodWithNoResponseMethodRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(Test1TestMethodWithNoResponseMethodRequest& a, Test1TestMethodWithNoResponseMethodRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(Test1TestMethodWithNoResponseMethodRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test1TestMethodWithNoResponseMethodRequest* New() const final {
    return CreateMaybeMessage<Test1TestMethodWithNoResponseMethodRequest>(nullptr);
  }

  Test1TestMethodWithNoResponseMethodRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test1TestMethodWithNoResponseMethodRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test1TestMethodWithNoResponseMethodRequest& from);
  void MergeFrom(const Test1TestMethodWithNoResponseMethodRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test1TestMethodWithNoResponseMethodRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test1TestMethodWithNoResponseMethodRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kObjectIdFieldNumber = 1,
  };
  // .custom.types.TestMessageRequest value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::custom::types::TestMessageRequest& value() const;
  ::custom::types::TestMessageRequest* release_value();
  ::custom::types::TestMessageRequest* mutable_value();
  void set_allocated_value(::custom::types::TestMessageRequest* value);
  private:
  const ::custom::types::TestMessageRequest& _internal_value() const;
  ::custom::types::TestMessageRequest* _internal_mutable_value();
  public:

  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test1TestMethodWithNoResponseMethodRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::custom::types::TestMessageRequest* value_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test1TestMethodWithNoResponseMethodResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test1TestMethodWithNoResponseMethodResponse) */ {
 public:
  Test1TestMethodWithNoResponseMethodResponse();
  virtual ~Test1TestMethodWithNoResponseMethodResponse();

  Test1TestMethodWithNoResponseMethodResponse(const Test1TestMethodWithNoResponseMethodResponse& from);
  Test1TestMethodWithNoResponseMethodResponse(Test1TestMethodWithNoResponseMethodResponse&& from) noexcept
    : Test1TestMethodWithNoResponseMethodResponse() {
    *this = ::std::move(from);
  }

  inline Test1TestMethodWithNoResponseMethodResponse& operator=(const Test1TestMethodWithNoResponseMethodResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test1TestMethodWithNoResponseMethodResponse& operator=(Test1TestMethodWithNoResponseMethodResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test1TestMethodWithNoResponseMethodResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test1TestMethodWithNoResponseMethodResponse* internal_default_instance() {
    return reinterpret_cast<const Test1TestMethodWithNoResponseMethodResponse*>(
               &_Test1TestMethodWithNoResponseMethodResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(Test1TestMethodWithNoResponseMethodResponse& a, Test1TestMethodWithNoResponseMethodResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(Test1TestMethodWithNoResponseMethodResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test1TestMethodWithNoResponseMethodResponse* New() const final {
    return CreateMaybeMessage<Test1TestMethodWithNoResponseMethodResponse>(nullptr);
  }

  Test1TestMethodWithNoResponseMethodResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test1TestMethodWithNoResponseMethodResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test1TestMethodWithNoResponseMethodResponse& from);
  void MergeFrom(const Test1TestMethodWithNoResponseMethodResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test1TestMethodWithNoResponseMethodResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test1TestMethodWithNoResponseMethodResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Tests.Test1TestMethodWithNoResponseMethodResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test1TestMethodPrimitiveMethodRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test1TestMethodPrimitiveMethodRequest) */ {
 public:
  Test1TestMethodPrimitiveMethodRequest();
  virtual ~Test1TestMethodPrimitiveMethodRequest();

  Test1TestMethodPrimitiveMethodRequest(const Test1TestMethodPrimitiveMethodRequest& from);
  Test1TestMethodPrimitiveMethodRequest(Test1TestMethodPrimitiveMethodRequest&& from) noexcept
    : Test1TestMethodPrimitiveMethodRequest() {
    *this = ::std::move(from);
  }

  inline Test1TestMethodPrimitiveMethodRequest& operator=(const Test1TestMethodPrimitiveMethodRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test1TestMethodPrimitiveMethodRequest& operator=(Test1TestMethodPrimitiveMethodRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test1TestMethodPrimitiveMethodRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test1TestMethodPrimitiveMethodRequest* internal_default_instance() {
    return reinterpret_cast<const Test1TestMethodPrimitiveMethodRequest*>(
               &_Test1TestMethodPrimitiveMethodRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(Test1TestMethodPrimitiveMethodRequest& a, Test1TestMethodPrimitiveMethodRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(Test1TestMethodPrimitiveMethodRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test1TestMethodPrimitiveMethodRequest* New() const final {
    return CreateMaybeMessage<Test1TestMethodPrimitiveMethodRequest>(nullptr);
  }

  Test1TestMethodPrimitiveMethodRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test1TestMethodPrimitiveMethodRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test1TestMethodPrimitiveMethodRequest& from);
  void MergeFrom(const Test1TestMethodPrimitiveMethodRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test1TestMethodPrimitiveMethodRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test1TestMethodPrimitiveMethodRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 value = 2;
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::int32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test1TestMethodPrimitiveMethodRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  ::PROTOBUF_NAMESPACE_ID::int32 value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test1TestMethodPrimitiveMethodResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test1TestMethodPrimitiveMethodResponse) */ {
 public:
  Test1TestMethodPrimitiveMethodResponse();
  virtual ~Test1TestMethodPrimitiveMethodResponse();

  Test1TestMethodPrimitiveMethodResponse(const Test1TestMethodPrimitiveMethodResponse& from);
  Test1TestMethodPrimitiveMethodResponse(Test1TestMethodPrimitiveMethodResponse&& from) noexcept
    : Test1TestMethodPrimitiveMethodResponse() {
    *this = ::std::move(from);
  }

  inline Test1TestMethodPrimitiveMethodResponse& operator=(const Test1TestMethodPrimitiveMethodResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test1TestMethodPrimitiveMethodResponse& operator=(Test1TestMethodPrimitiveMethodResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test1TestMethodPrimitiveMethodResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test1TestMethodPrimitiveMethodResponse* internal_default_instance() {
    return reinterpret_cast<const Test1TestMethodPrimitiveMethodResponse*>(
               &_Test1TestMethodPrimitiveMethodResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(Test1TestMethodPrimitiveMethodResponse& a, Test1TestMethodPrimitiveMethodResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(Test1TestMethodPrimitiveMethodResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test1TestMethodPrimitiveMethodResponse* New() const final {
    return CreateMaybeMessage<Test1TestMethodPrimitiveMethodResponse>(nullptr);
  }

  Test1TestMethodPrimitiveMethodResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test1TestMethodPrimitiveMethodResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test1TestMethodPrimitiveMethodResponse& from);
  void MergeFrom(const Test1TestMethodPrimitiveMethodResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test1TestMethodPrimitiveMethodResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test1TestMethodPrimitiveMethodResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // int32 value = 1;
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::int32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test1TestMethodPrimitiveMethodResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test1TestMethodNoRequestMethodRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test1TestMethodNoRequestMethodRequest) */ {
 public:
  Test1TestMethodNoRequestMethodRequest();
  virtual ~Test1TestMethodNoRequestMethodRequest();

  Test1TestMethodNoRequestMethodRequest(const Test1TestMethodNoRequestMethodRequest& from);
  Test1TestMethodNoRequestMethodRequest(Test1TestMethodNoRequestMethodRequest&& from) noexcept
    : Test1TestMethodNoRequestMethodRequest() {
    *this = ::std::move(from);
  }

  inline Test1TestMethodNoRequestMethodRequest& operator=(const Test1TestMethodNoRequestMethodRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test1TestMethodNoRequestMethodRequest& operator=(Test1TestMethodNoRequestMethodRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test1TestMethodNoRequestMethodRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test1TestMethodNoRequestMethodRequest* internal_default_instance() {
    return reinterpret_cast<const Test1TestMethodNoRequestMethodRequest*>(
               &_Test1TestMethodNoRequestMethodRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(Test1TestMethodNoRequestMethodRequest& a, Test1TestMethodNoRequestMethodRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(Test1TestMethodNoRequestMethodRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test1TestMethodNoRequestMethodRequest* New() const final {
    return CreateMaybeMessage<Test1TestMethodNoRequestMethodRequest>(nullptr);
  }

  Test1TestMethodNoRequestMethodRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test1TestMethodNoRequestMethodRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test1TestMethodNoRequestMethodRequest& from);
  void MergeFrom(const Test1TestMethodNoRequestMethodRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test1TestMethodNoRequestMethodRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test1TestMethodNoRequestMethodRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
  };
  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test1TestMethodNoRequestMethodRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test1TestMethodNoRequestMethodResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test1TestMethodNoRequestMethodResponse) */ {
 public:
  Test1TestMethodNoRequestMethodResponse();
  virtual ~Test1TestMethodNoRequestMethodResponse();

  Test1TestMethodNoRequestMethodResponse(const Test1TestMethodNoRequestMethodResponse& from);
  Test1TestMethodNoRequestMethodResponse(Test1TestMethodNoRequestMethodResponse&& from) noexcept
    : Test1TestMethodNoRequestMethodResponse() {
    *this = ::std::move(from);
  }

  inline Test1TestMethodNoRequestMethodResponse& operator=(const Test1TestMethodNoRequestMethodResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test1TestMethodNoRequestMethodResponse& operator=(Test1TestMethodNoRequestMethodResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test1TestMethodNoRequestMethodResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test1TestMethodNoRequestMethodResponse* internal_default_instance() {
    return reinterpret_cast<const Test1TestMethodNoRequestMethodResponse*>(
               &_Test1TestMethodNoRequestMethodResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(Test1TestMethodNoRequestMethodResponse& a, Test1TestMethodNoRequestMethodResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(Test1TestMethodNoRequestMethodResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test1TestMethodNoRequestMethodResponse* New() const final {
    return CreateMaybeMessage<Test1TestMethodNoRequestMethodResponse>(nullptr);
  }

  Test1TestMethodNoRequestMethodResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test1TestMethodNoRequestMethodResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test1TestMethodNoRequestMethodResponse& from);
  void MergeFrom(const Test1TestMethodNoRequestMethodResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test1TestMethodNoRequestMethodResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test1TestMethodNoRequestMethodResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Tests.Test1TestMethodNoRequestMethodResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test2ListenEventStream :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test2ListenEventStream) */ {
 public:
  Test2ListenEventStream();
  virtual ~Test2ListenEventStream();

  Test2ListenEventStream(const Test2ListenEventStream& from);
  Test2ListenEventStream(Test2ListenEventStream&& from) noexcept
    : Test2ListenEventStream() {
    *this = ::std::move(from);
  }

  inline Test2ListenEventStream& operator=(const Test2ListenEventStream& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test2ListenEventStream& operator=(Test2ListenEventStream&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test2ListenEventStream& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test2ListenEventStream* internal_default_instance() {
    return reinterpret_cast<const Test2ListenEventStream*>(
               &_Test2ListenEventStream_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(Test2ListenEventStream& a, Test2ListenEventStream& b) {
    a.Swap(&b);
  }
  inline void Swap(Test2ListenEventStream* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test2ListenEventStream* New() const final {
    return CreateMaybeMessage<Test2ListenEventStream>(nullptr);
  }

  Test2ListenEventStream* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test2ListenEventStream>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test2ListenEventStream& from);
  void MergeFrom(const Test2ListenEventStream& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test2ListenEventStream* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test2ListenEventStream";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
  };
  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test2ListenEventStream)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test2CreateResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test2CreateResponse) */ {
 public:
  Test2CreateResponse();
  virtual ~Test2CreateResponse();

  Test2CreateResponse(const Test2CreateResponse& from);
  Test2CreateResponse(Test2CreateResponse&& from) noexcept
    : Test2CreateResponse() {
    *this = ::std::move(from);
  }

  inline Test2CreateResponse& operator=(const Test2CreateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test2CreateResponse& operator=(Test2CreateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test2CreateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test2CreateResponse* internal_default_instance() {
    return reinterpret_cast<const Test2CreateResponse*>(
               &_Test2CreateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(Test2CreateResponse& a, Test2CreateResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(Test2CreateResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test2CreateResponse* New() const final {
    return CreateMaybeMessage<Test2CreateResponse>(nullptr);
  }

  Test2CreateResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test2CreateResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test2CreateResponse& from);
  void MergeFrom(const Test2CreateResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test2CreateResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test2CreateResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
  };
  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test2CreateResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test2StopRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test2StopRequest) */ {
 public:
  Test2StopRequest();
  virtual ~Test2StopRequest();

  Test2StopRequest(const Test2StopRequest& from);
  Test2StopRequest(Test2StopRequest&& from) noexcept
    : Test2StopRequest() {
    *this = ::std::move(from);
  }

  inline Test2StopRequest& operator=(const Test2StopRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test2StopRequest& operator=(Test2StopRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test2StopRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test2StopRequest* internal_default_instance() {
    return reinterpret_cast<const Test2StopRequest*>(
               &_Test2StopRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(Test2StopRequest& a, Test2StopRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(Test2StopRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test2StopRequest* New() const final {
    return CreateMaybeMessage<Test2StopRequest>(nullptr);
  }

  Test2StopRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test2StopRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test2StopRequest& from);
  void MergeFrom(const Test2StopRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test2StopRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test2StopRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Tests.Test2StopRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test2StopResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test2StopResponse) */ {
 public:
  Test2StopResponse();
  virtual ~Test2StopResponse();

  Test2StopResponse(const Test2StopResponse& from);
  Test2StopResponse(Test2StopResponse&& from) noexcept
    : Test2StopResponse() {
    *this = ::std::move(from);
  }

  inline Test2StopResponse& operator=(const Test2StopResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test2StopResponse& operator=(Test2StopResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test2StopResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test2StopResponse* internal_default_instance() {
    return reinterpret_cast<const Test2StopResponse*>(
               &_Test2StopResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(Test2StopResponse& a, Test2StopResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(Test2StopResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test2StopResponse* New() const final {
    return CreateMaybeMessage<Test2StopResponse>(nullptr);
  }

  Test2StopResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test2StopResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test2StopResponse& from);
  void MergeFrom(const Test2StopResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test2StopResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test2StopResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Tests.Test2StopResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test2PropString2SetRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test2PropString2SetRequest) */ {
 public:
  Test2PropString2SetRequest();
  virtual ~Test2PropString2SetRequest();

  Test2PropString2SetRequest(const Test2PropString2SetRequest& from);
  Test2PropString2SetRequest(Test2PropString2SetRequest&& from) noexcept
    : Test2PropString2SetRequest() {
    *this = ::std::move(from);
  }

  inline Test2PropString2SetRequest& operator=(const Test2PropString2SetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test2PropString2SetRequest& operator=(Test2PropString2SetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test2PropString2SetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test2PropString2SetRequest* internal_default_instance() {
    return reinterpret_cast<const Test2PropString2SetRequest*>(
               &_Test2PropString2SetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(Test2PropString2SetRequest& a, Test2PropString2SetRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(Test2PropString2SetRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test2PropString2SetRequest* New() const final {
    return CreateMaybeMessage<Test2PropString2SetRequest>(nullptr);
  }

  Test2PropString2SetRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test2PropString2SetRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test2PropString2SetRequest& from);
  void MergeFrom(const Test2PropString2SetRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test2PropString2SetRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test2PropString2SetRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kObjectIdFieldNumber = 1,
  };
  // .google.protobuf.StringValue value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const PROTOBUF_NAMESPACE_ID::StringValue& value() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_value();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_value();
  void set_allocated_value(PROTOBUF_NAMESPACE_ID::StringValue* value);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_value() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_value();
  public:

  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test2PropString2SetRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  PROTOBUF_NAMESPACE_ID::StringValue* value_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test2PropString2SetResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test2PropString2SetResponse) */ {
 public:
  Test2PropString2SetResponse();
  virtual ~Test2PropString2SetResponse();

  Test2PropString2SetResponse(const Test2PropString2SetResponse& from);
  Test2PropString2SetResponse(Test2PropString2SetResponse&& from) noexcept
    : Test2PropString2SetResponse() {
    *this = ::std::move(from);
  }

  inline Test2PropString2SetResponse& operator=(const Test2PropString2SetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test2PropString2SetResponse& operator=(Test2PropString2SetResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test2PropString2SetResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test2PropString2SetResponse* internal_default_instance() {
    return reinterpret_cast<const Test2PropString2SetResponse*>(
               &_Test2PropString2SetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(Test2PropString2SetResponse& a, Test2PropString2SetResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(Test2PropString2SetResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test2PropString2SetResponse* New() const final {
    return CreateMaybeMessage<Test2PropString2SetResponse>(nullptr);
  }

  Test2PropString2SetResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test2PropString2SetResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test2PropString2SetResponse& from);
  void MergeFrom(const Test2PropString2SetResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test2PropString2SetResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test2PropString2SetResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Tests.Test2PropString2SetResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test2PropString2GetRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test2PropString2GetRequest) */ {
 public:
  Test2PropString2GetRequest();
  virtual ~Test2PropString2GetRequest();

  Test2PropString2GetRequest(const Test2PropString2GetRequest& from);
  Test2PropString2GetRequest(Test2PropString2GetRequest&& from) noexcept
    : Test2PropString2GetRequest() {
    *this = ::std::move(from);
  }

  inline Test2PropString2GetRequest& operator=(const Test2PropString2GetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test2PropString2GetRequest& operator=(Test2PropString2GetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test2PropString2GetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test2PropString2GetRequest* internal_default_instance() {
    return reinterpret_cast<const Test2PropString2GetRequest*>(
               &_Test2PropString2GetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(Test2PropString2GetRequest& a, Test2PropString2GetRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(Test2PropString2GetRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test2PropString2GetRequest* New() const final {
    return CreateMaybeMessage<Test2PropString2GetRequest>(nullptr);
  }

  Test2PropString2GetRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test2PropString2GetRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test2PropString2GetRequest& from);
  void MergeFrom(const Test2PropString2GetRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test2PropString2GetRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test2PropString2GetRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
  };
  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test2PropString2GetRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test2PropString2GetResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test2PropString2GetResponse) */ {
 public:
  Test2PropString2GetResponse();
  virtual ~Test2PropString2GetResponse();

  Test2PropString2GetResponse(const Test2PropString2GetResponse& from);
  Test2PropString2GetResponse(Test2PropString2GetResponse&& from) noexcept
    : Test2PropString2GetResponse() {
    *this = ::std::move(from);
  }

  inline Test2PropString2GetResponse& operator=(const Test2PropString2GetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test2PropString2GetResponse& operator=(Test2PropString2GetResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test2PropString2GetResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test2PropString2GetResponse* internal_default_instance() {
    return reinterpret_cast<const Test2PropString2GetResponse*>(
               &_Test2PropString2GetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(Test2PropString2GetResponse& a, Test2PropString2GetResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(Test2PropString2GetResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test2PropString2GetResponse* New() const final {
    return CreateMaybeMessage<Test2PropString2GetResponse>(nullptr);
  }

  Test2PropString2GetResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test2PropString2GetResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test2PropString2GetResponse& from);
  void MergeFrom(const Test2PropString2GetResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test2PropString2GetResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test2PropString2GetResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // .google.protobuf.StringValue value = 1;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const PROTOBUF_NAMESPACE_ID::StringValue& value() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_value();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_value();
  void set_allocated_value(PROTOBUF_NAMESPACE_ID::StringValue* value);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_value() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_value();
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test2PropString2GetResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  PROTOBUF_NAMESPACE_ID::StringValue* value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test2PropString2PropertyChanged :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test2PropString2PropertyChanged) */ {
 public:
  Test2PropString2PropertyChanged();
  virtual ~Test2PropString2PropertyChanged();

  Test2PropString2PropertyChanged(const Test2PropString2PropertyChanged& from);
  Test2PropString2PropertyChanged(Test2PropString2PropertyChanged&& from) noexcept
    : Test2PropString2PropertyChanged() {
    *this = ::std::move(from);
  }

  inline Test2PropString2PropertyChanged& operator=(const Test2PropString2PropertyChanged& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test2PropString2PropertyChanged& operator=(Test2PropString2PropertyChanged&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test2PropString2PropertyChanged& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test2PropString2PropertyChanged* internal_default_instance() {
    return reinterpret_cast<const Test2PropString2PropertyChanged*>(
               &_Test2PropString2PropertyChanged_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(Test2PropString2PropertyChanged& a, Test2PropString2PropertyChanged& b) {
    a.Swap(&b);
  }
  inline void Swap(Test2PropString2PropertyChanged* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test2PropString2PropertyChanged* New() const final {
    return CreateMaybeMessage<Test2PropString2PropertyChanged>(nullptr);
  }

  Test2PropString2PropertyChanged* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test2PropString2PropertyChanged>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test2PropString2PropertyChanged& from);
  void MergeFrom(const Test2PropString2PropertyChanged& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test2PropString2PropertyChanged* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test2PropString2PropertyChanged";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kObjectIdFieldNumber = 1,
  };
  // .google.protobuf.StringValue value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const PROTOBUF_NAMESPACE_ID::StringValue& value() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_value();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_value();
  void set_allocated_value(PROTOBUF_NAMESPACE_ID::StringValue* value);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_value() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_value();
  public:

  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test2PropString2PropertyChanged)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  PROTOBUF_NAMESPACE_ID::StringValue* value_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test2PropComplex2SetRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test2PropComplex2SetRequest) */ {
 public:
  Test2PropComplex2SetRequest();
  virtual ~Test2PropComplex2SetRequest();

  Test2PropComplex2SetRequest(const Test2PropComplex2SetRequest& from);
  Test2PropComplex2SetRequest(Test2PropComplex2SetRequest&& from) noexcept
    : Test2PropComplex2SetRequest() {
    *this = ::std::move(from);
  }

  inline Test2PropComplex2SetRequest& operator=(const Test2PropComplex2SetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test2PropComplex2SetRequest& operator=(Test2PropComplex2SetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test2PropComplex2SetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test2PropComplex2SetRequest* internal_default_instance() {
    return reinterpret_cast<const Test2PropComplex2SetRequest*>(
               &_Test2PropComplex2SetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(Test2PropComplex2SetRequest& a, Test2PropComplex2SetRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(Test2PropComplex2SetRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test2PropComplex2SetRequest* New() const final {
    return CreateMaybeMessage<Test2PropComplex2SetRequest>(nullptr);
  }

  Test2PropComplex2SetRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test2PropComplex2SetRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test2PropComplex2SetRequest& from);
  void MergeFrom(const Test2PropComplex2SetRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test2PropComplex2SetRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test2PropComplex2SetRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kObjectIdFieldNumber = 1,
  };
  // .custom.types.TestMessageResponse value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::custom::types::TestMessageResponse& value() const;
  ::custom::types::TestMessageResponse* release_value();
  ::custom::types::TestMessageResponse* mutable_value();
  void set_allocated_value(::custom::types::TestMessageResponse* value);
  private:
  const ::custom::types::TestMessageResponse& _internal_value() const;
  ::custom::types::TestMessageResponse* _internal_mutable_value();
  public:

  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test2PropComplex2SetRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::custom::types::TestMessageResponse* value_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test2PropComplex2SetResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test2PropComplex2SetResponse) */ {
 public:
  Test2PropComplex2SetResponse();
  virtual ~Test2PropComplex2SetResponse();

  Test2PropComplex2SetResponse(const Test2PropComplex2SetResponse& from);
  Test2PropComplex2SetResponse(Test2PropComplex2SetResponse&& from) noexcept
    : Test2PropComplex2SetResponse() {
    *this = ::std::move(from);
  }

  inline Test2PropComplex2SetResponse& operator=(const Test2PropComplex2SetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test2PropComplex2SetResponse& operator=(Test2PropComplex2SetResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test2PropComplex2SetResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test2PropComplex2SetResponse* internal_default_instance() {
    return reinterpret_cast<const Test2PropComplex2SetResponse*>(
               &_Test2PropComplex2SetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(Test2PropComplex2SetResponse& a, Test2PropComplex2SetResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(Test2PropComplex2SetResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test2PropComplex2SetResponse* New() const final {
    return CreateMaybeMessage<Test2PropComplex2SetResponse>(nullptr);
  }

  Test2PropComplex2SetResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test2PropComplex2SetResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test2PropComplex2SetResponse& from);
  void MergeFrom(const Test2PropComplex2SetResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test2PropComplex2SetResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test2PropComplex2SetResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Tests.Test2PropComplex2SetResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test2PropComplex2GetRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test2PropComplex2GetRequest) */ {
 public:
  Test2PropComplex2GetRequest();
  virtual ~Test2PropComplex2GetRequest();

  Test2PropComplex2GetRequest(const Test2PropComplex2GetRequest& from);
  Test2PropComplex2GetRequest(Test2PropComplex2GetRequest&& from) noexcept
    : Test2PropComplex2GetRequest() {
    *this = ::std::move(from);
  }

  inline Test2PropComplex2GetRequest& operator=(const Test2PropComplex2GetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test2PropComplex2GetRequest& operator=(Test2PropComplex2GetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test2PropComplex2GetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test2PropComplex2GetRequest* internal_default_instance() {
    return reinterpret_cast<const Test2PropComplex2GetRequest*>(
               &_Test2PropComplex2GetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(Test2PropComplex2GetRequest& a, Test2PropComplex2GetRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(Test2PropComplex2GetRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test2PropComplex2GetRequest* New() const final {
    return CreateMaybeMessage<Test2PropComplex2GetRequest>(nullptr);
  }

  Test2PropComplex2GetRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test2PropComplex2GetRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test2PropComplex2GetRequest& from);
  void MergeFrom(const Test2PropComplex2GetRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test2PropComplex2GetRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test2PropComplex2GetRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
  };
  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test2PropComplex2GetRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test2PropComplex2GetResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test2PropComplex2GetResponse) */ {
 public:
  Test2PropComplex2GetResponse();
  virtual ~Test2PropComplex2GetResponse();

  Test2PropComplex2GetResponse(const Test2PropComplex2GetResponse& from);
  Test2PropComplex2GetResponse(Test2PropComplex2GetResponse&& from) noexcept
    : Test2PropComplex2GetResponse() {
    *this = ::std::move(from);
  }

  inline Test2PropComplex2GetResponse& operator=(const Test2PropComplex2GetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test2PropComplex2GetResponse& operator=(Test2PropComplex2GetResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test2PropComplex2GetResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test2PropComplex2GetResponse* internal_default_instance() {
    return reinterpret_cast<const Test2PropComplex2GetResponse*>(
               &_Test2PropComplex2GetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(Test2PropComplex2GetResponse& a, Test2PropComplex2GetResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(Test2PropComplex2GetResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test2PropComplex2GetResponse* New() const final {
    return CreateMaybeMessage<Test2PropComplex2GetResponse>(nullptr);
  }

  Test2PropComplex2GetResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test2PropComplex2GetResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test2PropComplex2GetResponse& from);
  void MergeFrom(const Test2PropComplex2GetResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test2PropComplex2GetResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test2PropComplex2GetResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // .custom.types.TestMessageResponse value = 1;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::custom::types::TestMessageResponse& value() const;
  ::custom::types::TestMessageResponse* release_value();
  ::custom::types::TestMessageResponse* mutable_value();
  void set_allocated_value(::custom::types::TestMessageResponse* value);
  private:
  const ::custom::types::TestMessageResponse& _internal_value() const;
  ::custom::types::TestMessageResponse* _internal_mutable_value();
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test2PropComplex2GetResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::custom::types::TestMessageResponse* value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test2PropComplex2PropertyChanged :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test2PropComplex2PropertyChanged) */ {
 public:
  Test2PropComplex2PropertyChanged();
  virtual ~Test2PropComplex2PropertyChanged();

  Test2PropComplex2PropertyChanged(const Test2PropComplex2PropertyChanged& from);
  Test2PropComplex2PropertyChanged(Test2PropComplex2PropertyChanged&& from) noexcept
    : Test2PropComplex2PropertyChanged() {
    *this = ::std::move(from);
  }

  inline Test2PropComplex2PropertyChanged& operator=(const Test2PropComplex2PropertyChanged& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test2PropComplex2PropertyChanged& operator=(Test2PropComplex2PropertyChanged&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test2PropComplex2PropertyChanged& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test2PropComplex2PropertyChanged* internal_default_instance() {
    return reinterpret_cast<const Test2PropComplex2PropertyChanged*>(
               &_Test2PropComplex2PropertyChanged_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(Test2PropComplex2PropertyChanged& a, Test2PropComplex2PropertyChanged& b) {
    a.Swap(&b);
  }
  inline void Swap(Test2PropComplex2PropertyChanged* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test2PropComplex2PropertyChanged* New() const final {
    return CreateMaybeMessage<Test2PropComplex2PropertyChanged>(nullptr);
  }

  Test2PropComplex2PropertyChanged* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test2PropComplex2PropertyChanged>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test2PropComplex2PropertyChanged& from);
  void MergeFrom(const Test2PropComplex2PropertyChanged& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test2PropComplex2PropertyChanged* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test2PropComplex2PropertyChanged";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kObjectIdFieldNumber = 1,
  };
  // .custom.types.TestMessageResponse value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::custom::types::TestMessageResponse& value() const;
  ::custom::types::TestMessageResponse* release_value();
  ::custom::types::TestMessageResponse* mutable_value();
  void set_allocated_value(::custom::types::TestMessageResponse* value);
  private:
  const ::custom::types::TestMessageResponse& _internal_value() const;
  ::custom::types::TestMessageResponse* _internal_mutable_value();
  public:

  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test2PropComplex2PropertyChanged)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::custom::types::TestMessageResponse* value_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test2TestEvent2Event :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test2TestEvent2Event) */ {
 public:
  Test2TestEvent2Event();
  virtual ~Test2TestEvent2Event();

  Test2TestEvent2Event(const Test2TestEvent2Event& from);
  Test2TestEvent2Event(Test2TestEvent2Event&& from) noexcept
    : Test2TestEvent2Event() {
    *this = ::std::move(from);
  }

  inline Test2TestEvent2Event& operator=(const Test2TestEvent2Event& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test2TestEvent2Event& operator=(Test2TestEvent2Event&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test2TestEvent2Event& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test2TestEvent2Event* internal_default_instance() {
    return reinterpret_cast<const Test2TestEvent2Event*>(
               &_Test2TestEvent2Event_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(Test2TestEvent2Event& a, Test2TestEvent2Event& b) {
    a.Swap(&b);
  }
  inline void Swap(Test2TestEvent2Event* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test2TestEvent2Event* New() const final {
    return CreateMaybeMessage<Test2TestEvent2Event>(nullptr);
  }

  Test2TestEvent2Event* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test2TestEvent2Event>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test2TestEvent2Event& from);
  void MergeFrom(const Test2TestEvent2Event& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test2TestEvent2Event* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test2TestEvent2Event";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kObjectIdFieldNumber = 1,
  };
  // .google.protobuf.StringValue value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const PROTOBUF_NAMESPACE_ID::StringValue& value() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_value();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_value();
  void set_allocated_value(PROTOBUF_NAMESPACE_ID::StringValue* value);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_value() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_value();
  public:

  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test2TestEvent2Event)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  PROTOBUF_NAMESPACE_ID::StringValue* value_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test2TestEventComplex2Event :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test2TestEventComplex2Event) */ {
 public:
  Test2TestEventComplex2Event();
  virtual ~Test2TestEventComplex2Event();

  Test2TestEventComplex2Event(const Test2TestEventComplex2Event& from);
  Test2TestEventComplex2Event(Test2TestEventComplex2Event&& from) noexcept
    : Test2TestEventComplex2Event() {
    *this = ::std::move(from);
  }

  inline Test2TestEventComplex2Event& operator=(const Test2TestEventComplex2Event& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test2TestEventComplex2Event& operator=(Test2TestEventComplex2Event&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test2TestEventComplex2Event& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test2TestEventComplex2Event* internal_default_instance() {
    return reinterpret_cast<const Test2TestEventComplex2Event*>(
               &_Test2TestEventComplex2Event_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(Test2TestEventComplex2Event& a, Test2TestEventComplex2Event& b) {
    a.Swap(&b);
  }
  inline void Swap(Test2TestEventComplex2Event* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test2TestEventComplex2Event* New() const final {
    return CreateMaybeMessage<Test2TestEventComplex2Event>(nullptr);
  }

  Test2TestEventComplex2Event* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test2TestEventComplex2Event>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test2TestEventComplex2Event& from);
  void MergeFrom(const Test2TestEventComplex2Event& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test2TestEventComplex2Event* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test2TestEventComplex2Event";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kObjectIdFieldNumber = 1,
  };
  // .custom.types.TestMessageResponse value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::custom::types::TestMessageResponse& value() const;
  ::custom::types::TestMessageResponse* release_value();
  ::custom::types::TestMessageResponse* mutable_value();
  void set_allocated_value(::custom::types::TestMessageResponse* value);
  private:
  const ::custom::types::TestMessageResponse& _internal_value() const;
  ::custom::types::TestMessageResponse* _internal_mutable_value();
  public:

  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test2TestEventComplex2Event)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::custom::types::TestMessageResponse* value_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test2TestEventNoData2Event :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test2TestEventNoData2Event) */ {
 public:
  Test2TestEventNoData2Event();
  virtual ~Test2TestEventNoData2Event();

  Test2TestEventNoData2Event(const Test2TestEventNoData2Event& from);
  Test2TestEventNoData2Event(Test2TestEventNoData2Event&& from) noexcept
    : Test2TestEventNoData2Event() {
    *this = ::std::move(from);
  }

  inline Test2TestEventNoData2Event& operator=(const Test2TestEventNoData2Event& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test2TestEventNoData2Event& operator=(Test2TestEventNoData2Event&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test2TestEventNoData2Event& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test2TestEventNoData2Event* internal_default_instance() {
    return reinterpret_cast<const Test2TestEventNoData2Event*>(
               &_Test2TestEventNoData2Event_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(Test2TestEventNoData2Event& a, Test2TestEventNoData2Event& b) {
    a.Swap(&b);
  }
  inline void Swap(Test2TestEventNoData2Event* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test2TestEventNoData2Event* New() const final {
    return CreateMaybeMessage<Test2TestEventNoData2Event>(nullptr);
  }

  Test2TestEventNoData2Event* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test2TestEventNoData2Event>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test2TestEventNoData2Event& from);
  void MergeFrom(const Test2TestEventNoData2Event& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test2TestEventNoData2Event* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test2TestEventNoData2Event";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
  };
  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test2TestEventNoData2Event)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test2TestMethod2MethodRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test2TestMethod2MethodRequest) */ {
 public:
  Test2TestMethod2MethodRequest();
  virtual ~Test2TestMethod2MethodRequest();

  Test2TestMethod2MethodRequest(const Test2TestMethod2MethodRequest& from);
  Test2TestMethod2MethodRequest(Test2TestMethod2MethodRequest&& from) noexcept
    : Test2TestMethod2MethodRequest() {
    *this = ::std::move(from);
  }

  inline Test2TestMethod2MethodRequest& operator=(const Test2TestMethod2MethodRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test2TestMethod2MethodRequest& operator=(Test2TestMethod2MethodRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test2TestMethod2MethodRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test2TestMethod2MethodRequest* internal_default_instance() {
    return reinterpret_cast<const Test2TestMethod2MethodRequest*>(
               &_Test2TestMethod2MethodRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(Test2TestMethod2MethodRequest& a, Test2TestMethod2MethodRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(Test2TestMethod2MethodRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test2TestMethod2MethodRequest* New() const final {
    return CreateMaybeMessage<Test2TestMethod2MethodRequest>(nullptr);
  }

  Test2TestMethod2MethodRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test2TestMethod2MethodRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test2TestMethod2MethodRequest& from);
  void MergeFrom(const Test2TestMethod2MethodRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test2TestMethod2MethodRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test2TestMethod2MethodRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kObjectIdFieldNumber = 1,
  };
  // .custom.types.TestMessageRequest value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::custom::types::TestMessageRequest& value() const;
  ::custom::types::TestMessageRequest* release_value();
  ::custom::types::TestMessageRequest* mutable_value();
  void set_allocated_value(::custom::types::TestMessageRequest* value);
  private:
  const ::custom::types::TestMessageRequest& _internal_value() const;
  ::custom::types::TestMessageRequest* _internal_mutable_value();
  public:

  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test2TestMethod2MethodRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::custom::types::TestMessageRequest* value_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test2TestMethod2MethodResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test2TestMethod2MethodResponse) */ {
 public:
  Test2TestMethod2MethodResponse();
  virtual ~Test2TestMethod2MethodResponse();

  Test2TestMethod2MethodResponse(const Test2TestMethod2MethodResponse& from);
  Test2TestMethod2MethodResponse(Test2TestMethod2MethodResponse&& from) noexcept
    : Test2TestMethod2MethodResponse() {
    *this = ::std::move(from);
  }

  inline Test2TestMethod2MethodResponse& operator=(const Test2TestMethod2MethodResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test2TestMethod2MethodResponse& operator=(Test2TestMethod2MethodResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test2TestMethod2MethodResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test2TestMethod2MethodResponse* internal_default_instance() {
    return reinterpret_cast<const Test2TestMethod2MethodResponse*>(
               &_Test2TestMethod2MethodResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(Test2TestMethod2MethodResponse& a, Test2TestMethod2MethodResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(Test2TestMethod2MethodResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test2TestMethod2MethodResponse* New() const final {
    return CreateMaybeMessage<Test2TestMethod2MethodResponse>(nullptr);
  }

  Test2TestMethod2MethodResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test2TestMethod2MethodResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test2TestMethod2MethodResponse& from);
  void MergeFrom(const Test2TestMethod2MethodResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test2TestMethod2MethodResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test2TestMethod2MethodResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // .custom.types.TestMessageResponse value = 1;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::custom::types::TestMessageResponse& value() const;
  ::custom::types::TestMessageResponse* release_value();
  ::custom::types::TestMessageResponse* mutable_value();
  void set_allocated_value(::custom::types::TestMessageResponse* value);
  private:
  const ::custom::types::TestMessageResponse& _internal_value() const;
  ::custom::types::TestMessageResponse* _internal_mutable_value();
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test2TestMethod2MethodResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::custom::types::TestMessageResponse* value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test2TestMethodSync2MethodRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test2TestMethodSync2MethodRequest) */ {
 public:
  Test2TestMethodSync2MethodRequest();
  virtual ~Test2TestMethodSync2MethodRequest();

  Test2TestMethodSync2MethodRequest(const Test2TestMethodSync2MethodRequest& from);
  Test2TestMethodSync2MethodRequest(Test2TestMethodSync2MethodRequest&& from) noexcept
    : Test2TestMethodSync2MethodRequest() {
    *this = ::std::move(from);
  }

  inline Test2TestMethodSync2MethodRequest& operator=(const Test2TestMethodSync2MethodRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test2TestMethodSync2MethodRequest& operator=(Test2TestMethodSync2MethodRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test2TestMethodSync2MethodRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test2TestMethodSync2MethodRequest* internal_default_instance() {
    return reinterpret_cast<const Test2TestMethodSync2MethodRequest*>(
               &_Test2TestMethodSync2MethodRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(Test2TestMethodSync2MethodRequest& a, Test2TestMethodSync2MethodRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(Test2TestMethodSync2MethodRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test2TestMethodSync2MethodRequest* New() const final {
    return CreateMaybeMessage<Test2TestMethodSync2MethodRequest>(nullptr);
  }

  Test2TestMethodSync2MethodRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test2TestMethodSync2MethodRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test2TestMethodSync2MethodRequest& from);
  void MergeFrom(const Test2TestMethodSync2MethodRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test2TestMethodSync2MethodRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test2TestMethodSync2MethodRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kObjectIdFieldNumber = 1,
  };
  // .custom.types.TestMessageRequest value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::custom::types::TestMessageRequest& value() const;
  ::custom::types::TestMessageRequest* release_value();
  ::custom::types::TestMessageRequest* mutable_value();
  void set_allocated_value(::custom::types::TestMessageRequest* value);
  private:
  const ::custom::types::TestMessageRequest& _internal_value() const;
  ::custom::types::TestMessageRequest* _internal_mutable_value();
  public:

  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test2TestMethodSync2MethodRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::custom::types::TestMessageRequest* value_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test2TestMethodSync2MethodResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test2TestMethodSync2MethodResponse) */ {
 public:
  Test2TestMethodSync2MethodResponse();
  virtual ~Test2TestMethodSync2MethodResponse();

  Test2TestMethodSync2MethodResponse(const Test2TestMethodSync2MethodResponse& from);
  Test2TestMethodSync2MethodResponse(Test2TestMethodSync2MethodResponse&& from) noexcept
    : Test2TestMethodSync2MethodResponse() {
    *this = ::std::move(from);
  }

  inline Test2TestMethodSync2MethodResponse& operator=(const Test2TestMethodSync2MethodResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test2TestMethodSync2MethodResponse& operator=(Test2TestMethodSync2MethodResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test2TestMethodSync2MethodResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test2TestMethodSync2MethodResponse* internal_default_instance() {
    return reinterpret_cast<const Test2TestMethodSync2MethodResponse*>(
               &_Test2TestMethodSync2MethodResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(Test2TestMethodSync2MethodResponse& a, Test2TestMethodSync2MethodResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(Test2TestMethodSync2MethodResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test2TestMethodSync2MethodResponse* New() const final {
    return CreateMaybeMessage<Test2TestMethodSync2MethodResponse>(nullptr);
  }

  Test2TestMethodSync2MethodResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test2TestMethodSync2MethodResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test2TestMethodSync2MethodResponse& from);
  void MergeFrom(const Test2TestMethodSync2MethodResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test2TestMethodSync2MethodResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test2TestMethodSync2MethodResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // .custom.types.TestMessageResponse value = 1;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::custom::types::TestMessageResponse& value() const;
  ::custom::types::TestMessageResponse* release_value();
  ::custom::types::TestMessageResponse* mutable_value();
  void set_allocated_value(::custom::types::TestMessageResponse* value);
  private:
  const ::custom::types::TestMessageResponse& _internal_value() const;
  ::custom::types::TestMessageResponse* _internal_mutable_value();
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test2TestMethodSync2MethodResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::custom::types::TestMessageResponse* value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test2TestMethodWithNoResponse2MethodRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test2TestMethodWithNoResponse2MethodRequest) */ {
 public:
  Test2TestMethodWithNoResponse2MethodRequest();
  virtual ~Test2TestMethodWithNoResponse2MethodRequest();

  Test2TestMethodWithNoResponse2MethodRequest(const Test2TestMethodWithNoResponse2MethodRequest& from);
  Test2TestMethodWithNoResponse2MethodRequest(Test2TestMethodWithNoResponse2MethodRequest&& from) noexcept
    : Test2TestMethodWithNoResponse2MethodRequest() {
    *this = ::std::move(from);
  }

  inline Test2TestMethodWithNoResponse2MethodRequest& operator=(const Test2TestMethodWithNoResponse2MethodRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test2TestMethodWithNoResponse2MethodRequest& operator=(Test2TestMethodWithNoResponse2MethodRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test2TestMethodWithNoResponse2MethodRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test2TestMethodWithNoResponse2MethodRequest* internal_default_instance() {
    return reinterpret_cast<const Test2TestMethodWithNoResponse2MethodRequest*>(
               &_Test2TestMethodWithNoResponse2MethodRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(Test2TestMethodWithNoResponse2MethodRequest& a, Test2TestMethodWithNoResponse2MethodRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(Test2TestMethodWithNoResponse2MethodRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test2TestMethodWithNoResponse2MethodRequest* New() const final {
    return CreateMaybeMessage<Test2TestMethodWithNoResponse2MethodRequest>(nullptr);
  }

  Test2TestMethodWithNoResponse2MethodRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test2TestMethodWithNoResponse2MethodRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test2TestMethodWithNoResponse2MethodRequest& from);
  void MergeFrom(const Test2TestMethodWithNoResponse2MethodRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test2TestMethodWithNoResponse2MethodRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test2TestMethodWithNoResponse2MethodRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kObjectIdFieldNumber = 1,
  };
  // .custom.types.TestMessageRequest value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::custom::types::TestMessageRequest& value() const;
  ::custom::types::TestMessageRequest* release_value();
  ::custom::types::TestMessageRequest* mutable_value();
  void set_allocated_value(::custom::types::TestMessageRequest* value);
  private:
  const ::custom::types::TestMessageRequest& _internal_value() const;
  ::custom::types::TestMessageRequest* _internal_mutable_value();
  public:

  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test2TestMethodWithNoResponse2MethodRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::custom::types::TestMessageRequest* value_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test2TestMethodWithNoResponse2MethodResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test2TestMethodWithNoResponse2MethodResponse) */ {
 public:
  Test2TestMethodWithNoResponse2MethodResponse();
  virtual ~Test2TestMethodWithNoResponse2MethodResponse();

  Test2TestMethodWithNoResponse2MethodResponse(const Test2TestMethodWithNoResponse2MethodResponse& from);
  Test2TestMethodWithNoResponse2MethodResponse(Test2TestMethodWithNoResponse2MethodResponse&& from) noexcept
    : Test2TestMethodWithNoResponse2MethodResponse() {
    *this = ::std::move(from);
  }

  inline Test2TestMethodWithNoResponse2MethodResponse& operator=(const Test2TestMethodWithNoResponse2MethodResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test2TestMethodWithNoResponse2MethodResponse& operator=(Test2TestMethodWithNoResponse2MethodResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test2TestMethodWithNoResponse2MethodResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test2TestMethodWithNoResponse2MethodResponse* internal_default_instance() {
    return reinterpret_cast<const Test2TestMethodWithNoResponse2MethodResponse*>(
               &_Test2TestMethodWithNoResponse2MethodResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(Test2TestMethodWithNoResponse2MethodResponse& a, Test2TestMethodWithNoResponse2MethodResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(Test2TestMethodWithNoResponse2MethodResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test2TestMethodWithNoResponse2MethodResponse* New() const final {
    return CreateMaybeMessage<Test2TestMethodWithNoResponse2MethodResponse>(nullptr);
  }

  Test2TestMethodWithNoResponse2MethodResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test2TestMethodWithNoResponse2MethodResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test2TestMethodWithNoResponse2MethodResponse& from);
  void MergeFrom(const Test2TestMethodWithNoResponse2MethodResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test2TestMethodWithNoResponse2MethodResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test2TestMethodWithNoResponse2MethodResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Tests.Test2TestMethodWithNoResponse2MethodResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test2TestMethodNoRequest2MethodRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test2TestMethodNoRequest2MethodRequest) */ {
 public:
  Test2TestMethodNoRequest2MethodRequest();
  virtual ~Test2TestMethodNoRequest2MethodRequest();

  Test2TestMethodNoRequest2MethodRequest(const Test2TestMethodNoRequest2MethodRequest& from);
  Test2TestMethodNoRequest2MethodRequest(Test2TestMethodNoRequest2MethodRequest&& from) noexcept
    : Test2TestMethodNoRequest2MethodRequest() {
    *this = ::std::move(from);
  }

  inline Test2TestMethodNoRequest2MethodRequest& operator=(const Test2TestMethodNoRequest2MethodRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test2TestMethodNoRequest2MethodRequest& operator=(Test2TestMethodNoRequest2MethodRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test2TestMethodNoRequest2MethodRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test2TestMethodNoRequest2MethodRequest* internal_default_instance() {
    return reinterpret_cast<const Test2TestMethodNoRequest2MethodRequest*>(
               &_Test2TestMethodNoRequest2MethodRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(Test2TestMethodNoRequest2MethodRequest& a, Test2TestMethodNoRequest2MethodRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(Test2TestMethodNoRequest2MethodRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test2TestMethodNoRequest2MethodRequest* New() const final {
    return CreateMaybeMessage<Test2TestMethodNoRequest2MethodRequest>(nullptr);
  }

  Test2TestMethodNoRequest2MethodRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test2TestMethodNoRequest2MethodRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test2TestMethodNoRequest2MethodRequest& from);
  void MergeFrom(const Test2TestMethodNoRequest2MethodRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test2TestMethodNoRequest2MethodRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test2TestMethodNoRequest2MethodRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectIdFieldNumber = 1,
  };
  // uint64 objectId = 1;
  void clear_objectid();
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid() const;
  void set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_objectid() const;
  void _internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Tests.Test2TestMethodNoRequest2MethodRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 objectid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// -------------------------------------------------------------------

class Test2TestMethodNoRequest2MethodResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Tests.Test2TestMethodNoRequest2MethodResponse) */ {
 public:
  Test2TestMethodNoRequest2MethodResponse();
  virtual ~Test2TestMethodNoRequest2MethodResponse();

  Test2TestMethodNoRequest2MethodResponse(const Test2TestMethodNoRequest2MethodResponse& from);
  Test2TestMethodNoRequest2MethodResponse(Test2TestMethodNoRequest2MethodResponse&& from) noexcept
    : Test2TestMethodNoRequest2MethodResponse() {
    *this = ::std::move(from);
  }

  inline Test2TestMethodNoRequest2MethodResponse& operator=(const Test2TestMethodNoRequest2MethodResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test2TestMethodNoRequest2MethodResponse& operator=(Test2TestMethodNoRequest2MethodResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Test2TestMethodNoRequest2MethodResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Test2TestMethodNoRequest2MethodResponse* internal_default_instance() {
    return reinterpret_cast<const Test2TestMethodNoRequest2MethodResponse*>(
               &_Test2TestMethodNoRequest2MethodResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(Test2TestMethodNoRequest2MethodResponse& a, Test2TestMethodNoRequest2MethodResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(Test2TestMethodNoRequest2MethodResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Test2TestMethodNoRequest2MethodResponse* New() const final {
    return CreateMaybeMessage<Test2TestMethodNoRequest2MethodResponse>(nullptr);
  }

  Test2TestMethodNoRequest2MethodResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Test2TestMethodNoRequest2MethodResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Test2TestMethodNoRequest2MethodResponse& from);
  void MergeFrom(const Test2TestMethodNoRequest2MethodResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Test2TestMethodNoRequest2MethodResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Tests.Test2TestMethodNoRequest2MethodResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gen_2eproto);
    return ::descriptor_table_gen_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Tests.Test2TestMethodNoRequest2MethodResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gen_2eproto;
};
// ===================================================================

static const int kCreateFieldNumber = 1000;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false >
  create;
static const int kEventListenerFieldNumber = 1001;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false >
  eventListener;
static const int kMethodNameFieldNumber = 1002;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  methodName;
static const int kSyncFieldNumber = 1003;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false >
  sync;
static const int kPropNameFieldNumber = 1004;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  propName;
static const int kPropSetFieldNumber = 1005;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false >
  propSet;
static const int kPropGetFieldNumber = 1006;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false >
  propGet;
static const int kMessageObjectNameFieldNumber = 1000;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  messageObjectName;
static const int kEventNameFieldNumber = 1001;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  eventName;
static const int kForPropFieldNumber = 1002;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  forProp;
static const int kServiceObjectNameFieldNumber = 1000;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::ServiceOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  serviceObjectName;

// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Test1ListenEventStream

// uint64 objectId = 1;
inline void Test1ListenEventStream::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1ListenEventStream::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1ListenEventStream::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test1ListenEventStream.objectId)
  return _internal_objectid();
}
inline void Test1ListenEventStream::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test1ListenEventStream::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test1ListenEventStream.objectId)
}

// -------------------------------------------------------------------

// Test1CreateResponse

// uint64 objectId = 1;
inline void Test1CreateResponse::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1CreateResponse::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1CreateResponse::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test1CreateResponse.objectId)
  return _internal_objectid();
}
inline void Test1CreateResponse::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test1CreateResponse::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test1CreateResponse.objectId)
}

// -------------------------------------------------------------------

// Test1StopRequest

// -------------------------------------------------------------------

// Test1StopResponse

// -------------------------------------------------------------------

// Test1PropStringSetRequest

// uint64 objectId = 1;
inline void Test1PropStringSetRequest::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1PropStringSetRequest::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1PropStringSetRequest::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test1PropStringSetRequest.objectId)
  return _internal_objectid();
}
inline void Test1PropStringSetRequest::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test1PropStringSetRequest::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test1PropStringSetRequest.objectId)
}

// .google.protobuf.StringValue value = 2;
inline bool Test1PropStringSetRequest::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool Test1PropStringSetRequest::has_value() const {
  return _internal_has_value();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& Test1PropStringSetRequest::_internal_value() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue*>(
      &PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& Test1PropStringSetRequest::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test1PropStringSetRequest.value)
  return _internal_value();
}
inline PROTOBUF_NAMESPACE_ID::StringValue* Test1PropStringSetRequest::release_value() {
  // @@protoc_insertion_point(field_release:Tests.Test1PropStringSetRequest.value)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = value_;
  value_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* Test1PropStringSetRequest::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArenaNoVirtual());
    value_ = p;
  }
  return value_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* Test1PropStringSetRequest::mutable_value() {
  // @@protoc_insertion_point(field_mutable:Tests.Test1PropStringSetRequest.value)
  return _internal_mutable_value();
}
inline void Test1PropStringSetRequest::set_allocated_value(PROTOBUF_NAMESPACE_ID::StringValue* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:Tests.Test1PropStringSetRequest.value)
}

// -------------------------------------------------------------------

// Test1PropStringSetResponse

// -------------------------------------------------------------------

// Test1PropStringGetRequest

// uint64 objectId = 1;
inline void Test1PropStringGetRequest::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1PropStringGetRequest::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1PropStringGetRequest::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test1PropStringGetRequest.objectId)
  return _internal_objectid();
}
inline void Test1PropStringGetRequest::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test1PropStringGetRequest::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test1PropStringGetRequest.objectId)
}

// -------------------------------------------------------------------

// Test1PropStringGetResponse

// .google.protobuf.StringValue value = 1;
inline bool Test1PropStringGetResponse::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool Test1PropStringGetResponse::has_value() const {
  return _internal_has_value();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& Test1PropStringGetResponse::_internal_value() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue*>(
      &PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& Test1PropStringGetResponse::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test1PropStringGetResponse.value)
  return _internal_value();
}
inline PROTOBUF_NAMESPACE_ID::StringValue* Test1PropStringGetResponse::release_value() {
  // @@protoc_insertion_point(field_release:Tests.Test1PropStringGetResponse.value)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = value_;
  value_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* Test1PropStringGetResponse::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArenaNoVirtual());
    value_ = p;
  }
  return value_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* Test1PropStringGetResponse::mutable_value() {
  // @@protoc_insertion_point(field_mutable:Tests.Test1PropStringGetResponse.value)
  return _internal_mutable_value();
}
inline void Test1PropStringGetResponse::set_allocated_value(PROTOBUF_NAMESPACE_ID::StringValue* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:Tests.Test1PropStringGetResponse.value)
}

// -------------------------------------------------------------------

// Test1PropStringPropertyChanged

// uint64 objectId = 1;
inline void Test1PropStringPropertyChanged::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1PropStringPropertyChanged::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1PropStringPropertyChanged::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test1PropStringPropertyChanged.objectId)
  return _internal_objectid();
}
inline void Test1PropStringPropertyChanged::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test1PropStringPropertyChanged::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test1PropStringPropertyChanged.objectId)
}

// .google.protobuf.StringValue value = 2;
inline bool Test1PropStringPropertyChanged::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool Test1PropStringPropertyChanged::has_value() const {
  return _internal_has_value();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& Test1PropStringPropertyChanged::_internal_value() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue*>(
      &PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& Test1PropStringPropertyChanged::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test1PropStringPropertyChanged.value)
  return _internal_value();
}
inline PROTOBUF_NAMESPACE_ID::StringValue* Test1PropStringPropertyChanged::release_value() {
  // @@protoc_insertion_point(field_release:Tests.Test1PropStringPropertyChanged.value)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = value_;
  value_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* Test1PropStringPropertyChanged::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArenaNoVirtual());
    value_ = p;
  }
  return value_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* Test1PropStringPropertyChanged::mutable_value() {
  // @@protoc_insertion_point(field_mutable:Tests.Test1PropStringPropertyChanged.value)
  return _internal_mutable_value();
}
inline void Test1PropStringPropertyChanged::set_allocated_value(PROTOBUF_NAMESPACE_ID::StringValue* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:Tests.Test1PropStringPropertyChanged.value)
}

// -------------------------------------------------------------------

// Test1PropComplexSetRequest

// uint64 objectId = 1;
inline void Test1PropComplexSetRequest::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1PropComplexSetRequest::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1PropComplexSetRequest::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test1PropComplexSetRequest.objectId)
  return _internal_objectid();
}
inline void Test1PropComplexSetRequest::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test1PropComplexSetRequest::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test1PropComplexSetRequest.objectId)
}

// .custom.types.TestMessageResponse value = 2;
inline bool Test1PropComplexSetRequest::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool Test1PropComplexSetRequest::has_value() const {
  return _internal_has_value();
}
inline const ::custom::types::TestMessageResponse& Test1PropComplexSetRequest::_internal_value() const {
  const ::custom::types::TestMessageResponse* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const ::custom::types::TestMessageResponse*>(
      &::custom::types::_TestMessageResponse_default_instance_);
}
inline const ::custom::types::TestMessageResponse& Test1PropComplexSetRequest::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test1PropComplexSetRequest.value)
  return _internal_value();
}
inline ::custom::types::TestMessageResponse* Test1PropComplexSetRequest::release_value() {
  // @@protoc_insertion_point(field_release:Tests.Test1PropComplexSetRequest.value)
  
  ::custom::types::TestMessageResponse* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::custom::types::TestMessageResponse* Test1PropComplexSetRequest::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::custom::types::TestMessageResponse>(GetArenaNoVirtual());
    value_ = p;
  }
  return value_;
}
inline ::custom::types::TestMessageResponse* Test1PropComplexSetRequest::mutable_value() {
  // @@protoc_insertion_point(field_mutable:Tests.Test1PropComplexSetRequest.value)
  return _internal_mutable_value();
}
inline void Test1PropComplexSetRequest::set_allocated_value(::custom::types::TestMessageResponse* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:Tests.Test1PropComplexSetRequest.value)
}

// -------------------------------------------------------------------

// Test1PropComplexSetResponse

// -------------------------------------------------------------------

// Test1PropComplexGetRequest

// uint64 objectId = 1;
inline void Test1PropComplexGetRequest::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1PropComplexGetRequest::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1PropComplexGetRequest::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test1PropComplexGetRequest.objectId)
  return _internal_objectid();
}
inline void Test1PropComplexGetRequest::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test1PropComplexGetRequest::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test1PropComplexGetRequest.objectId)
}

// -------------------------------------------------------------------

// Test1PropComplexGetResponse

// .custom.types.TestMessageResponse value = 1;
inline bool Test1PropComplexGetResponse::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool Test1PropComplexGetResponse::has_value() const {
  return _internal_has_value();
}
inline const ::custom::types::TestMessageResponse& Test1PropComplexGetResponse::_internal_value() const {
  const ::custom::types::TestMessageResponse* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const ::custom::types::TestMessageResponse*>(
      &::custom::types::_TestMessageResponse_default_instance_);
}
inline const ::custom::types::TestMessageResponse& Test1PropComplexGetResponse::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test1PropComplexGetResponse.value)
  return _internal_value();
}
inline ::custom::types::TestMessageResponse* Test1PropComplexGetResponse::release_value() {
  // @@protoc_insertion_point(field_release:Tests.Test1PropComplexGetResponse.value)
  
  ::custom::types::TestMessageResponse* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::custom::types::TestMessageResponse* Test1PropComplexGetResponse::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::custom::types::TestMessageResponse>(GetArenaNoVirtual());
    value_ = p;
  }
  return value_;
}
inline ::custom::types::TestMessageResponse* Test1PropComplexGetResponse::mutable_value() {
  // @@protoc_insertion_point(field_mutable:Tests.Test1PropComplexGetResponse.value)
  return _internal_mutable_value();
}
inline void Test1PropComplexGetResponse::set_allocated_value(::custom::types::TestMessageResponse* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:Tests.Test1PropComplexGetResponse.value)
}

// -------------------------------------------------------------------

// Test1PropComplexPropertyChanged

// uint64 objectId = 1;
inline void Test1PropComplexPropertyChanged::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1PropComplexPropertyChanged::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1PropComplexPropertyChanged::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test1PropComplexPropertyChanged.objectId)
  return _internal_objectid();
}
inline void Test1PropComplexPropertyChanged::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test1PropComplexPropertyChanged::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test1PropComplexPropertyChanged.objectId)
}

// .custom.types.TestMessageResponse value = 2;
inline bool Test1PropComplexPropertyChanged::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool Test1PropComplexPropertyChanged::has_value() const {
  return _internal_has_value();
}
inline const ::custom::types::TestMessageResponse& Test1PropComplexPropertyChanged::_internal_value() const {
  const ::custom::types::TestMessageResponse* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const ::custom::types::TestMessageResponse*>(
      &::custom::types::_TestMessageResponse_default_instance_);
}
inline const ::custom::types::TestMessageResponse& Test1PropComplexPropertyChanged::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test1PropComplexPropertyChanged.value)
  return _internal_value();
}
inline ::custom::types::TestMessageResponse* Test1PropComplexPropertyChanged::release_value() {
  // @@protoc_insertion_point(field_release:Tests.Test1PropComplexPropertyChanged.value)
  
  ::custom::types::TestMessageResponse* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::custom::types::TestMessageResponse* Test1PropComplexPropertyChanged::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::custom::types::TestMessageResponse>(GetArenaNoVirtual());
    value_ = p;
  }
  return value_;
}
inline ::custom::types::TestMessageResponse* Test1PropComplexPropertyChanged::mutable_value() {
  // @@protoc_insertion_point(field_mutable:Tests.Test1PropComplexPropertyChanged.value)
  return _internal_mutable_value();
}
inline void Test1PropComplexPropertyChanged::set_allocated_value(::custom::types::TestMessageResponse* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:Tests.Test1PropComplexPropertyChanged.value)
}

// -------------------------------------------------------------------

// Test1TestEventEvent

// uint64 objectId = 1;
inline void Test1TestEventEvent::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1TestEventEvent::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1TestEventEvent::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test1TestEventEvent.objectId)
  return _internal_objectid();
}
inline void Test1TestEventEvent::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test1TestEventEvent::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test1TestEventEvent.objectId)
}

// .google.protobuf.StringValue value = 2;
inline bool Test1TestEventEvent::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool Test1TestEventEvent::has_value() const {
  return _internal_has_value();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& Test1TestEventEvent::_internal_value() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue*>(
      &PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& Test1TestEventEvent::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test1TestEventEvent.value)
  return _internal_value();
}
inline PROTOBUF_NAMESPACE_ID::StringValue* Test1TestEventEvent::release_value() {
  // @@protoc_insertion_point(field_release:Tests.Test1TestEventEvent.value)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = value_;
  value_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* Test1TestEventEvent::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArenaNoVirtual());
    value_ = p;
  }
  return value_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* Test1TestEventEvent::mutable_value() {
  // @@protoc_insertion_point(field_mutable:Tests.Test1TestEventEvent.value)
  return _internal_mutable_value();
}
inline void Test1TestEventEvent::set_allocated_value(PROTOBUF_NAMESPACE_ID::StringValue* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:Tests.Test1TestEventEvent.value)
}

// -------------------------------------------------------------------

// Test1TestEventComplexEvent

// uint64 objectId = 1;
inline void Test1TestEventComplexEvent::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1TestEventComplexEvent::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1TestEventComplexEvent::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test1TestEventComplexEvent.objectId)
  return _internal_objectid();
}
inline void Test1TestEventComplexEvent::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test1TestEventComplexEvent::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test1TestEventComplexEvent.objectId)
}

// .custom.types.TestMessageResponse value = 2;
inline bool Test1TestEventComplexEvent::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool Test1TestEventComplexEvent::has_value() const {
  return _internal_has_value();
}
inline const ::custom::types::TestMessageResponse& Test1TestEventComplexEvent::_internal_value() const {
  const ::custom::types::TestMessageResponse* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const ::custom::types::TestMessageResponse*>(
      &::custom::types::_TestMessageResponse_default_instance_);
}
inline const ::custom::types::TestMessageResponse& Test1TestEventComplexEvent::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test1TestEventComplexEvent.value)
  return _internal_value();
}
inline ::custom::types::TestMessageResponse* Test1TestEventComplexEvent::release_value() {
  // @@protoc_insertion_point(field_release:Tests.Test1TestEventComplexEvent.value)
  
  ::custom::types::TestMessageResponse* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::custom::types::TestMessageResponse* Test1TestEventComplexEvent::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::custom::types::TestMessageResponse>(GetArenaNoVirtual());
    value_ = p;
  }
  return value_;
}
inline ::custom::types::TestMessageResponse* Test1TestEventComplexEvent::mutable_value() {
  // @@protoc_insertion_point(field_mutable:Tests.Test1TestEventComplexEvent.value)
  return _internal_mutable_value();
}
inline void Test1TestEventComplexEvent::set_allocated_value(::custom::types::TestMessageResponse* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:Tests.Test1TestEventComplexEvent.value)
}

// -------------------------------------------------------------------

// Test1TestEventNoDataEvent

// uint64 objectId = 1;
inline void Test1TestEventNoDataEvent::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1TestEventNoDataEvent::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1TestEventNoDataEvent::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test1TestEventNoDataEvent.objectId)
  return _internal_objectid();
}
inline void Test1TestEventNoDataEvent::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test1TestEventNoDataEvent::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test1TestEventNoDataEvent.objectId)
}

// -------------------------------------------------------------------

// Test1TestMethodMethodRequest

// uint64 objectId = 1;
inline void Test1TestMethodMethodRequest::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1TestMethodMethodRequest::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1TestMethodMethodRequest::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test1TestMethodMethodRequest.objectId)
  return _internal_objectid();
}
inline void Test1TestMethodMethodRequest::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test1TestMethodMethodRequest::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test1TestMethodMethodRequest.objectId)
}

// .custom.types.TestMessageRequest value = 2;
inline bool Test1TestMethodMethodRequest::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool Test1TestMethodMethodRequest::has_value() const {
  return _internal_has_value();
}
inline const ::custom::types::TestMessageRequest& Test1TestMethodMethodRequest::_internal_value() const {
  const ::custom::types::TestMessageRequest* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const ::custom::types::TestMessageRequest*>(
      &::custom::types::_TestMessageRequest_default_instance_);
}
inline const ::custom::types::TestMessageRequest& Test1TestMethodMethodRequest::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test1TestMethodMethodRequest.value)
  return _internal_value();
}
inline ::custom::types::TestMessageRequest* Test1TestMethodMethodRequest::release_value() {
  // @@protoc_insertion_point(field_release:Tests.Test1TestMethodMethodRequest.value)
  
  ::custom::types::TestMessageRequest* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::custom::types::TestMessageRequest* Test1TestMethodMethodRequest::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::custom::types::TestMessageRequest>(GetArenaNoVirtual());
    value_ = p;
  }
  return value_;
}
inline ::custom::types::TestMessageRequest* Test1TestMethodMethodRequest::mutable_value() {
  // @@protoc_insertion_point(field_mutable:Tests.Test1TestMethodMethodRequest.value)
  return _internal_mutable_value();
}
inline void Test1TestMethodMethodRequest::set_allocated_value(::custom::types::TestMessageRequest* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:Tests.Test1TestMethodMethodRequest.value)
}

// -------------------------------------------------------------------

// Test1TestMethodMethodResponse

// .custom.types.TestMessageResponse value = 1;
inline bool Test1TestMethodMethodResponse::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool Test1TestMethodMethodResponse::has_value() const {
  return _internal_has_value();
}
inline const ::custom::types::TestMessageResponse& Test1TestMethodMethodResponse::_internal_value() const {
  const ::custom::types::TestMessageResponse* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const ::custom::types::TestMessageResponse*>(
      &::custom::types::_TestMessageResponse_default_instance_);
}
inline const ::custom::types::TestMessageResponse& Test1TestMethodMethodResponse::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test1TestMethodMethodResponse.value)
  return _internal_value();
}
inline ::custom::types::TestMessageResponse* Test1TestMethodMethodResponse::release_value() {
  // @@protoc_insertion_point(field_release:Tests.Test1TestMethodMethodResponse.value)
  
  ::custom::types::TestMessageResponse* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::custom::types::TestMessageResponse* Test1TestMethodMethodResponse::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::custom::types::TestMessageResponse>(GetArenaNoVirtual());
    value_ = p;
  }
  return value_;
}
inline ::custom::types::TestMessageResponse* Test1TestMethodMethodResponse::mutable_value() {
  // @@protoc_insertion_point(field_mutable:Tests.Test1TestMethodMethodResponse.value)
  return _internal_mutable_value();
}
inline void Test1TestMethodMethodResponse::set_allocated_value(::custom::types::TestMessageResponse* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:Tests.Test1TestMethodMethodResponse.value)
}

// -------------------------------------------------------------------

// Test1TestMethodSyncMethodRequest

// uint64 objectId = 1;
inline void Test1TestMethodSyncMethodRequest::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1TestMethodSyncMethodRequest::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1TestMethodSyncMethodRequest::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test1TestMethodSyncMethodRequest.objectId)
  return _internal_objectid();
}
inline void Test1TestMethodSyncMethodRequest::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test1TestMethodSyncMethodRequest::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test1TestMethodSyncMethodRequest.objectId)
}

// .custom.types.TestMessageRequest value = 2;
inline bool Test1TestMethodSyncMethodRequest::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool Test1TestMethodSyncMethodRequest::has_value() const {
  return _internal_has_value();
}
inline const ::custom::types::TestMessageRequest& Test1TestMethodSyncMethodRequest::_internal_value() const {
  const ::custom::types::TestMessageRequest* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const ::custom::types::TestMessageRequest*>(
      &::custom::types::_TestMessageRequest_default_instance_);
}
inline const ::custom::types::TestMessageRequest& Test1TestMethodSyncMethodRequest::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test1TestMethodSyncMethodRequest.value)
  return _internal_value();
}
inline ::custom::types::TestMessageRequest* Test1TestMethodSyncMethodRequest::release_value() {
  // @@protoc_insertion_point(field_release:Tests.Test1TestMethodSyncMethodRequest.value)
  
  ::custom::types::TestMessageRequest* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::custom::types::TestMessageRequest* Test1TestMethodSyncMethodRequest::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::custom::types::TestMessageRequest>(GetArenaNoVirtual());
    value_ = p;
  }
  return value_;
}
inline ::custom::types::TestMessageRequest* Test1TestMethodSyncMethodRequest::mutable_value() {
  // @@protoc_insertion_point(field_mutable:Tests.Test1TestMethodSyncMethodRequest.value)
  return _internal_mutable_value();
}
inline void Test1TestMethodSyncMethodRequest::set_allocated_value(::custom::types::TestMessageRequest* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:Tests.Test1TestMethodSyncMethodRequest.value)
}

// -------------------------------------------------------------------

// Test1TestMethodSyncMethodResponse

// .custom.types.TestMessageResponse value = 1;
inline bool Test1TestMethodSyncMethodResponse::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool Test1TestMethodSyncMethodResponse::has_value() const {
  return _internal_has_value();
}
inline const ::custom::types::TestMessageResponse& Test1TestMethodSyncMethodResponse::_internal_value() const {
  const ::custom::types::TestMessageResponse* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const ::custom::types::TestMessageResponse*>(
      &::custom::types::_TestMessageResponse_default_instance_);
}
inline const ::custom::types::TestMessageResponse& Test1TestMethodSyncMethodResponse::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test1TestMethodSyncMethodResponse.value)
  return _internal_value();
}
inline ::custom::types::TestMessageResponse* Test1TestMethodSyncMethodResponse::release_value() {
  // @@protoc_insertion_point(field_release:Tests.Test1TestMethodSyncMethodResponse.value)
  
  ::custom::types::TestMessageResponse* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::custom::types::TestMessageResponse* Test1TestMethodSyncMethodResponse::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::custom::types::TestMessageResponse>(GetArenaNoVirtual());
    value_ = p;
  }
  return value_;
}
inline ::custom::types::TestMessageResponse* Test1TestMethodSyncMethodResponse::mutable_value() {
  // @@protoc_insertion_point(field_mutable:Tests.Test1TestMethodSyncMethodResponse.value)
  return _internal_mutable_value();
}
inline void Test1TestMethodSyncMethodResponse::set_allocated_value(::custom::types::TestMessageResponse* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:Tests.Test1TestMethodSyncMethodResponse.value)
}

// -------------------------------------------------------------------

// Test1TestMethodWithNoResponseMethodRequest

// uint64 objectId = 1;
inline void Test1TestMethodWithNoResponseMethodRequest::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1TestMethodWithNoResponseMethodRequest::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1TestMethodWithNoResponseMethodRequest::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test1TestMethodWithNoResponseMethodRequest.objectId)
  return _internal_objectid();
}
inline void Test1TestMethodWithNoResponseMethodRequest::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test1TestMethodWithNoResponseMethodRequest::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test1TestMethodWithNoResponseMethodRequest.objectId)
}

// .custom.types.TestMessageRequest value = 2;
inline bool Test1TestMethodWithNoResponseMethodRequest::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool Test1TestMethodWithNoResponseMethodRequest::has_value() const {
  return _internal_has_value();
}
inline const ::custom::types::TestMessageRequest& Test1TestMethodWithNoResponseMethodRequest::_internal_value() const {
  const ::custom::types::TestMessageRequest* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const ::custom::types::TestMessageRequest*>(
      &::custom::types::_TestMessageRequest_default_instance_);
}
inline const ::custom::types::TestMessageRequest& Test1TestMethodWithNoResponseMethodRequest::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test1TestMethodWithNoResponseMethodRequest.value)
  return _internal_value();
}
inline ::custom::types::TestMessageRequest* Test1TestMethodWithNoResponseMethodRequest::release_value() {
  // @@protoc_insertion_point(field_release:Tests.Test1TestMethodWithNoResponseMethodRequest.value)
  
  ::custom::types::TestMessageRequest* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::custom::types::TestMessageRequest* Test1TestMethodWithNoResponseMethodRequest::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::custom::types::TestMessageRequest>(GetArenaNoVirtual());
    value_ = p;
  }
  return value_;
}
inline ::custom::types::TestMessageRequest* Test1TestMethodWithNoResponseMethodRequest::mutable_value() {
  // @@protoc_insertion_point(field_mutable:Tests.Test1TestMethodWithNoResponseMethodRequest.value)
  return _internal_mutable_value();
}
inline void Test1TestMethodWithNoResponseMethodRequest::set_allocated_value(::custom::types::TestMessageRequest* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:Tests.Test1TestMethodWithNoResponseMethodRequest.value)
}

// -------------------------------------------------------------------

// Test1TestMethodWithNoResponseMethodResponse

// -------------------------------------------------------------------

// Test1TestMethodPrimitiveMethodRequest

// uint64 objectId = 1;
inline void Test1TestMethodPrimitiveMethodRequest::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1TestMethodPrimitiveMethodRequest::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1TestMethodPrimitiveMethodRequest::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test1TestMethodPrimitiveMethodRequest.objectId)
  return _internal_objectid();
}
inline void Test1TestMethodPrimitiveMethodRequest::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test1TestMethodPrimitiveMethodRequest::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test1TestMethodPrimitiveMethodRequest.objectId)
}

// int32 value = 2;
inline void Test1TestMethodPrimitiveMethodRequest::clear_value() {
  value_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Test1TestMethodPrimitiveMethodRequest::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Test1TestMethodPrimitiveMethodRequest::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test1TestMethodPrimitiveMethodRequest.value)
  return _internal_value();
}
inline void Test1TestMethodPrimitiveMethodRequest::_internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  value_ = value;
}
inline void Test1TestMethodPrimitiveMethodRequest::set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:Tests.Test1TestMethodPrimitiveMethodRequest.value)
}

// -------------------------------------------------------------------

// Test1TestMethodPrimitiveMethodResponse

// int32 value = 1;
inline void Test1TestMethodPrimitiveMethodResponse::clear_value() {
  value_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Test1TestMethodPrimitiveMethodResponse::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Test1TestMethodPrimitiveMethodResponse::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test1TestMethodPrimitiveMethodResponse.value)
  return _internal_value();
}
inline void Test1TestMethodPrimitiveMethodResponse::_internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  value_ = value;
}
inline void Test1TestMethodPrimitiveMethodResponse::set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:Tests.Test1TestMethodPrimitiveMethodResponse.value)
}

// -------------------------------------------------------------------

// Test1TestMethodNoRequestMethodRequest

// uint64 objectId = 1;
inline void Test1TestMethodNoRequestMethodRequest::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1TestMethodNoRequestMethodRequest::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test1TestMethodNoRequestMethodRequest::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test1TestMethodNoRequestMethodRequest.objectId)
  return _internal_objectid();
}
inline void Test1TestMethodNoRequestMethodRequest::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test1TestMethodNoRequestMethodRequest::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test1TestMethodNoRequestMethodRequest.objectId)
}

// -------------------------------------------------------------------

// Test1TestMethodNoRequestMethodResponse

// -------------------------------------------------------------------

// Test2ListenEventStream

// uint64 objectId = 1;
inline void Test2ListenEventStream::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2ListenEventStream::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2ListenEventStream::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test2ListenEventStream.objectId)
  return _internal_objectid();
}
inline void Test2ListenEventStream::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test2ListenEventStream::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test2ListenEventStream.objectId)
}

// -------------------------------------------------------------------

// Test2CreateResponse

// uint64 objectId = 1;
inline void Test2CreateResponse::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2CreateResponse::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2CreateResponse::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test2CreateResponse.objectId)
  return _internal_objectid();
}
inline void Test2CreateResponse::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test2CreateResponse::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test2CreateResponse.objectId)
}

// -------------------------------------------------------------------

// Test2StopRequest

// -------------------------------------------------------------------

// Test2StopResponse

// -------------------------------------------------------------------

// Test2PropString2SetRequest

// uint64 objectId = 1;
inline void Test2PropString2SetRequest::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2PropString2SetRequest::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2PropString2SetRequest::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test2PropString2SetRequest.objectId)
  return _internal_objectid();
}
inline void Test2PropString2SetRequest::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test2PropString2SetRequest::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test2PropString2SetRequest.objectId)
}

// .google.protobuf.StringValue value = 2;
inline bool Test2PropString2SetRequest::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool Test2PropString2SetRequest::has_value() const {
  return _internal_has_value();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& Test2PropString2SetRequest::_internal_value() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue*>(
      &PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& Test2PropString2SetRequest::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test2PropString2SetRequest.value)
  return _internal_value();
}
inline PROTOBUF_NAMESPACE_ID::StringValue* Test2PropString2SetRequest::release_value() {
  // @@protoc_insertion_point(field_release:Tests.Test2PropString2SetRequest.value)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = value_;
  value_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* Test2PropString2SetRequest::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArenaNoVirtual());
    value_ = p;
  }
  return value_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* Test2PropString2SetRequest::mutable_value() {
  // @@protoc_insertion_point(field_mutable:Tests.Test2PropString2SetRequest.value)
  return _internal_mutable_value();
}
inline void Test2PropString2SetRequest::set_allocated_value(PROTOBUF_NAMESPACE_ID::StringValue* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:Tests.Test2PropString2SetRequest.value)
}

// -------------------------------------------------------------------

// Test2PropString2SetResponse

// -------------------------------------------------------------------

// Test2PropString2GetRequest

// uint64 objectId = 1;
inline void Test2PropString2GetRequest::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2PropString2GetRequest::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2PropString2GetRequest::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test2PropString2GetRequest.objectId)
  return _internal_objectid();
}
inline void Test2PropString2GetRequest::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test2PropString2GetRequest::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test2PropString2GetRequest.objectId)
}

// -------------------------------------------------------------------

// Test2PropString2GetResponse

// .google.protobuf.StringValue value = 1;
inline bool Test2PropString2GetResponse::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool Test2PropString2GetResponse::has_value() const {
  return _internal_has_value();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& Test2PropString2GetResponse::_internal_value() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue*>(
      &PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& Test2PropString2GetResponse::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test2PropString2GetResponse.value)
  return _internal_value();
}
inline PROTOBUF_NAMESPACE_ID::StringValue* Test2PropString2GetResponse::release_value() {
  // @@protoc_insertion_point(field_release:Tests.Test2PropString2GetResponse.value)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = value_;
  value_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* Test2PropString2GetResponse::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArenaNoVirtual());
    value_ = p;
  }
  return value_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* Test2PropString2GetResponse::mutable_value() {
  // @@protoc_insertion_point(field_mutable:Tests.Test2PropString2GetResponse.value)
  return _internal_mutable_value();
}
inline void Test2PropString2GetResponse::set_allocated_value(PROTOBUF_NAMESPACE_ID::StringValue* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:Tests.Test2PropString2GetResponse.value)
}

// -------------------------------------------------------------------

// Test2PropString2PropertyChanged

// uint64 objectId = 1;
inline void Test2PropString2PropertyChanged::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2PropString2PropertyChanged::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2PropString2PropertyChanged::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test2PropString2PropertyChanged.objectId)
  return _internal_objectid();
}
inline void Test2PropString2PropertyChanged::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test2PropString2PropertyChanged::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test2PropString2PropertyChanged.objectId)
}

// .google.protobuf.StringValue value = 2;
inline bool Test2PropString2PropertyChanged::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool Test2PropString2PropertyChanged::has_value() const {
  return _internal_has_value();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& Test2PropString2PropertyChanged::_internal_value() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue*>(
      &PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& Test2PropString2PropertyChanged::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test2PropString2PropertyChanged.value)
  return _internal_value();
}
inline PROTOBUF_NAMESPACE_ID::StringValue* Test2PropString2PropertyChanged::release_value() {
  // @@protoc_insertion_point(field_release:Tests.Test2PropString2PropertyChanged.value)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = value_;
  value_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* Test2PropString2PropertyChanged::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArenaNoVirtual());
    value_ = p;
  }
  return value_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* Test2PropString2PropertyChanged::mutable_value() {
  // @@protoc_insertion_point(field_mutable:Tests.Test2PropString2PropertyChanged.value)
  return _internal_mutable_value();
}
inline void Test2PropString2PropertyChanged::set_allocated_value(PROTOBUF_NAMESPACE_ID::StringValue* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:Tests.Test2PropString2PropertyChanged.value)
}

// -------------------------------------------------------------------

// Test2PropComplex2SetRequest

// uint64 objectId = 1;
inline void Test2PropComplex2SetRequest::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2PropComplex2SetRequest::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2PropComplex2SetRequest::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test2PropComplex2SetRequest.objectId)
  return _internal_objectid();
}
inline void Test2PropComplex2SetRequest::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test2PropComplex2SetRequest::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test2PropComplex2SetRequest.objectId)
}

// .custom.types.TestMessageResponse value = 2;
inline bool Test2PropComplex2SetRequest::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool Test2PropComplex2SetRequest::has_value() const {
  return _internal_has_value();
}
inline const ::custom::types::TestMessageResponse& Test2PropComplex2SetRequest::_internal_value() const {
  const ::custom::types::TestMessageResponse* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const ::custom::types::TestMessageResponse*>(
      &::custom::types::_TestMessageResponse_default_instance_);
}
inline const ::custom::types::TestMessageResponse& Test2PropComplex2SetRequest::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test2PropComplex2SetRequest.value)
  return _internal_value();
}
inline ::custom::types::TestMessageResponse* Test2PropComplex2SetRequest::release_value() {
  // @@protoc_insertion_point(field_release:Tests.Test2PropComplex2SetRequest.value)
  
  ::custom::types::TestMessageResponse* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::custom::types::TestMessageResponse* Test2PropComplex2SetRequest::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::custom::types::TestMessageResponse>(GetArenaNoVirtual());
    value_ = p;
  }
  return value_;
}
inline ::custom::types::TestMessageResponse* Test2PropComplex2SetRequest::mutable_value() {
  // @@protoc_insertion_point(field_mutable:Tests.Test2PropComplex2SetRequest.value)
  return _internal_mutable_value();
}
inline void Test2PropComplex2SetRequest::set_allocated_value(::custom::types::TestMessageResponse* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:Tests.Test2PropComplex2SetRequest.value)
}

// -------------------------------------------------------------------

// Test2PropComplex2SetResponse

// -------------------------------------------------------------------

// Test2PropComplex2GetRequest

// uint64 objectId = 1;
inline void Test2PropComplex2GetRequest::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2PropComplex2GetRequest::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2PropComplex2GetRequest::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test2PropComplex2GetRequest.objectId)
  return _internal_objectid();
}
inline void Test2PropComplex2GetRequest::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test2PropComplex2GetRequest::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test2PropComplex2GetRequest.objectId)
}

// -------------------------------------------------------------------

// Test2PropComplex2GetResponse

// .custom.types.TestMessageResponse value = 1;
inline bool Test2PropComplex2GetResponse::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool Test2PropComplex2GetResponse::has_value() const {
  return _internal_has_value();
}
inline const ::custom::types::TestMessageResponse& Test2PropComplex2GetResponse::_internal_value() const {
  const ::custom::types::TestMessageResponse* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const ::custom::types::TestMessageResponse*>(
      &::custom::types::_TestMessageResponse_default_instance_);
}
inline const ::custom::types::TestMessageResponse& Test2PropComplex2GetResponse::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test2PropComplex2GetResponse.value)
  return _internal_value();
}
inline ::custom::types::TestMessageResponse* Test2PropComplex2GetResponse::release_value() {
  // @@protoc_insertion_point(field_release:Tests.Test2PropComplex2GetResponse.value)
  
  ::custom::types::TestMessageResponse* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::custom::types::TestMessageResponse* Test2PropComplex2GetResponse::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::custom::types::TestMessageResponse>(GetArenaNoVirtual());
    value_ = p;
  }
  return value_;
}
inline ::custom::types::TestMessageResponse* Test2PropComplex2GetResponse::mutable_value() {
  // @@protoc_insertion_point(field_mutable:Tests.Test2PropComplex2GetResponse.value)
  return _internal_mutable_value();
}
inline void Test2PropComplex2GetResponse::set_allocated_value(::custom::types::TestMessageResponse* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:Tests.Test2PropComplex2GetResponse.value)
}

// -------------------------------------------------------------------

// Test2PropComplex2PropertyChanged

// uint64 objectId = 1;
inline void Test2PropComplex2PropertyChanged::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2PropComplex2PropertyChanged::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2PropComplex2PropertyChanged::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test2PropComplex2PropertyChanged.objectId)
  return _internal_objectid();
}
inline void Test2PropComplex2PropertyChanged::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test2PropComplex2PropertyChanged::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test2PropComplex2PropertyChanged.objectId)
}

// .custom.types.TestMessageResponse value = 2;
inline bool Test2PropComplex2PropertyChanged::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool Test2PropComplex2PropertyChanged::has_value() const {
  return _internal_has_value();
}
inline const ::custom::types::TestMessageResponse& Test2PropComplex2PropertyChanged::_internal_value() const {
  const ::custom::types::TestMessageResponse* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const ::custom::types::TestMessageResponse*>(
      &::custom::types::_TestMessageResponse_default_instance_);
}
inline const ::custom::types::TestMessageResponse& Test2PropComplex2PropertyChanged::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test2PropComplex2PropertyChanged.value)
  return _internal_value();
}
inline ::custom::types::TestMessageResponse* Test2PropComplex2PropertyChanged::release_value() {
  // @@protoc_insertion_point(field_release:Tests.Test2PropComplex2PropertyChanged.value)
  
  ::custom::types::TestMessageResponse* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::custom::types::TestMessageResponse* Test2PropComplex2PropertyChanged::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::custom::types::TestMessageResponse>(GetArenaNoVirtual());
    value_ = p;
  }
  return value_;
}
inline ::custom::types::TestMessageResponse* Test2PropComplex2PropertyChanged::mutable_value() {
  // @@protoc_insertion_point(field_mutable:Tests.Test2PropComplex2PropertyChanged.value)
  return _internal_mutable_value();
}
inline void Test2PropComplex2PropertyChanged::set_allocated_value(::custom::types::TestMessageResponse* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:Tests.Test2PropComplex2PropertyChanged.value)
}

// -------------------------------------------------------------------

// Test2TestEvent2Event

// uint64 objectId = 1;
inline void Test2TestEvent2Event::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2TestEvent2Event::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2TestEvent2Event::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test2TestEvent2Event.objectId)
  return _internal_objectid();
}
inline void Test2TestEvent2Event::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test2TestEvent2Event::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test2TestEvent2Event.objectId)
}

// .google.protobuf.StringValue value = 2;
inline bool Test2TestEvent2Event::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool Test2TestEvent2Event::has_value() const {
  return _internal_has_value();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& Test2TestEvent2Event::_internal_value() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue*>(
      &PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& Test2TestEvent2Event::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test2TestEvent2Event.value)
  return _internal_value();
}
inline PROTOBUF_NAMESPACE_ID::StringValue* Test2TestEvent2Event::release_value() {
  // @@protoc_insertion_point(field_release:Tests.Test2TestEvent2Event.value)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = value_;
  value_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* Test2TestEvent2Event::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArenaNoVirtual());
    value_ = p;
  }
  return value_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* Test2TestEvent2Event::mutable_value() {
  // @@protoc_insertion_point(field_mutable:Tests.Test2TestEvent2Event.value)
  return _internal_mutable_value();
}
inline void Test2TestEvent2Event::set_allocated_value(PROTOBUF_NAMESPACE_ID::StringValue* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:Tests.Test2TestEvent2Event.value)
}

// -------------------------------------------------------------------

// Test2TestEventComplex2Event

// uint64 objectId = 1;
inline void Test2TestEventComplex2Event::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2TestEventComplex2Event::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2TestEventComplex2Event::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test2TestEventComplex2Event.objectId)
  return _internal_objectid();
}
inline void Test2TestEventComplex2Event::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test2TestEventComplex2Event::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test2TestEventComplex2Event.objectId)
}

// .custom.types.TestMessageResponse value = 2;
inline bool Test2TestEventComplex2Event::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool Test2TestEventComplex2Event::has_value() const {
  return _internal_has_value();
}
inline const ::custom::types::TestMessageResponse& Test2TestEventComplex2Event::_internal_value() const {
  const ::custom::types::TestMessageResponse* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const ::custom::types::TestMessageResponse*>(
      &::custom::types::_TestMessageResponse_default_instance_);
}
inline const ::custom::types::TestMessageResponse& Test2TestEventComplex2Event::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test2TestEventComplex2Event.value)
  return _internal_value();
}
inline ::custom::types::TestMessageResponse* Test2TestEventComplex2Event::release_value() {
  // @@protoc_insertion_point(field_release:Tests.Test2TestEventComplex2Event.value)
  
  ::custom::types::TestMessageResponse* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::custom::types::TestMessageResponse* Test2TestEventComplex2Event::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::custom::types::TestMessageResponse>(GetArenaNoVirtual());
    value_ = p;
  }
  return value_;
}
inline ::custom::types::TestMessageResponse* Test2TestEventComplex2Event::mutable_value() {
  // @@protoc_insertion_point(field_mutable:Tests.Test2TestEventComplex2Event.value)
  return _internal_mutable_value();
}
inline void Test2TestEventComplex2Event::set_allocated_value(::custom::types::TestMessageResponse* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:Tests.Test2TestEventComplex2Event.value)
}

// -------------------------------------------------------------------

// Test2TestEventNoData2Event

// uint64 objectId = 1;
inline void Test2TestEventNoData2Event::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2TestEventNoData2Event::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2TestEventNoData2Event::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test2TestEventNoData2Event.objectId)
  return _internal_objectid();
}
inline void Test2TestEventNoData2Event::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test2TestEventNoData2Event::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test2TestEventNoData2Event.objectId)
}

// -------------------------------------------------------------------

// Test2TestMethod2MethodRequest

// uint64 objectId = 1;
inline void Test2TestMethod2MethodRequest::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2TestMethod2MethodRequest::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2TestMethod2MethodRequest::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test2TestMethod2MethodRequest.objectId)
  return _internal_objectid();
}
inline void Test2TestMethod2MethodRequest::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test2TestMethod2MethodRequest::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test2TestMethod2MethodRequest.objectId)
}

// .custom.types.TestMessageRequest value = 2;
inline bool Test2TestMethod2MethodRequest::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool Test2TestMethod2MethodRequest::has_value() const {
  return _internal_has_value();
}
inline const ::custom::types::TestMessageRequest& Test2TestMethod2MethodRequest::_internal_value() const {
  const ::custom::types::TestMessageRequest* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const ::custom::types::TestMessageRequest*>(
      &::custom::types::_TestMessageRequest_default_instance_);
}
inline const ::custom::types::TestMessageRequest& Test2TestMethod2MethodRequest::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test2TestMethod2MethodRequest.value)
  return _internal_value();
}
inline ::custom::types::TestMessageRequest* Test2TestMethod2MethodRequest::release_value() {
  // @@protoc_insertion_point(field_release:Tests.Test2TestMethod2MethodRequest.value)
  
  ::custom::types::TestMessageRequest* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::custom::types::TestMessageRequest* Test2TestMethod2MethodRequest::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::custom::types::TestMessageRequest>(GetArenaNoVirtual());
    value_ = p;
  }
  return value_;
}
inline ::custom::types::TestMessageRequest* Test2TestMethod2MethodRequest::mutable_value() {
  // @@protoc_insertion_point(field_mutable:Tests.Test2TestMethod2MethodRequest.value)
  return _internal_mutable_value();
}
inline void Test2TestMethod2MethodRequest::set_allocated_value(::custom::types::TestMessageRequest* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:Tests.Test2TestMethod2MethodRequest.value)
}

// -------------------------------------------------------------------

// Test2TestMethod2MethodResponse

// .custom.types.TestMessageResponse value = 1;
inline bool Test2TestMethod2MethodResponse::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool Test2TestMethod2MethodResponse::has_value() const {
  return _internal_has_value();
}
inline const ::custom::types::TestMessageResponse& Test2TestMethod2MethodResponse::_internal_value() const {
  const ::custom::types::TestMessageResponse* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const ::custom::types::TestMessageResponse*>(
      &::custom::types::_TestMessageResponse_default_instance_);
}
inline const ::custom::types::TestMessageResponse& Test2TestMethod2MethodResponse::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test2TestMethod2MethodResponse.value)
  return _internal_value();
}
inline ::custom::types::TestMessageResponse* Test2TestMethod2MethodResponse::release_value() {
  // @@protoc_insertion_point(field_release:Tests.Test2TestMethod2MethodResponse.value)
  
  ::custom::types::TestMessageResponse* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::custom::types::TestMessageResponse* Test2TestMethod2MethodResponse::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::custom::types::TestMessageResponse>(GetArenaNoVirtual());
    value_ = p;
  }
  return value_;
}
inline ::custom::types::TestMessageResponse* Test2TestMethod2MethodResponse::mutable_value() {
  // @@protoc_insertion_point(field_mutable:Tests.Test2TestMethod2MethodResponse.value)
  return _internal_mutable_value();
}
inline void Test2TestMethod2MethodResponse::set_allocated_value(::custom::types::TestMessageResponse* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:Tests.Test2TestMethod2MethodResponse.value)
}

// -------------------------------------------------------------------

// Test2TestMethodSync2MethodRequest

// uint64 objectId = 1;
inline void Test2TestMethodSync2MethodRequest::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2TestMethodSync2MethodRequest::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2TestMethodSync2MethodRequest::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test2TestMethodSync2MethodRequest.objectId)
  return _internal_objectid();
}
inline void Test2TestMethodSync2MethodRequest::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test2TestMethodSync2MethodRequest::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test2TestMethodSync2MethodRequest.objectId)
}

// .custom.types.TestMessageRequest value = 2;
inline bool Test2TestMethodSync2MethodRequest::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool Test2TestMethodSync2MethodRequest::has_value() const {
  return _internal_has_value();
}
inline const ::custom::types::TestMessageRequest& Test2TestMethodSync2MethodRequest::_internal_value() const {
  const ::custom::types::TestMessageRequest* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const ::custom::types::TestMessageRequest*>(
      &::custom::types::_TestMessageRequest_default_instance_);
}
inline const ::custom::types::TestMessageRequest& Test2TestMethodSync2MethodRequest::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test2TestMethodSync2MethodRequest.value)
  return _internal_value();
}
inline ::custom::types::TestMessageRequest* Test2TestMethodSync2MethodRequest::release_value() {
  // @@protoc_insertion_point(field_release:Tests.Test2TestMethodSync2MethodRequest.value)
  
  ::custom::types::TestMessageRequest* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::custom::types::TestMessageRequest* Test2TestMethodSync2MethodRequest::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::custom::types::TestMessageRequest>(GetArenaNoVirtual());
    value_ = p;
  }
  return value_;
}
inline ::custom::types::TestMessageRequest* Test2TestMethodSync2MethodRequest::mutable_value() {
  // @@protoc_insertion_point(field_mutable:Tests.Test2TestMethodSync2MethodRequest.value)
  return _internal_mutable_value();
}
inline void Test2TestMethodSync2MethodRequest::set_allocated_value(::custom::types::TestMessageRequest* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:Tests.Test2TestMethodSync2MethodRequest.value)
}

// -------------------------------------------------------------------

// Test2TestMethodSync2MethodResponse

// .custom.types.TestMessageResponse value = 1;
inline bool Test2TestMethodSync2MethodResponse::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool Test2TestMethodSync2MethodResponse::has_value() const {
  return _internal_has_value();
}
inline const ::custom::types::TestMessageResponse& Test2TestMethodSync2MethodResponse::_internal_value() const {
  const ::custom::types::TestMessageResponse* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const ::custom::types::TestMessageResponse*>(
      &::custom::types::_TestMessageResponse_default_instance_);
}
inline const ::custom::types::TestMessageResponse& Test2TestMethodSync2MethodResponse::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test2TestMethodSync2MethodResponse.value)
  return _internal_value();
}
inline ::custom::types::TestMessageResponse* Test2TestMethodSync2MethodResponse::release_value() {
  // @@protoc_insertion_point(field_release:Tests.Test2TestMethodSync2MethodResponse.value)
  
  ::custom::types::TestMessageResponse* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::custom::types::TestMessageResponse* Test2TestMethodSync2MethodResponse::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::custom::types::TestMessageResponse>(GetArenaNoVirtual());
    value_ = p;
  }
  return value_;
}
inline ::custom::types::TestMessageResponse* Test2TestMethodSync2MethodResponse::mutable_value() {
  // @@protoc_insertion_point(field_mutable:Tests.Test2TestMethodSync2MethodResponse.value)
  return _internal_mutable_value();
}
inline void Test2TestMethodSync2MethodResponse::set_allocated_value(::custom::types::TestMessageResponse* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:Tests.Test2TestMethodSync2MethodResponse.value)
}

// -------------------------------------------------------------------

// Test2TestMethodWithNoResponse2MethodRequest

// uint64 objectId = 1;
inline void Test2TestMethodWithNoResponse2MethodRequest::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2TestMethodWithNoResponse2MethodRequest::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2TestMethodWithNoResponse2MethodRequest::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test2TestMethodWithNoResponse2MethodRequest.objectId)
  return _internal_objectid();
}
inline void Test2TestMethodWithNoResponse2MethodRequest::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test2TestMethodWithNoResponse2MethodRequest::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test2TestMethodWithNoResponse2MethodRequest.objectId)
}

// .custom.types.TestMessageRequest value = 2;
inline bool Test2TestMethodWithNoResponse2MethodRequest::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool Test2TestMethodWithNoResponse2MethodRequest::has_value() const {
  return _internal_has_value();
}
inline const ::custom::types::TestMessageRequest& Test2TestMethodWithNoResponse2MethodRequest::_internal_value() const {
  const ::custom::types::TestMessageRequest* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const ::custom::types::TestMessageRequest*>(
      &::custom::types::_TestMessageRequest_default_instance_);
}
inline const ::custom::types::TestMessageRequest& Test2TestMethodWithNoResponse2MethodRequest::value() const {
  // @@protoc_insertion_point(field_get:Tests.Test2TestMethodWithNoResponse2MethodRequest.value)
  return _internal_value();
}
inline ::custom::types::TestMessageRequest* Test2TestMethodWithNoResponse2MethodRequest::release_value() {
  // @@protoc_insertion_point(field_release:Tests.Test2TestMethodWithNoResponse2MethodRequest.value)
  
  ::custom::types::TestMessageRequest* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::custom::types::TestMessageRequest* Test2TestMethodWithNoResponse2MethodRequest::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::custom::types::TestMessageRequest>(GetArenaNoVirtual());
    value_ = p;
  }
  return value_;
}
inline ::custom::types::TestMessageRequest* Test2TestMethodWithNoResponse2MethodRequest::mutable_value() {
  // @@protoc_insertion_point(field_mutable:Tests.Test2TestMethodWithNoResponse2MethodRequest.value)
  return _internal_mutable_value();
}
inline void Test2TestMethodWithNoResponse2MethodRequest::set_allocated_value(::custom::types::TestMessageRequest* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:Tests.Test2TestMethodWithNoResponse2MethodRequest.value)
}

// -------------------------------------------------------------------

// Test2TestMethodWithNoResponse2MethodResponse

// -------------------------------------------------------------------

// Test2TestMethodNoRequest2MethodRequest

// uint64 objectId = 1;
inline void Test2TestMethodNoRequest2MethodRequest::clear_objectid() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2TestMethodNoRequest2MethodRequest::_internal_objectid() const {
  return objectid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Test2TestMethodNoRequest2MethodRequest::objectid() const {
  // @@protoc_insertion_point(field_get:Tests.Test2TestMethodNoRequest2MethodRequest.objectId)
  return _internal_objectid();
}
inline void Test2TestMethodNoRequest2MethodRequest::_internal_set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  objectid_ = value;
}
inline void Test2TestMethodNoRequest2MethodRequest::set_objectid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_objectid(value);
  // @@protoc_insertion_point(field_set:Tests.Test2TestMethodNoRequest2MethodRequest.objectId)
}

// -------------------------------------------------------------------

// Test2TestMethodNoRequest2MethodResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Tests

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_gen_2eproto
