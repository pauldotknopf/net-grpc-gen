// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gen.proto

#include "gen.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_types_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestMessageRequest_types_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_types_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestMessageResponse_types_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto;
namespace Tests {
class Test1ListenEventStreamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1ListenEventStream> _instance;
} _Test1ListenEventStream_default_instance_;
class Test1CreateResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1CreateResponse> _instance;
} _Test1CreateResponse_default_instance_;
class Test1StopRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1StopRequest> _instance;
} _Test1StopRequest_default_instance_;
class Test1StopResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1StopResponse> _instance;
} _Test1StopResponse_default_instance_;
class Test1PropStringSetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1PropStringSetRequest> _instance;
} _Test1PropStringSetRequest_default_instance_;
class Test1PropStringSetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1PropStringSetResponse> _instance;
} _Test1PropStringSetResponse_default_instance_;
class Test1PropStringGetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1PropStringGetRequest> _instance;
} _Test1PropStringGetRequest_default_instance_;
class Test1PropStringGetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1PropStringGetResponse> _instance;
} _Test1PropStringGetResponse_default_instance_;
class Test1PropStringPropertyChangedDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1PropStringPropertyChanged> _instance;
} _Test1PropStringPropertyChanged_default_instance_;
class Test1PropComplexSetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1PropComplexSetRequest> _instance;
} _Test1PropComplexSetRequest_default_instance_;
class Test1PropComplexSetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1PropComplexSetResponse> _instance;
} _Test1PropComplexSetResponse_default_instance_;
class Test1PropComplexGetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1PropComplexGetRequest> _instance;
} _Test1PropComplexGetRequest_default_instance_;
class Test1PropComplexGetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1PropComplexGetResponse> _instance;
} _Test1PropComplexGetResponse_default_instance_;
class Test1PropComplexPropertyChangedDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1PropComplexPropertyChanged> _instance;
} _Test1PropComplexPropertyChanged_default_instance_;
class Test1TestEventEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestEventEvent> _instance;
} _Test1TestEventEvent_default_instance_;
class Test1TestEventComplexEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestEventComplexEvent> _instance;
} _Test1TestEventComplexEvent_default_instance_;
class Test1TestEventNoDataEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestEventNoDataEvent> _instance;
} _Test1TestEventNoDataEvent_default_instance_;
class Test1TestMethodMethodRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestMethodMethodRequest> _instance;
} _Test1TestMethodMethodRequest_default_instance_;
class Test1TestMethodMethodResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestMethodMethodResponse> _instance;
} _Test1TestMethodMethodResponse_default_instance_;
class Test1TestMethodSyncMethodRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestMethodSyncMethodRequest> _instance;
} _Test1TestMethodSyncMethodRequest_default_instance_;
class Test1TestMethodSyncMethodResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestMethodSyncMethodResponse> _instance;
} _Test1TestMethodSyncMethodResponse_default_instance_;
class Test1TestMethodWithNoResponseMethodRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestMethodWithNoResponseMethodRequest> _instance;
} _Test1TestMethodWithNoResponseMethodRequest_default_instance_;
class Test1TestMethodWithNoResponseMethodResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestMethodWithNoResponseMethodResponse> _instance;
} _Test1TestMethodWithNoResponseMethodResponse_default_instance_;
class Test1TestMethodNoRequestMethodRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestMethodNoRequestMethodRequest> _instance;
} _Test1TestMethodNoRequestMethodRequest_default_instance_;
class Test1TestMethodNoRequestMethodResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Test1TestMethodNoRequestMethodResponse> _instance;
} _Test1TestMethodNoRequestMethodResponse_default_instance_;
}  // namespace Tests
static void InitDefaultsscc_info_Test1CreateResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1CreateResponse_default_instance_;
    new (ptr) ::Tests::Test1CreateResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1CreateResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1CreateResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1CreateResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test1ListenEventStream_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1ListenEventStream_default_instance_;
    new (ptr) ::Tests::Test1ListenEventStream();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1ListenEventStream::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1ListenEventStream_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1ListenEventStream_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test1PropComplexGetRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1PropComplexGetRequest_default_instance_;
    new (ptr) ::Tests::Test1PropComplexGetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1PropComplexGetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1PropComplexGetRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1PropComplexGetRequest_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test1PropComplexGetResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1PropComplexGetResponse_default_instance_;
    new (ptr) ::Tests::Test1PropComplexGetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1PropComplexGetResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test1PropComplexGetResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test1PropComplexGetResponse_gen_2eproto}, {
      &scc_info_TestMessageResponse_types_2eproto.base,}};

static void InitDefaultsscc_info_Test1PropComplexPropertyChanged_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1PropComplexPropertyChanged_default_instance_;
    new (ptr) ::Tests::Test1PropComplexPropertyChanged();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1PropComplexPropertyChanged::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test1PropComplexPropertyChanged_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test1PropComplexPropertyChanged_gen_2eproto}, {
      &scc_info_TestMessageResponse_types_2eproto.base,}};

static void InitDefaultsscc_info_Test1PropComplexSetRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1PropComplexSetRequest_default_instance_;
    new (ptr) ::Tests::Test1PropComplexSetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1PropComplexSetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test1PropComplexSetRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test1PropComplexSetRequest_gen_2eproto}, {
      &scc_info_TestMessageResponse_types_2eproto.base,}};

static void InitDefaultsscc_info_Test1PropComplexSetResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1PropComplexSetResponse_default_instance_;
    new (ptr) ::Tests::Test1PropComplexSetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1PropComplexSetResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1PropComplexSetResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1PropComplexSetResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test1PropStringGetRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1PropStringGetRequest_default_instance_;
    new (ptr) ::Tests::Test1PropStringGetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1PropStringGetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1PropStringGetRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1PropStringGetRequest_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test1PropStringGetResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1PropStringGetResponse_default_instance_;
    new (ptr) ::Tests::Test1PropStringGetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1PropStringGetResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test1PropStringGetResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test1PropStringGetResponse_gen_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_Test1PropStringPropertyChanged_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1PropStringPropertyChanged_default_instance_;
    new (ptr) ::Tests::Test1PropStringPropertyChanged();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1PropStringPropertyChanged::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test1PropStringPropertyChanged_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test1PropStringPropertyChanged_gen_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_Test1PropStringSetRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1PropStringSetRequest_default_instance_;
    new (ptr) ::Tests::Test1PropStringSetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1PropStringSetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test1PropStringSetRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test1PropStringSetRequest_gen_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_Test1PropStringSetResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1PropStringSetResponse_default_instance_;
    new (ptr) ::Tests::Test1PropStringSetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1PropStringSetResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1PropStringSetResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1PropStringSetResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test1StopRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1StopRequest_default_instance_;
    new (ptr) ::Tests::Test1StopRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1StopRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1StopRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1StopRequest_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test1StopResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1StopResponse_default_instance_;
    new (ptr) ::Tests::Test1StopResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1StopResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1StopResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1StopResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test1TestEventComplexEvent_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestEventComplexEvent_default_instance_;
    new (ptr) ::Tests::Test1TestEventComplexEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestEventComplexEvent::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test1TestEventComplexEvent_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test1TestEventComplexEvent_gen_2eproto}, {
      &scc_info_TestMessageResponse_types_2eproto.base,}};

static void InitDefaultsscc_info_Test1TestEventEvent_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestEventEvent_default_instance_;
    new (ptr) ::Tests::Test1TestEventEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestEventEvent::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test1TestEventEvent_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test1TestEventEvent_gen_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_Test1TestEventNoDataEvent_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestEventNoDataEvent_default_instance_;
    new (ptr) ::Tests::Test1TestEventNoDataEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestEventNoDataEvent::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1TestEventNoDataEvent_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1TestEventNoDataEvent_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test1TestMethodMethodRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestMethodMethodRequest_default_instance_;
    new (ptr) ::Tests::Test1TestMethodMethodRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestMethodMethodRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test1TestMethodMethodRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test1TestMethodMethodRequest_gen_2eproto}, {
      &scc_info_TestMessageRequest_types_2eproto.base,}};

static void InitDefaultsscc_info_Test1TestMethodMethodResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestMethodMethodResponse_default_instance_;
    new (ptr) ::Tests::Test1TestMethodMethodResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestMethodMethodResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test1TestMethodMethodResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test1TestMethodMethodResponse_gen_2eproto}, {
      &scc_info_TestMessageResponse_types_2eproto.base,}};

static void InitDefaultsscc_info_Test1TestMethodNoRequestMethodRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestMethodNoRequestMethodRequest_default_instance_;
    new (ptr) ::Tests::Test1TestMethodNoRequestMethodRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestMethodNoRequestMethodRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1TestMethodNoRequestMethodRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1TestMethodNoRequestMethodRequest_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test1TestMethodNoRequestMethodResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestMethodNoRequestMethodResponse_default_instance_;
    new (ptr) ::Tests::Test1TestMethodNoRequestMethodResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestMethodNoRequestMethodResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1TestMethodNoRequestMethodResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1TestMethodNoRequestMethodResponse_gen_2eproto}, {}};

static void InitDefaultsscc_info_Test1TestMethodSyncMethodRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestMethodSyncMethodRequest_default_instance_;
    new (ptr) ::Tests::Test1TestMethodSyncMethodRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestMethodSyncMethodRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test1TestMethodSyncMethodRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test1TestMethodSyncMethodRequest_gen_2eproto}, {
      &scc_info_TestMessageRequest_types_2eproto.base,}};

static void InitDefaultsscc_info_Test1TestMethodSyncMethodResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestMethodSyncMethodResponse_default_instance_;
    new (ptr) ::Tests::Test1TestMethodSyncMethodResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestMethodSyncMethodResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test1TestMethodSyncMethodResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test1TestMethodSyncMethodResponse_gen_2eproto}, {
      &scc_info_TestMessageResponse_types_2eproto.base,}};

static void InitDefaultsscc_info_Test1TestMethodWithNoResponseMethodRequest_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestMethodWithNoResponseMethodRequest_default_instance_;
    new (ptr) ::Tests::Test1TestMethodWithNoResponseMethodRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestMethodWithNoResponseMethodRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Test1TestMethodWithNoResponseMethodRequest_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Test1TestMethodWithNoResponseMethodRequest_gen_2eproto}, {
      &scc_info_TestMessageRequest_types_2eproto.base,}};

static void InitDefaultsscc_info_Test1TestMethodWithNoResponseMethodResponse_gen_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Tests::_Test1TestMethodWithNoResponseMethodResponse_default_instance_;
    new (ptr) ::Tests::Test1TestMethodWithNoResponseMethodResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Tests::Test1TestMethodWithNoResponseMethodResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Test1TestMethodWithNoResponseMethodResponse_gen_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Test1TestMethodWithNoResponseMethodResponse_gen_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_gen_2eproto[25];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_gen_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_gen_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_gen_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1ListenEventStream, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1ListenEventStream, objectid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1CreateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1CreateResponse, objectid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1StopRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1StopResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropStringSetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropStringSetRequest, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropStringSetRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropStringSetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropStringGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropStringGetRequest, objectid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropStringGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropStringGetResponse, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropStringPropertyChanged, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropStringPropertyChanged, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropStringPropertyChanged, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropComplexSetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropComplexSetRequest, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropComplexSetRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropComplexSetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropComplexGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropComplexGetRequest, objectid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropComplexGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropComplexGetResponse, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropComplexPropertyChanged, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropComplexPropertyChanged, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test1PropComplexPropertyChanged, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestEventEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestEventEvent, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestEventEvent, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestEventComplexEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestEventComplexEvent, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestEventComplexEvent, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestEventNoDataEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestEventNoDataEvent, objectid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodMethodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodMethodRequest, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodMethodRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodMethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodMethodResponse, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodSyncMethodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodSyncMethodRequest, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodSyncMethodRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodSyncMethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodSyncMethodResponse, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodWithNoResponseMethodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodWithNoResponseMethodRequest, objectid_),
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodWithNoResponseMethodRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodWithNoResponseMethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodNoRequestMethodRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodNoRequestMethodRequest, objectid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Tests::Test1TestMethodNoRequestMethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Tests::Test1ListenEventStream)},
  { 6, -1, sizeof(::Tests::Test1CreateResponse)},
  { 12, -1, sizeof(::Tests::Test1StopRequest)},
  { 17, -1, sizeof(::Tests::Test1StopResponse)},
  { 22, -1, sizeof(::Tests::Test1PropStringSetRequest)},
  { 29, -1, sizeof(::Tests::Test1PropStringSetResponse)},
  { 34, -1, sizeof(::Tests::Test1PropStringGetRequest)},
  { 40, -1, sizeof(::Tests::Test1PropStringGetResponse)},
  { 46, -1, sizeof(::Tests::Test1PropStringPropertyChanged)},
  { 53, -1, sizeof(::Tests::Test1PropComplexSetRequest)},
  { 60, -1, sizeof(::Tests::Test1PropComplexSetResponse)},
  { 65, -1, sizeof(::Tests::Test1PropComplexGetRequest)},
  { 71, -1, sizeof(::Tests::Test1PropComplexGetResponse)},
  { 77, -1, sizeof(::Tests::Test1PropComplexPropertyChanged)},
  { 84, -1, sizeof(::Tests::Test1TestEventEvent)},
  { 91, -1, sizeof(::Tests::Test1TestEventComplexEvent)},
  { 98, -1, sizeof(::Tests::Test1TestEventNoDataEvent)},
  { 104, -1, sizeof(::Tests::Test1TestMethodMethodRequest)},
  { 111, -1, sizeof(::Tests::Test1TestMethodMethodResponse)},
  { 117, -1, sizeof(::Tests::Test1TestMethodSyncMethodRequest)},
  { 124, -1, sizeof(::Tests::Test1TestMethodSyncMethodResponse)},
  { 130, -1, sizeof(::Tests::Test1TestMethodWithNoResponseMethodRequest)},
  { 137, -1, sizeof(::Tests::Test1TestMethodWithNoResponseMethodResponse)},
  { 142, -1, sizeof(::Tests::Test1TestMethodNoRequestMethodRequest)},
  { 148, -1, sizeof(::Tests::Test1TestMethodNoRequestMethodResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1ListenEventStream_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1CreateResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1StopRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1StopResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1PropStringSetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1PropStringSetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1PropStringGetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1PropStringGetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1PropStringPropertyChanged_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1PropComplexSetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1PropComplexSetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1PropComplexGetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1PropComplexGetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1PropComplexPropertyChanged_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestEventEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestEventComplexEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestEventNoDataEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestMethodMethodRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestMethodMethodResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestMethodSyncMethodRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestMethodSyncMethodResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestMethodWithNoResponseMethodRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestMethodWithNoResponseMethodResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestMethodNoRequestMethodRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Tests::_Test1TestMethodNoRequestMethodResponse_default_instance_),
};

const char descriptor_table_protodef_gen_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\tgen.proto\022\005Tests\032\031google/protobuf/any."
  "proto\032 google/protobuf/descriptor.proto\032"
  "\036google/protobuf/wrappers.proto\032\013types.p"
  "roto\"*\n\026Test1ListenEventStream\022\020\n\010object"
  "Id\030\001 \001(\004\"\'\n\023Test1CreateResponse\022\020\n\010objec"
  "tId\030\001 \001(\004\"\022\n\020Test1StopRequest\"\023\n\021Test1St"
  "opResponse\"Z\n\031Test1PropStringSetRequest\022"
  "\020\n\010objectId\030\001 \001(\004\022+\n\005value\030\002 \001(\0132\034.googl"
  "e.protobuf.StringValue\"\034\n\032Test1PropStrin"
  "gSetResponse\"-\n\031Test1PropStringGetReques"
  "t\022\020\n\010objectId\030\001 \001(\004\"I\n\032Test1PropStringGe"
  "tResponse\022+\n\005value\030\001 \001(\0132\034.google.protob"
  "uf.StringValue\"n\n\036Test1PropStringPropert"
  "yChanged\022\020\n\010objectId\030\001 \001(\004\022+\n\005value\030\002 \001("
  "\0132\034.google.protobuf.StringValue:\r\312>\nProp"
  "String\"`\n\032Test1PropComplexSetRequest\022\020\n\010"
  "objectId\030\001 \001(\004\0220\n\005value\030\002 \001(\0132!.custom.t"
  "ypes.TestMessageResponse\"\035\n\033Test1PropCom"
  "plexSetResponse\".\n\032Test1PropComplexGetRe"
  "quest\022\020\n\010objectId\030\001 \001(\004\"O\n\033Test1PropComp"
  "lexGetResponse\0220\n\005value\030\001 \001(\0132!.custom.t"
  "ypes.TestMessageResponse\"u\n\037Test1PropCom"
  "plexPropertyChanged\022\020\n\010objectId\030\001 \001(\004\0220\n"
  "\005value\030\002 \001(\0132!.custom.types.TestMessageR"
  "esponse:\016\312>\013PropComplex\"b\n\023Test1TestEven"
  "tEvent\022\020\n\010objectId\030\001 \001(\004\022+\n\005value\030\002 \001(\0132"
  "\034.google.protobuf.StringValue:\014\312>\tTestEv"
  "ent\"u\n\032Test1TestEventComplexEvent\022\020\n\010obj"
  "ectId\030\001 \001(\004\0220\n\005value\030\002 \001(\0132!.custom.type"
  "s.TestMessageResponse:\023\312>\020TestEventCompl"
  "ex\"A\n\031Test1TestEventNoDataEvent\022\020\n\010objec"
  "tId\030\001 \001(\004:\022\312>\017TestEventNoData\"a\n\034Test1Te"
  "stMethodMethodRequest\022\020\n\010objectId\030\001 \001(\004\022"
  "/\n\005value\030\002 \001(\0132 .custom.types.TestMessag"
  "eRequest\"Q\n\035Test1TestMethodMethodRespons"
  "e\0220\n\005value\030\001 \001(\0132!.custom.types.TestMess"
  "ageResponse\"e\n Test1TestMethodSyncMethod"
  "Request\022\020\n\010objectId\030\001 \001(\004\022/\n\005value\030\002 \001(\013"
  "2 .custom.types.TestMessageRequest\"U\n!Te"
  "st1TestMethodSyncMethodResponse\0220\n\005value"
  "\030\001 \001(\0132!.custom.types.TestMessageRespons"
  "e\"o\n*Test1TestMethodWithNoResponseMethod"
  "Request\022\020\n\010objectId\030\001 \001(\004\022/\n\005value\030\002 \001(\013"
  "2 .custom.types.TestMessageRequest\"-\n+Te"
  "st1TestMethodWithNoResponseMethodRespons"
  "e\"9\n%Test1TestMethodNoRequestMethodReque"
  "st\022\020\n\010objectId\030\001 \001(\004\"(\n&Test1TestMethodN"
  "oRequestMethodResponse2\210\t\n\022Test1ObjectSe"
  "rvice\022=\n\006Create\022\024.google.protobuf.Any\032\024."
  "google.protobuf.Any\"\003\300>\001(\0010\001\022J\n\014ListenEv"
  "ents\022\035.Tests.Test1ListenEventStream\032\024.go"
  "ogle.protobuf.Any\"\003\310>\0010\001\022f\n\nTestMethod\022#"
  ".Tests.Test1TestMethodMethodRequest\032$.Te"
  "sts.Test1TestMethodMethodResponse\"\r\322>\nTe"
  "stMethod\022y\n\016TestMethodSync\022\'.Tests.Test1"
  "TestMethodSyncMethodRequest\032(.Tests.Test"
  "1TestMethodSyncMethodResponse\"\024\322>\016TestMe"
  "thodSync\330>\001\022\241\001\n\030TestMethodWithNoResponse"
  "\0221.Tests.Test1TestMethodWithNoResponseMe"
  "thodRequest\0322.Tests.Test1TestMethodWithN"
  "oResponseMethodResponse\"\036\322>\030TestMethodWi"
  "thNoResponse\330>\001\022\215\001\n\023TestMethodNoRequest\022"
  ",.Tests.Test1TestMethodNoRequestMethodRe"
  "quest\032-.Tests.Test1TestMethodNoRequestMe"
  "thodResponse\"\031\322>\023TestMethodNoRequest\330>\001\022"
  "n\n\025SetPropertyPropString\022 .Tests.Test1Pr"
  "opStringSetRequest\032!.Tests.Test1PropStri"
  "ngSetResponse\"\020\342>\nPropString\350>\001\022n\n\025GetPr"
  "opertyPropString\022 .Tests.Test1PropString"
  "GetRequest\032!.Tests.Test1PropStringGetRes"
  "ponse\"\020\342>\nPropString\360>\001\022r\n\026SetPropertyPr"
  "opComplex\022!.Tests.Test1PropComplexSetReq"
  "uest\032\".Tests.Test1PropComplexSetResponse"
  "\"\021\342>\013PropComplex\350>\001\022r\n\026GetPropertyPropCo"
  "mplex\022!.Tests.Test1PropComplexGetRequest"
  "\032\".Tests.Test1PropComplexGetResponse\"\021\342>"
  "\013PropComplex\360>\001\032\010\302>\005Test1:/\n\006create\022\036.go"
  "ogle.protobuf.MethodOptions\030\350\007 \001(\010:6\n\rev"
  "entListener\022\036.google.protobuf.MethodOpti"
  "ons\030\351\007 \001(\010:3\n\nmethodName\022\036.google.protob"
  "uf.MethodOptions\030\352\007 \001(\t:-\n\004sync\022\036.google"
  ".protobuf.MethodOptions\030\353\007 \001(\010:1\n\010propNa"
  "me\022\036.google.protobuf.MethodOptions\030\354\007 \001("
  "\t:0\n\007propSet\022\036.google.protobuf.MethodOpt"
  "ions\030\355\007 \001(\010:0\n\007propGet\022\036.google.protobuf"
  ".MethodOptions\030\356\007 \001(\010:;\n\021messageObjectNa"
  "me\022\037.google.protobuf.MessageOptions\030\350\007 \001"
  "(\t:3\n\teventName\022\037.google.protobuf.Messag"
  "eOptions\030\351\007 \001(\t:;\n\021serviceObjectName\022\037.g"
  "oogle.protobuf.ServiceOptions\030\350\007 \001(\tb\006pr"
  "oto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_gen_2eproto_deps[4] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
  &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
  &::descriptor_table_types_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_gen_2eproto_sccs[25] = {
  &scc_info_Test1CreateResponse_gen_2eproto.base,
  &scc_info_Test1ListenEventStream_gen_2eproto.base,
  &scc_info_Test1PropComplexGetRequest_gen_2eproto.base,
  &scc_info_Test1PropComplexGetResponse_gen_2eproto.base,
  &scc_info_Test1PropComplexPropertyChanged_gen_2eproto.base,
  &scc_info_Test1PropComplexSetRequest_gen_2eproto.base,
  &scc_info_Test1PropComplexSetResponse_gen_2eproto.base,
  &scc_info_Test1PropStringGetRequest_gen_2eproto.base,
  &scc_info_Test1PropStringGetResponse_gen_2eproto.base,
  &scc_info_Test1PropStringPropertyChanged_gen_2eproto.base,
  &scc_info_Test1PropStringSetRequest_gen_2eproto.base,
  &scc_info_Test1PropStringSetResponse_gen_2eproto.base,
  &scc_info_Test1StopRequest_gen_2eproto.base,
  &scc_info_Test1StopResponse_gen_2eproto.base,
  &scc_info_Test1TestEventComplexEvent_gen_2eproto.base,
  &scc_info_Test1TestEventEvent_gen_2eproto.base,
  &scc_info_Test1TestEventNoDataEvent_gen_2eproto.base,
  &scc_info_Test1TestMethodMethodRequest_gen_2eproto.base,
  &scc_info_Test1TestMethodMethodResponse_gen_2eproto.base,
  &scc_info_Test1TestMethodNoRequestMethodRequest_gen_2eproto.base,
  &scc_info_Test1TestMethodNoRequestMethodResponse_gen_2eproto.base,
  &scc_info_Test1TestMethodSyncMethodRequest_gen_2eproto.base,
  &scc_info_Test1TestMethodSyncMethodResponse_gen_2eproto.base,
  &scc_info_Test1TestMethodWithNoResponseMethodRequest_gen_2eproto.base,
  &scc_info_Test1TestMethodWithNoResponseMethodResponse_gen_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_gen_2eproto_once;
static bool descriptor_table_gen_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_gen_2eproto = {
  &descriptor_table_gen_2eproto_initialized, descriptor_table_protodef_gen_2eproto, "gen.proto", 3604,
  &descriptor_table_gen_2eproto_once, descriptor_table_gen_2eproto_sccs, descriptor_table_gen_2eproto_deps, 25, 4,
  schemas, file_default_instances, TableStruct_gen_2eproto::offsets,
  file_level_metadata_gen_2eproto, 25, file_level_enum_descriptors_gen_2eproto, file_level_service_descriptors_gen_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_gen_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_gen_2eproto), true);
namespace Tests {

// ===================================================================

void Test1ListenEventStream::InitAsDefaultInstance() {
}
class Test1ListenEventStream::_Internal {
 public:
};

Test1ListenEventStream::Test1ListenEventStream()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1ListenEventStream)
}
Test1ListenEventStream::Test1ListenEventStream(const Test1ListenEventStream& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1ListenEventStream)
}

void Test1ListenEventStream::SharedCtor() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}

Test1ListenEventStream::~Test1ListenEventStream() {
  // @@protoc_insertion_point(destructor:Tests.Test1ListenEventStream)
  SharedDtor();
}

void Test1ListenEventStream::SharedDtor() {
}

void Test1ListenEventStream::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1ListenEventStream& Test1ListenEventStream::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1ListenEventStream_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1ListenEventStream::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1ListenEventStream)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1ListenEventStream::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1ListenEventStream::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1ListenEventStream)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1ListenEventStream)
  return target;
}

size_t Test1ListenEventStream::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1ListenEventStream)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1ListenEventStream::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1ListenEventStream)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1ListenEventStream* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1ListenEventStream>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1ListenEventStream)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1ListenEventStream)
    MergeFrom(*source);
  }
}

void Test1ListenEventStream::MergeFrom(const Test1ListenEventStream& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1ListenEventStream)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1ListenEventStream::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1ListenEventStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1ListenEventStream::CopyFrom(const Test1ListenEventStream& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1ListenEventStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1ListenEventStream::IsInitialized() const {
  return true;
}

void Test1ListenEventStream::InternalSwap(Test1ListenEventStream* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1ListenEventStream::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1CreateResponse::InitAsDefaultInstance() {
}
class Test1CreateResponse::_Internal {
 public:
};

Test1CreateResponse::Test1CreateResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1CreateResponse)
}
Test1CreateResponse::Test1CreateResponse(const Test1CreateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1CreateResponse)
}

void Test1CreateResponse::SharedCtor() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}

Test1CreateResponse::~Test1CreateResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test1CreateResponse)
  SharedDtor();
}

void Test1CreateResponse::SharedDtor() {
}

void Test1CreateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1CreateResponse& Test1CreateResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1CreateResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1CreateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1CreateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1CreateResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1CreateResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1CreateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1CreateResponse)
  return target;
}

size_t Test1CreateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1CreateResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1CreateResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1CreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1CreateResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1CreateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1CreateResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1CreateResponse)
    MergeFrom(*source);
  }
}

void Test1CreateResponse::MergeFrom(const Test1CreateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1CreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1CreateResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1CreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1CreateResponse::CopyFrom(const Test1CreateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1CreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1CreateResponse::IsInitialized() const {
  return true;
}

void Test1CreateResponse::InternalSwap(Test1CreateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1CreateResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1StopRequest::InitAsDefaultInstance() {
}
class Test1StopRequest::_Internal {
 public:
};

Test1StopRequest::Test1StopRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1StopRequest)
}
Test1StopRequest::Test1StopRequest(const Test1StopRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.Test1StopRequest)
}

void Test1StopRequest::SharedCtor() {
}

Test1StopRequest::~Test1StopRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test1StopRequest)
  SharedDtor();
}

void Test1StopRequest::SharedDtor() {
}

void Test1StopRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1StopRequest& Test1StopRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1StopRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1StopRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1StopRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* Test1StopRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1StopRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1StopRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1StopRequest)
  return target;
}

size_t Test1StopRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1StopRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1StopRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1StopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1StopRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1StopRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1StopRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1StopRequest)
    MergeFrom(*source);
  }
}

void Test1StopRequest::MergeFrom(const Test1StopRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1StopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Test1StopRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1StopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1StopRequest::CopyFrom(const Test1StopRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1StopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1StopRequest::IsInitialized() const {
  return true;
}

void Test1StopRequest::InternalSwap(Test1StopRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1StopRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1StopResponse::InitAsDefaultInstance() {
}
class Test1StopResponse::_Internal {
 public:
};

Test1StopResponse::Test1StopResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1StopResponse)
}
Test1StopResponse::Test1StopResponse(const Test1StopResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.Test1StopResponse)
}

void Test1StopResponse::SharedCtor() {
}

Test1StopResponse::~Test1StopResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test1StopResponse)
  SharedDtor();
}

void Test1StopResponse::SharedDtor() {
}

void Test1StopResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1StopResponse& Test1StopResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1StopResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1StopResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1StopResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* Test1StopResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1StopResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1StopResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1StopResponse)
  return target;
}

size_t Test1StopResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1StopResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1StopResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1StopResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1StopResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1StopResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1StopResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1StopResponse)
    MergeFrom(*source);
  }
}

void Test1StopResponse::MergeFrom(const Test1StopResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1StopResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Test1StopResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1StopResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1StopResponse::CopyFrom(const Test1StopResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1StopResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1StopResponse::IsInitialized() const {
  return true;
}

void Test1StopResponse::InternalSwap(Test1StopResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1StopResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1PropStringSetRequest::InitAsDefaultInstance() {
  ::Tests::_Test1PropStringSetRequest_default_instance_._instance.get_mutable()->value_ = const_cast< PROTOBUF_NAMESPACE_ID::StringValue*>(
      PROTOBUF_NAMESPACE_ID::StringValue::internal_default_instance());
}
class Test1PropStringSetRequest::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::StringValue& value(const Test1PropStringSetRequest* msg);
};

const PROTOBUF_NAMESPACE_ID::StringValue&
Test1PropStringSetRequest::_Internal::value(const Test1PropStringSetRequest* msg) {
  return *msg->value_;
}
void Test1PropStringSetRequest::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test1PropStringSetRequest::Test1PropStringSetRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1PropStringSetRequest)
}
Test1PropStringSetRequest::Test1PropStringSetRequest(const Test1PropStringSetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1PropStringSetRequest)
}

void Test1PropStringSetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test1PropStringSetRequest_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

Test1PropStringSetRequest::~Test1PropStringSetRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test1PropStringSetRequest)
  SharedDtor();
}

void Test1PropStringSetRequest::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test1PropStringSetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1PropStringSetRequest& Test1PropStringSetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1PropStringSetRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1PropStringSetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1PropStringSetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1PropStringSetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1PropStringSetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1PropStringSetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .google.protobuf.StringValue value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1PropStringSetRequest)
  return target;
}

size_t Test1PropStringSetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1PropStringSetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.StringValue value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1PropStringSetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1PropStringSetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1PropStringSetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1PropStringSetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1PropStringSetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1PropStringSetRequest)
    MergeFrom(*source);
  }
}

void Test1PropStringSetRequest::MergeFrom(const Test1PropStringSetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1PropStringSetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1PropStringSetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1PropStringSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1PropStringSetRequest::CopyFrom(const Test1PropStringSetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1PropStringSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1PropStringSetRequest::IsInitialized() const {
  return true;
}

void Test1PropStringSetRequest::InternalSwap(Test1PropStringSetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1PropStringSetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1PropStringSetResponse::InitAsDefaultInstance() {
}
class Test1PropStringSetResponse::_Internal {
 public:
};

Test1PropStringSetResponse::Test1PropStringSetResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1PropStringSetResponse)
}
Test1PropStringSetResponse::Test1PropStringSetResponse(const Test1PropStringSetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.Test1PropStringSetResponse)
}

void Test1PropStringSetResponse::SharedCtor() {
}

Test1PropStringSetResponse::~Test1PropStringSetResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test1PropStringSetResponse)
  SharedDtor();
}

void Test1PropStringSetResponse::SharedDtor() {
}

void Test1PropStringSetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1PropStringSetResponse& Test1PropStringSetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1PropStringSetResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1PropStringSetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1PropStringSetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* Test1PropStringSetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1PropStringSetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1PropStringSetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1PropStringSetResponse)
  return target;
}

size_t Test1PropStringSetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1PropStringSetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1PropStringSetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1PropStringSetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1PropStringSetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1PropStringSetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1PropStringSetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1PropStringSetResponse)
    MergeFrom(*source);
  }
}

void Test1PropStringSetResponse::MergeFrom(const Test1PropStringSetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1PropStringSetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Test1PropStringSetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1PropStringSetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1PropStringSetResponse::CopyFrom(const Test1PropStringSetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1PropStringSetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1PropStringSetResponse::IsInitialized() const {
  return true;
}

void Test1PropStringSetResponse::InternalSwap(Test1PropStringSetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1PropStringSetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1PropStringGetRequest::InitAsDefaultInstance() {
}
class Test1PropStringGetRequest::_Internal {
 public:
};

Test1PropStringGetRequest::Test1PropStringGetRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1PropStringGetRequest)
}
Test1PropStringGetRequest::Test1PropStringGetRequest(const Test1PropStringGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1PropStringGetRequest)
}

void Test1PropStringGetRequest::SharedCtor() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}

Test1PropStringGetRequest::~Test1PropStringGetRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test1PropStringGetRequest)
  SharedDtor();
}

void Test1PropStringGetRequest::SharedDtor() {
}

void Test1PropStringGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1PropStringGetRequest& Test1PropStringGetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1PropStringGetRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1PropStringGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1PropStringGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1PropStringGetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1PropStringGetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1PropStringGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1PropStringGetRequest)
  return target;
}

size_t Test1PropStringGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1PropStringGetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1PropStringGetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1PropStringGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1PropStringGetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1PropStringGetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1PropStringGetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1PropStringGetRequest)
    MergeFrom(*source);
  }
}

void Test1PropStringGetRequest::MergeFrom(const Test1PropStringGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1PropStringGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1PropStringGetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1PropStringGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1PropStringGetRequest::CopyFrom(const Test1PropStringGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1PropStringGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1PropStringGetRequest::IsInitialized() const {
  return true;
}

void Test1PropStringGetRequest::InternalSwap(Test1PropStringGetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1PropStringGetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1PropStringGetResponse::InitAsDefaultInstance() {
  ::Tests::_Test1PropStringGetResponse_default_instance_._instance.get_mutable()->value_ = const_cast< PROTOBUF_NAMESPACE_ID::StringValue*>(
      PROTOBUF_NAMESPACE_ID::StringValue::internal_default_instance());
}
class Test1PropStringGetResponse::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::StringValue& value(const Test1PropStringGetResponse* msg);
};

const PROTOBUF_NAMESPACE_ID::StringValue&
Test1PropStringGetResponse::_Internal::value(const Test1PropStringGetResponse* msg) {
  return *msg->value_;
}
void Test1PropStringGetResponse::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test1PropStringGetResponse::Test1PropStringGetResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1PropStringGetResponse)
}
Test1PropStringGetResponse::Test1PropStringGetResponse(const Test1PropStringGetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Tests.Test1PropStringGetResponse)
}

void Test1PropStringGetResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test1PropStringGetResponse_gen_2eproto.base);
  value_ = nullptr;
}

Test1PropStringGetResponse::~Test1PropStringGetResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test1PropStringGetResponse)
  SharedDtor();
}

void Test1PropStringGetResponse::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test1PropStringGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1PropStringGetResponse& Test1PropStringGetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1PropStringGetResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1PropStringGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1PropStringGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  _internal_metadata_.Clear();
}

const char* Test1PropStringGetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.StringValue value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1PropStringGetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1PropStringGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue value = 1;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1PropStringGetResponse)
  return target;
}

size_t Test1PropStringGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1PropStringGetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.StringValue value = 1;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1PropStringGetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1PropStringGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1PropStringGetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1PropStringGetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1PropStringGetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1PropStringGetResponse)
    MergeFrom(*source);
  }
}

void Test1PropStringGetResponse::MergeFrom(const Test1PropStringGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1PropStringGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_value());
  }
}

void Test1PropStringGetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1PropStringGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1PropStringGetResponse::CopyFrom(const Test1PropStringGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1PropStringGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1PropStringGetResponse::IsInitialized() const {
  return true;
}

void Test1PropStringGetResponse::InternalSwap(Test1PropStringGetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1PropStringGetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1PropStringPropertyChanged::InitAsDefaultInstance() {
  ::Tests::_Test1PropStringPropertyChanged_default_instance_._instance.get_mutable()->value_ = const_cast< PROTOBUF_NAMESPACE_ID::StringValue*>(
      PROTOBUF_NAMESPACE_ID::StringValue::internal_default_instance());
}
class Test1PropStringPropertyChanged::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::StringValue& value(const Test1PropStringPropertyChanged* msg);
};

const PROTOBUF_NAMESPACE_ID::StringValue&
Test1PropStringPropertyChanged::_Internal::value(const Test1PropStringPropertyChanged* msg) {
  return *msg->value_;
}
void Test1PropStringPropertyChanged::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test1PropStringPropertyChanged::Test1PropStringPropertyChanged()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1PropStringPropertyChanged)
}
Test1PropStringPropertyChanged::Test1PropStringPropertyChanged(const Test1PropStringPropertyChanged& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1PropStringPropertyChanged)
}

void Test1PropStringPropertyChanged::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test1PropStringPropertyChanged_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

Test1PropStringPropertyChanged::~Test1PropStringPropertyChanged() {
  // @@protoc_insertion_point(destructor:Tests.Test1PropStringPropertyChanged)
  SharedDtor();
}

void Test1PropStringPropertyChanged::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test1PropStringPropertyChanged::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1PropStringPropertyChanged& Test1PropStringPropertyChanged::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1PropStringPropertyChanged_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1PropStringPropertyChanged::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1PropStringPropertyChanged)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1PropStringPropertyChanged::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1PropStringPropertyChanged::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1PropStringPropertyChanged)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .google.protobuf.StringValue value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1PropStringPropertyChanged)
  return target;
}

size_t Test1PropStringPropertyChanged::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1PropStringPropertyChanged)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.StringValue value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1PropStringPropertyChanged::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1PropStringPropertyChanged)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1PropStringPropertyChanged* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1PropStringPropertyChanged>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1PropStringPropertyChanged)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1PropStringPropertyChanged)
    MergeFrom(*source);
  }
}

void Test1PropStringPropertyChanged::MergeFrom(const Test1PropStringPropertyChanged& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1PropStringPropertyChanged)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1PropStringPropertyChanged::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1PropStringPropertyChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1PropStringPropertyChanged::CopyFrom(const Test1PropStringPropertyChanged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1PropStringPropertyChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1PropStringPropertyChanged::IsInitialized() const {
  return true;
}

void Test1PropStringPropertyChanged::InternalSwap(Test1PropStringPropertyChanged* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1PropStringPropertyChanged::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1PropComplexSetRequest::InitAsDefaultInstance() {
  ::Tests::_Test1PropComplexSetRequest_default_instance_._instance.get_mutable()->value_ = const_cast< ::custom::types::TestMessageResponse*>(
      ::custom::types::TestMessageResponse::internal_default_instance());
}
class Test1PropComplexSetRequest::_Internal {
 public:
  static const ::custom::types::TestMessageResponse& value(const Test1PropComplexSetRequest* msg);
};

const ::custom::types::TestMessageResponse&
Test1PropComplexSetRequest::_Internal::value(const Test1PropComplexSetRequest* msg) {
  return *msg->value_;
}
void Test1PropComplexSetRequest::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test1PropComplexSetRequest::Test1PropComplexSetRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1PropComplexSetRequest)
}
Test1PropComplexSetRequest::Test1PropComplexSetRequest(const Test1PropComplexSetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::custom::types::TestMessageResponse(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1PropComplexSetRequest)
}

void Test1PropComplexSetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test1PropComplexSetRequest_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

Test1PropComplexSetRequest::~Test1PropComplexSetRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test1PropComplexSetRequest)
  SharedDtor();
}

void Test1PropComplexSetRequest::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test1PropComplexSetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1PropComplexSetRequest& Test1PropComplexSetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1PropComplexSetRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1PropComplexSetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1PropComplexSetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1PropComplexSetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .custom.types.TestMessageResponse value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1PropComplexSetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1PropComplexSetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .custom.types.TestMessageResponse value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1PropComplexSetRequest)
  return target;
}

size_t Test1PropComplexSetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1PropComplexSetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .custom.types.TestMessageResponse value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1PropComplexSetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1PropComplexSetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1PropComplexSetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1PropComplexSetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1PropComplexSetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1PropComplexSetRequest)
    MergeFrom(*source);
  }
}

void Test1PropComplexSetRequest::MergeFrom(const Test1PropComplexSetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1PropComplexSetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::custom::types::TestMessageResponse::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1PropComplexSetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1PropComplexSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1PropComplexSetRequest::CopyFrom(const Test1PropComplexSetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1PropComplexSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1PropComplexSetRequest::IsInitialized() const {
  return true;
}

void Test1PropComplexSetRequest::InternalSwap(Test1PropComplexSetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1PropComplexSetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1PropComplexSetResponse::InitAsDefaultInstance() {
}
class Test1PropComplexSetResponse::_Internal {
 public:
};

Test1PropComplexSetResponse::Test1PropComplexSetResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1PropComplexSetResponse)
}
Test1PropComplexSetResponse::Test1PropComplexSetResponse(const Test1PropComplexSetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.Test1PropComplexSetResponse)
}

void Test1PropComplexSetResponse::SharedCtor() {
}

Test1PropComplexSetResponse::~Test1PropComplexSetResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test1PropComplexSetResponse)
  SharedDtor();
}

void Test1PropComplexSetResponse::SharedDtor() {
}

void Test1PropComplexSetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1PropComplexSetResponse& Test1PropComplexSetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1PropComplexSetResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1PropComplexSetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1PropComplexSetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* Test1PropComplexSetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1PropComplexSetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1PropComplexSetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1PropComplexSetResponse)
  return target;
}

size_t Test1PropComplexSetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1PropComplexSetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1PropComplexSetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1PropComplexSetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1PropComplexSetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1PropComplexSetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1PropComplexSetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1PropComplexSetResponse)
    MergeFrom(*source);
  }
}

void Test1PropComplexSetResponse::MergeFrom(const Test1PropComplexSetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1PropComplexSetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Test1PropComplexSetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1PropComplexSetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1PropComplexSetResponse::CopyFrom(const Test1PropComplexSetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1PropComplexSetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1PropComplexSetResponse::IsInitialized() const {
  return true;
}

void Test1PropComplexSetResponse::InternalSwap(Test1PropComplexSetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1PropComplexSetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1PropComplexGetRequest::InitAsDefaultInstance() {
}
class Test1PropComplexGetRequest::_Internal {
 public:
};

Test1PropComplexGetRequest::Test1PropComplexGetRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1PropComplexGetRequest)
}
Test1PropComplexGetRequest::Test1PropComplexGetRequest(const Test1PropComplexGetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1PropComplexGetRequest)
}

void Test1PropComplexGetRequest::SharedCtor() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}

Test1PropComplexGetRequest::~Test1PropComplexGetRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test1PropComplexGetRequest)
  SharedDtor();
}

void Test1PropComplexGetRequest::SharedDtor() {
}

void Test1PropComplexGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1PropComplexGetRequest& Test1PropComplexGetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1PropComplexGetRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1PropComplexGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1PropComplexGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1PropComplexGetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1PropComplexGetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1PropComplexGetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1PropComplexGetRequest)
  return target;
}

size_t Test1PropComplexGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1PropComplexGetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1PropComplexGetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1PropComplexGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1PropComplexGetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1PropComplexGetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1PropComplexGetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1PropComplexGetRequest)
    MergeFrom(*source);
  }
}

void Test1PropComplexGetRequest::MergeFrom(const Test1PropComplexGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1PropComplexGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1PropComplexGetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1PropComplexGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1PropComplexGetRequest::CopyFrom(const Test1PropComplexGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1PropComplexGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1PropComplexGetRequest::IsInitialized() const {
  return true;
}

void Test1PropComplexGetRequest::InternalSwap(Test1PropComplexGetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1PropComplexGetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1PropComplexGetResponse::InitAsDefaultInstance() {
  ::Tests::_Test1PropComplexGetResponse_default_instance_._instance.get_mutable()->value_ = const_cast< ::custom::types::TestMessageResponse*>(
      ::custom::types::TestMessageResponse::internal_default_instance());
}
class Test1PropComplexGetResponse::_Internal {
 public:
  static const ::custom::types::TestMessageResponse& value(const Test1PropComplexGetResponse* msg);
};

const ::custom::types::TestMessageResponse&
Test1PropComplexGetResponse::_Internal::value(const Test1PropComplexGetResponse* msg) {
  return *msg->value_;
}
void Test1PropComplexGetResponse::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test1PropComplexGetResponse::Test1PropComplexGetResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1PropComplexGetResponse)
}
Test1PropComplexGetResponse::Test1PropComplexGetResponse(const Test1PropComplexGetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::custom::types::TestMessageResponse(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Tests.Test1PropComplexGetResponse)
}

void Test1PropComplexGetResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test1PropComplexGetResponse_gen_2eproto.base);
  value_ = nullptr;
}

Test1PropComplexGetResponse::~Test1PropComplexGetResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test1PropComplexGetResponse)
  SharedDtor();
}

void Test1PropComplexGetResponse::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test1PropComplexGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1PropComplexGetResponse& Test1PropComplexGetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1PropComplexGetResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1PropComplexGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1PropComplexGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  _internal_metadata_.Clear();
}

const char* Test1PropComplexGetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .custom.types.TestMessageResponse value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1PropComplexGetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1PropComplexGetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .custom.types.TestMessageResponse value = 1;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1PropComplexGetResponse)
  return target;
}

size_t Test1PropComplexGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1PropComplexGetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .custom.types.TestMessageResponse value = 1;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1PropComplexGetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1PropComplexGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1PropComplexGetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1PropComplexGetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1PropComplexGetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1PropComplexGetResponse)
    MergeFrom(*source);
  }
}

void Test1PropComplexGetResponse::MergeFrom(const Test1PropComplexGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1PropComplexGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::custom::types::TestMessageResponse::MergeFrom(from._internal_value());
  }
}

void Test1PropComplexGetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1PropComplexGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1PropComplexGetResponse::CopyFrom(const Test1PropComplexGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1PropComplexGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1PropComplexGetResponse::IsInitialized() const {
  return true;
}

void Test1PropComplexGetResponse::InternalSwap(Test1PropComplexGetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1PropComplexGetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1PropComplexPropertyChanged::InitAsDefaultInstance() {
  ::Tests::_Test1PropComplexPropertyChanged_default_instance_._instance.get_mutable()->value_ = const_cast< ::custom::types::TestMessageResponse*>(
      ::custom::types::TestMessageResponse::internal_default_instance());
}
class Test1PropComplexPropertyChanged::_Internal {
 public:
  static const ::custom::types::TestMessageResponse& value(const Test1PropComplexPropertyChanged* msg);
};

const ::custom::types::TestMessageResponse&
Test1PropComplexPropertyChanged::_Internal::value(const Test1PropComplexPropertyChanged* msg) {
  return *msg->value_;
}
void Test1PropComplexPropertyChanged::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test1PropComplexPropertyChanged::Test1PropComplexPropertyChanged()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1PropComplexPropertyChanged)
}
Test1PropComplexPropertyChanged::Test1PropComplexPropertyChanged(const Test1PropComplexPropertyChanged& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::custom::types::TestMessageResponse(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1PropComplexPropertyChanged)
}

void Test1PropComplexPropertyChanged::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test1PropComplexPropertyChanged_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

Test1PropComplexPropertyChanged::~Test1PropComplexPropertyChanged() {
  // @@protoc_insertion_point(destructor:Tests.Test1PropComplexPropertyChanged)
  SharedDtor();
}

void Test1PropComplexPropertyChanged::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test1PropComplexPropertyChanged::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1PropComplexPropertyChanged& Test1PropComplexPropertyChanged::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1PropComplexPropertyChanged_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1PropComplexPropertyChanged::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1PropComplexPropertyChanged)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1PropComplexPropertyChanged::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .custom.types.TestMessageResponse value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1PropComplexPropertyChanged::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1PropComplexPropertyChanged)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .custom.types.TestMessageResponse value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1PropComplexPropertyChanged)
  return target;
}

size_t Test1PropComplexPropertyChanged::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1PropComplexPropertyChanged)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .custom.types.TestMessageResponse value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1PropComplexPropertyChanged::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1PropComplexPropertyChanged)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1PropComplexPropertyChanged* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1PropComplexPropertyChanged>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1PropComplexPropertyChanged)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1PropComplexPropertyChanged)
    MergeFrom(*source);
  }
}

void Test1PropComplexPropertyChanged::MergeFrom(const Test1PropComplexPropertyChanged& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1PropComplexPropertyChanged)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::custom::types::TestMessageResponse::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1PropComplexPropertyChanged::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1PropComplexPropertyChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1PropComplexPropertyChanged::CopyFrom(const Test1PropComplexPropertyChanged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1PropComplexPropertyChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1PropComplexPropertyChanged::IsInitialized() const {
  return true;
}

void Test1PropComplexPropertyChanged::InternalSwap(Test1PropComplexPropertyChanged* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1PropComplexPropertyChanged::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestEventEvent::InitAsDefaultInstance() {
  ::Tests::_Test1TestEventEvent_default_instance_._instance.get_mutable()->value_ = const_cast< PROTOBUF_NAMESPACE_ID::StringValue*>(
      PROTOBUF_NAMESPACE_ID::StringValue::internal_default_instance());
}
class Test1TestEventEvent::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::StringValue& value(const Test1TestEventEvent* msg);
};

const PROTOBUF_NAMESPACE_ID::StringValue&
Test1TestEventEvent::_Internal::value(const Test1TestEventEvent* msg) {
  return *msg->value_;
}
void Test1TestEventEvent::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test1TestEventEvent::Test1TestEventEvent()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestEventEvent)
}
Test1TestEventEvent::Test1TestEventEvent(const Test1TestEventEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestEventEvent)
}

void Test1TestEventEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test1TestEventEvent_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

Test1TestEventEvent::~Test1TestEventEvent() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestEventEvent)
  SharedDtor();
}

void Test1TestEventEvent::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test1TestEventEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestEventEvent& Test1TestEventEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestEventEvent_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestEventEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestEventEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1TestEventEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestEventEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestEventEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .google.protobuf.StringValue value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestEventEvent)
  return target;
}

size_t Test1TestEventEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestEventEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.StringValue value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestEventEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestEventEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestEventEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestEventEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestEventEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestEventEvent)
    MergeFrom(*source);
  }
}

void Test1TestEventEvent::MergeFrom(const Test1TestEventEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestEventEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1TestEventEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestEventEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestEventEvent::CopyFrom(const Test1TestEventEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestEventEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestEventEvent::IsInitialized() const {
  return true;
}

void Test1TestEventEvent::InternalSwap(Test1TestEventEvent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestEventEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestEventComplexEvent::InitAsDefaultInstance() {
  ::Tests::_Test1TestEventComplexEvent_default_instance_._instance.get_mutable()->value_ = const_cast< ::custom::types::TestMessageResponse*>(
      ::custom::types::TestMessageResponse::internal_default_instance());
}
class Test1TestEventComplexEvent::_Internal {
 public:
  static const ::custom::types::TestMessageResponse& value(const Test1TestEventComplexEvent* msg);
};

const ::custom::types::TestMessageResponse&
Test1TestEventComplexEvent::_Internal::value(const Test1TestEventComplexEvent* msg) {
  return *msg->value_;
}
void Test1TestEventComplexEvent::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test1TestEventComplexEvent::Test1TestEventComplexEvent()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestEventComplexEvent)
}
Test1TestEventComplexEvent::Test1TestEventComplexEvent(const Test1TestEventComplexEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::custom::types::TestMessageResponse(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestEventComplexEvent)
}

void Test1TestEventComplexEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test1TestEventComplexEvent_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

Test1TestEventComplexEvent::~Test1TestEventComplexEvent() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestEventComplexEvent)
  SharedDtor();
}

void Test1TestEventComplexEvent::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test1TestEventComplexEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestEventComplexEvent& Test1TestEventComplexEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestEventComplexEvent_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestEventComplexEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestEventComplexEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1TestEventComplexEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .custom.types.TestMessageResponse value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestEventComplexEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestEventComplexEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .custom.types.TestMessageResponse value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestEventComplexEvent)
  return target;
}

size_t Test1TestEventComplexEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestEventComplexEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .custom.types.TestMessageResponse value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestEventComplexEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestEventComplexEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestEventComplexEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestEventComplexEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestEventComplexEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestEventComplexEvent)
    MergeFrom(*source);
  }
}

void Test1TestEventComplexEvent::MergeFrom(const Test1TestEventComplexEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestEventComplexEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::custom::types::TestMessageResponse::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1TestEventComplexEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestEventComplexEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestEventComplexEvent::CopyFrom(const Test1TestEventComplexEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestEventComplexEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestEventComplexEvent::IsInitialized() const {
  return true;
}

void Test1TestEventComplexEvent::InternalSwap(Test1TestEventComplexEvent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestEventComplexEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestEventNoDataEvent::InitAsDefaultInstance() {
}
class Test1TestEventNoDataEvent::_Internal {
 public:
};

Test1TestEventNoDataEvent::Test1TestEventNoDataEvent()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestEventNoDataEvent)
}
Test1TestEventNoDataEvent::Test1TestEventNoDataEvent(const Test1TestEventNoDataEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestEventNoDataEvent)
}

void Test1TestEventNoDataEvent::SharedCtor() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}

Test1TestEventNoDataEvent::~Test1TestEventNoDataEvent() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestEventNoDataEvent)
  SharedDtor();
}

void Test1TestEventNoDataEvent::SharedDtor() {
}

void Test1TestEventNoDataEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestEventNoDataEvent& Test1TestEventNoDataEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestEventNoDataEvent_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestEventNoDataEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestEventNoDataEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1TestEventNoDataEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestEventNoDataEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestEventNoDataEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestEventNoDataEvent)
  return target;
}

size_t Test1TestEventNoDataEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestEventNoDataEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestEventNoDataEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestEventNoDataEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestEventNoDataEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestEventNoDataEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestEventNoDataEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestEventNoDataEvent)
    MergeFrom(*source);
  }
}

void Test1TestEventNoDataEvent::MergeFrom(const Test1TestEventNoDataEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestEventNoDataEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1TestEventNoDataEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestEventNoDataEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestEventNoDataEvent::CopyFrom(const Test1TestEventNoDataEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestEventNoDataEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestEventNoDataEvent::IsInitialized() const {
  return true;
}

void Test1TestEventNoDataEvent::InternalSwap(Test1TestEventNoDataEvent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestEventNoDataEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestMethodMethodRequest::InitAsDefaultInstance() {
  ::Tests::_Test1TestMethodMethodRequest_default_instance_._instance.get_mutable()->value_ = const_cast< ::custom::types::TestMessageRequest*>(
      ::custom::types::TestMessageRequest::internal_default_instance());
}
class Test1TestMethodMethodRequest::_Internal {
 public:
  static const ::custom::types::TestMessageRequest& value(const Test1TestMethodMethodRequest* msg);
};

const ::custom::types::TestMessageRequest&
Test1TestMethodMethodRequest::_Internal::value(const Test1TestMethodMethodRequest* msg) {
  return *msg->value_;
}
void Test1TestMethodMethodRequest::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test1TestMethodMethodRequest::Test1TestMethodMethodRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestMethodMethodRequest)
}
Test1TestMethodMethodRequest::Test1TestMethodMethodRequest(const Test1TestMethodMethodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::custom::types::TestMessageRequest(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestMethodMethodRequest)
}

void Test1TestMethodMethodRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test1TestMethodMethodRequest_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

Test1TestMethodMethodRequest::~Test1TestMethodMethodRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestMethodMethodRequest)
  SharedDtor();
}

void Test1TestMethodMethodRequest::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test1TestMethodMethodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestMethodMethodRequest& Test1TestMethodMethodRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestMethodMethodRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestMethodMethodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestMethodMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1TestMethodMethodRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .custom.types.TestMessageRequest value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestMethodMethodRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestMethodMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .custom.types.TestMessageRequest value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestMethodMethodRequest)
  return target;
}

size_t Test1TestMethodMethodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestMethodMethodRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .custom.types.TestMessageRequest value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestMethodMethodRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestMethodMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestMethodMethodRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestMethodMethodRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestMethodMethodRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestMethodMethodRequest)
    MergeFrom(*source);
  }
}

void Test1TestMethodMethodRequest::MergeFrom(const Test1TestMethodMethodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestMethodMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::custom::types::TestMessageRequest::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1TestMethodMethodRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestMethodMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestMethodMethodRequest::CopyFrom(const Test1TestMethodMethodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestMethodMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestMethodMethodRequest::IsInitialized() const {
  return true;
}

void Test1TestMethodMethodRequest::InternalSwap(Test1TestMethodMethodRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestMethodMethodRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestMethodMethodResponse::InitAsDefaultInstance() {
  ::Tests::_Test1TestMethodMethodResponse_default_instance_._instance.get_mutable()->value_ = const_cast< ::custom::types::TestMessageResponse*>(
      ::custom::types::TestMessageResponse::internal_default_instance());
}
class Test1TestMethodMethodResponse::_Internal {
 public:
  static const ::custom::types::TestMessageResponse& value(const Test1TestMethodMethodResponse* msg);
};

const ::custom::types::TestMessageResponse&
Test1TestMethodMethodResponse::_Internal::value(const Test1TestMethodMethodResponse* msg) {
  return *msg->value_;
}
void Test1TestMethodMethodResponse::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test1TestMethodMethodResponse::Test1TestMethodMethodResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestMethodMethodResponse)
}
Test1TestMethodMethodResponse::Test1TestMethodMethodResponse(const Test1TestMethodMethodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::custom::types::TestMessageResponse(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestMethodMethodResponse)
}

void Test1TestMethodMethodResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test1TestMethodMethodResponse_gen_2eproto.base);
  value_ = nullptr;
}

Test1TestMethodMethodResponse::~Test1TestMethodMethodResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestMethodMethodResponse)
  SharedDtor();
}

void Test1TestMethodMethodResponse::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test1TestMethodMethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestMethodMethodResponse& Test1TestMethodMethodResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestMethodMethodResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestMethodMethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestMethodMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  _internal_metadata_.Clear();
}

const char* Test1TestMethodMethodResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .custom.types.TestMessageResponse value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestMethodMethodResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestMethodMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .custom.types.TestMessageResponse value = 1;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestMethodMethodResponse)
  return target;
}

size_t Test1TestMethodMethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestMethodMethodResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .custom.types.TestMessageResponse value = 1;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestMethodMethodResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestMethodMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestMethodMethodResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestMethodMethodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestMethodMethodResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestMethodMethodResponse)
    MergeFrom(*source);
  }
}

void Test1TestMethodMethodResponse::MergeFrom(const Test1TestMethodMethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestMethodMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::custom::types::TestMessageResponse::MergeFrom(from._internal_value());
  }
}

void Test1TestMethodMethodResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestMethodMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestMethodMethodResponse::CopyFrom(const Test1TestMethodMethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestMethodMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestMethodMethodResponse::IsInitialized() const {
  return true;
}

void Test1TestMethodMethodResponse::InternalSwap(Test1TestMethodMethodResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestMethodMethodResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestMethodSyncMethodRequest::InitAsDefaultInstance() {
  ::Tests::_Test1TestMethodSyncMethodRequest_default_instance_._instance.get_mutable()->value_ = const_cast< ::custom::types::TestMessageRequest*>(
      ::custom::types::TestMessageRequest::internal_default_instance());
}
class Test1TestMethodSyncMethodRequest::_Internal {
 public:
  static const ::custom::types::TestMessageRequest& value(const Test1TestMethodSyncMethodRequest* msg);
};

const ::custom::types::TestMessageRequest&
Test1TestMethodSyncMethodRequest::_Internal::value(const Test1TestMethodSyncMethodRequest* msg) {
  return *msg->value_;
}
void Test1TestMethodSyncMethodRequest::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test1TestMethodSyncMethodRequest::Test1TestMethodSyncMethodRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestMethodSyncMethodRequest)
}
Test1TestMethodSyncMethodRequest::Test1TestMethodSyncMethodRequest(const Test1TestMethodSyncMethodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::custom::types::TestMessageRequest(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestMethodSyncMethodRequest)
}

void Test1TestMethodSyncMethodRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test1TestMethodSyncMethodRequest_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

Test1TestMethodSyncMethodRequest::~Test1TestMethodSyncMethodRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestMethodSyncMethodRequest)
  SharedDtor();
}

void Test1TestMethodSyncMethodRequest::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test1TestMethodSyncMethodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestMethodSyncMethodRequest& Test1TestMethodSyncMethodRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestMethodSyncMethodRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestMethodSyncMethodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestMethodSyncMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1TestMethodSyncMethodRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .custom.types.TestMessageRequest value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestMethodSyncMethodRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestMethodSyncMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .custom.types.TestMessageRequest value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestMethodSyncMethodRequest)
  return target;
}

size_t Test1TestMethodSyncMethodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestMethodSyncMethodRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .custom.types.TestMessageRequest value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestMethodSyncMethodRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestMethodSyncMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestMethodSyncMethodRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestMethodSyncMethodRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestMethodSyncMethodRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestMethodSyncMethodRequest)
    MergeFrom(*source);
  }
}

void Test1TestMethodSyncMethodRequest::MergeFrom(const Test1TestMethodSyncMethodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestMethodSyncMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::custom::types::TestMessageRequest::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1TestMethodSyncMethodRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestMethodSyncMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestMethodSyncMethodRequest::CopyFrom(const Test1TestMethodSyncMethodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestMethodSyncMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestMethodSyncMethodRequest::IsInitialized() const {
  return true;
}

void Test1TestMethodSyncMethodRequest::InternalSwap(Test1TestMethodSyncMethodRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestMethodSyncMethodRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestMethodSyncMethodResponse::InitAsDefaultInstance() {
  ::Tests::_Test1TestMethodSyncMethodResponse_default_instance_._instance.get_mutable()->value_ = const_cast< ::custom::types::TestMessageResponse*>(
      ::custom::types::TestMessageResponse::internal_default_instance());
}
class Test1TestMethodSyncMethodResponse::_Internal {
 public:
  static const ::custom::types::TestMessageResponse& value(const Test1TestMethodSyncMethodResponse* msg);
};

const ::custom::types::TestMessageResponse&
Test1TestMethodSyncMethodResponse::_Internal::value(const Test1TestMethodSyncMethodResponse* msg) {
  return *msg->value_;
}
void Test1TestMethodSyncMethodResponse::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test1TestMethodSyncMethodResponse::Test1TestMethodSyncMethodResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestMethodSyncMethodResponse)
}
Test1TestMethodSyncMethodResponse::Test1TestMethodSyncMethodResponse(const Test1TestMethodSyncMethodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::custom::types::TestMessageResponse(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestMethodSyncMethodResponse)
}

void Test1TestMethodSyncMethodResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test1TestMethodSyncMethodResponse_gen_2eproto.base);
  value_ = nullptr;
}

Test1TestMethodSyncMethodResponse::~Test1TestMethodSyncMethodResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestMethodSyncMethodResponse)
  SharedDtor();
}

void Test1TestMethodSyncMethodResponse::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test1TestMethodSyncMethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestMethodSyncMethodResponse& Test1TestMethodSyncMethodResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestMethodSyncMethodResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestMethodSyncMethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestMethodSyncMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  _internal_metadata_.Clear();
}

const char* Test1TestMethodSyncMethodResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .custom.types.TestMessageResponse value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestMethodSyncMethodResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestMethodSyncMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .custom.types.TestMessageResponse value = 1;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestMethodSyncMethodResponse)
  return target;
}

size_t Test1TestMethodSyncMethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestMethodSyncMethodResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .custom.types.TestMessageResponse value = 1;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestMethodSyncMethodResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestMethodSyncMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestMethodSyncMethodResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestMethodSyncMethodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestMethodSyncMethodResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestMethodSyncMethodResponse)
    MergeFrom(*source);
  }
}

void Test1TestMethodSyncMethodResponse::MergeFrom(const Test1TestMethodSyncMethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestMethodSyncMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::custom::types::TestMessageResponse::MergeFrom(from._internal_value());
  }
}

void Test1TestMethodSyncMethodResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestMethodSyncMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestMethodSyncMethodResponse::CopyFrom(const Test1TestMethodSyncMethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestMethodSyncMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestMethodSyncMethodResponse::IsInitialized() const {
  return true;
}

void Test1TestMethodSyncMethodResponse::InternalSwap(Test1TestMethodSyncMethodResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestMethodSyncMethodResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestMethodWithNoResponseMethodRequest::InitAsDefaultInstance() {
  ::Tests::_Test1TestMethodWithNoResponseMethodRequest_default_instance_._instance.get_mutable()->value_ = const_cast< ::custom::types::TestMessageRequest*>(
      ::custom::types::TestMessageRequest::internal_default_instance());
}
class Test1TestMethodWithNoResponseMethodRequest::_Internal {
 public:
  static const ::custom::types::TestMessageRequest& value(const Test1TestMethodWithNoResponseMethodRequest* msg);
};

const ::custom::types::TestMessageRequest&
Test1TestMethodWithNoResponseMethodRequest::_Internal::value(const Test1TestMethodWithNoResponseMethodRequest* msg) {
  return *msg->value_;
}
void Test1TestMethodWithNoResponseMethodRequest::clear_value() {
  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
Test1TestMethodWithNoResponseMethodRequest::Test1TestMethodWithNoResponseMethodRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestMethodWithNoResponseMethodRequest)
}
Test1TestMethodWithNoResponseMethodRequest::Test1TestMethodWithNoResponseMethodRequest(const Test1TestMethodWithNoResponseMethodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::custom::types::TestMessageRequest(*from.value_);
  } else {
    value_ = nullptr;
  }
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestMethodWithNoResponseMethodRequest)
}

void Test1TestMethodWithNoResponseMethodRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Test1TestMethodWithNoResponseMethodRequest_gen_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&value_)) + sizeof(objectid_));
}

Test1TestMethodWithNoResponseMethodRequest::~Test1TestMethodWithNoResponseMethodRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestMethodWithNoResponseMethodRequest)
  SharedDtor();
}

void Test1TestMethodWithNoResponseMethodRequest::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Test1TestMethodWithNoResponseMethodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestMethodWithNoResponseMethodRequest& Test1TestMethodWithNoResponseMethodRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestMethodWithNoResponseMethodRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestMethodWithNoResponseMethodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestMethodWithNoResponseMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1TestMethodWithNoResponseMethodRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .custom.types.TestMessageRequest value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestMethodWithNoResponseMethodRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestMethodWithNoResponseMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // .custom.types.TestMessageRequest value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestMethodWithNoResponseMethodRequest)
  return target;
}

size_t Test1TestMethodWithNoResponseMethodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestMethodWithNoResponseMethodRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .custom.types.TestMessageRequest value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestMethodWithNoResponseMethodRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestMethodWithNoResponseMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestMethodWithNoResponseMethodRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestMethodWithNoResponseMethodRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestMethodWithNoResponseMethodRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestMethodWithNoResponseMethodRequest)
    MergeFrom(*source);
  }
}

void Test1TestMethodWithNoResponseMethodRequest::MergeFrom(const Test1TestMethodWithNoResponseMethodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestMethodWithNoResponseMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::custom::types::TestMessageRequest::MergeFrom(from._internal_value());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1TestMethodWithNoResponseMethodRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestMethodWithNoResponseMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestMethodWithNoResponseMethodRequest::CopyFrom(const Test1TestMethodWithNoResponseMethodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestMethodWithNoResponseMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestMethodWithNoResponseMethodRequest::IsInitialized() const {
  return true;
}

void Test1TestMethodWithNoResponseMethodRequest::InternalSwap(Test1TestMethodWithNoResponseMethodRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestMethodWithNoResponseMethodRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestMethodWithNoResponseMethodResponse::InitAsDefaultInstance() {
}
class Test1TestMethodWithNoResponseMethodResponse::_Internal {
 public:
};

Test1TestMethodWithNoResponseMethodResponse::Test1TestMethodWithNoResponseMethodResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestMethodWithNoResponseMethodResponse)
}
Test1TestMethodWithNoResponseMethodResponse::Test1TestMethodWithNoResponseMethodResponse(const Test1TestMethodWithNoResponseMethodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestMethodWithNoResponseMethodResponse)
}

void Test1TestMethodWithNoResponseMethodResponse::SharedCtor() {
}

Test1TestMethodWithNoResponseMethodResponse::~Test1TestMethodWithNoResponseMethodResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestMethodWithNoResponseMethodResponse)
  SharedDtor();
}

void Test1TestMethodWithNoResponseMethodResponse::SharedDtor() {
}

void Test1TestMethodWithNoResponseMethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestMethodWithNoResponseMethodResponse& Test1TestMethodWithNoResponseMethodResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestMethodWithNoResponseMethodResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestMethodWithNoResponseMethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestMethodWithNoResponseMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* Test1TestMethodWithNoResponseMethodResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestMethodWithNoResponseMethodResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestMethodWithNoResponseMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestMethodWithNoResponseMethodResponse)
  return target;
}

size_t Test1TestMethodWithNoResponseMethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestMethodWithNoResponseMethodResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestMethodWithNoResponseMethodResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestMethodWithNoResponseMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestMethodWithNoResponseMethodResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestMethodWithNoResponseMethodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestMethodWithNoResponseMethodResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestMethodWithNoResponseMethodResponse)
    MergeFrom(*source);
  }
}

void Test1TestMethodWithNoResponseMethodResponse::MergeFrom(const Test1TestMethodWithNoResponseMethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestMethodWithNoResponseMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Test1TestMethodWithNoResponseMethodResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestMethodWithNoResponseMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestMethodWithNoResponseMethodResponse::CopyFrom(const Test1TestMethodWithNoResponseMethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestMethodWithNoResponseMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestMethodWithNoResponseMethodResponse::IsInitialized() const {
  return true;
}

void Test1TestMethodWithNoResponseMethodResponse::InternalSwap(Test1TestMethodWithNoResponseMethodResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestMethodWithNoResponseMethodResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestMethodNoRequestMethodRequest::InitAsDefaultInstance() {
}
class Test1TestMethodNoRequestMethodRequest::_Internal {
 public:
};

Test1TestMethodNoRequestMethodRequest::Test1TestMethodNoRequestMethodRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestMethodNoRequestMethodRequest)
}
Test1TestMethodNoRequestMethodRequest::Test1TestMethodNoRequestMethodRequest(const Test1TestMethodNoRequestMethodRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objectid_ = from.objectid_;
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestMethodNoRequestMethodRequest)
}

void Test1TestMethodNoRequestMethodRequest::SharedCtor() {
  objectid_ = PROTOBUF_ULONGLONG(0);
}

Test1TestMethodNoRequestMethodRequest::~Test1TestMethodNoRequestMethodRequest() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestMethodNoRequestMethodRequest)
  SharedDtor();
}

void Test1TestMethodNoRequestMethodRequest::SharedDtor() {
}

void Test1TestMethodNoRequestMethodRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestMethodNoRequestMethodRequest& Test1TestMethodNoRequestMethodRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestMethodNoRequestMethodRequest_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestMethodNoRequestMethodRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestMethodNoRequestMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Test1TestMethodNoRequestMethodRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 objectId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestMethodNoRequestMethodRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestMethodNoRequestMethodRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestMethodNoRequestMethodRequest)
  return target;
}

size_t Test1TestMethodNoRequestMethodRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestMethodNoRequestMethodRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 objectId = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestMethodNoRequestMethodRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestMethodNoRequestMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestMethodNoRequestMethodRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestMethodNoRequestMethodRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestMethodNoRequestMethodRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestMethodNoRequestMethodRequest)
    MergeFrom(*source);
  }
}

void Test1TestMethodNoRequestMethodRequest::MergeFrom(const Test1TestMethodNoRequestMethodRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestMethodNoRequestMethodRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Test1TestMethodNoRequestMethodRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestMethodNoRequestMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestMethodNoRequestMethodRequest::CopyFrom(const Test1TestMethodNoRequestMethodRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestMethodNoRequestMethodRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestMethodNoRequestMethodRequest::IsInitialized() const {
  return true;
}

void Test1TestMethodNoRequestMethodRequest::InternalSwap(Test1TestMethodNoRequestMethodRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestMethodNoRequestMethodRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Test1TestMethodNoRequestMethodResponse::InitAsDefaultInstance() {
}
class Test1TestMethodNoRequestMethodResponse::_Internal {
 public:
};

Test1TestMethodNoRequestMethodResponse::Test1TestMethodNoRequestMethodResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Tests.Test1TestMethodNoRequestMethodResponse)
}
Test1TestMethodNoRequestMethodResponse::Test1TestMethodNoRequestMethodResponse(const Test1TestMethodNoRequestMethodResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Tests.Test1TestMethodNoRequestMethodResponse)
}

void Test1TestMethodNoRequestMethodResponse::SharedCtor() {
}

Test1TestMethodNoRequestMethodResponse::~Test1TestMethodNoRequestMethodResponse() {
  // @@protoc_insertion_point(destructor:Tests.Test1TestMethodNoRequestMethodResponse)
  SharedDtor();
}

void Test1TestMethodNoRequestMethodResponse::SharedDtor() {
}

void Test1TestMethodNoRequestMethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Test1TestMethodNoRequestMethodResponse& Test1TestMethodNoRequestMethodResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Test1TestMethodNoRequestMethodResponse_gen_2eproto.base);
  return *internal_default_instance();
}


void Test1TestMethodNoRequestMethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Tests.Test1TestMethodNoRequestMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* Test1TestMethodNoRequestMethodResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Test1TestMethodNoRequestMethodResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Tests.Test1TestMethodNoRequestMethodResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Tests.Test1TestMethodNoRequestMethodResponse)
  return target;
}

size_t Test1TestMethodNoRequestMethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Tests.Test1TestMethodNoRequestMethodResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Test1TestMethodNoRequestMethodResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Tests.Test1TestMethodNoRequestMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1TestMethodNoRequestMethodResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Test1TestMethodNoRequestMethodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Tests.Test1TestMethodNoRequestMethodResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Tests.Test1TestMethodNoRequestMethodResponse)
    MergeFrom(*source);
  }
}

void Test1TestMethodNoRequestMethodResponse::MergeFrom(const Test1TestMethodNoRequestMethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Tests.Test1TestMethodNoRequestMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Test1TestMethodNoRequestMethodResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Tests.Test1TestMethodNoRequestMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1TestMethodNoRequestMethodResponse::CopyFrom(const Test1TestMethodNoRequestMethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Tests.Test1TestMethodNoRequestMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1TestMethodNoRequestMethodResponse::IsInitialized() const {
  return true;
}

void Test1TestMethodNoRequestMethodResponse::InternalSwap(Test1TestMethodNoRequestMethodResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Test1TestMethodNoRequestMethodResponse::GetMetadata() const {
  return GetMetadataStatic();
}

::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false >
  create(kCreateFieldNumber, false);
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false >
  eventListener(kEventListenerFieldNumber, false);
const std::string methodName_default("");
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  methodName(kMethodNameFieldNumber, methodName_default);
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false >
  sync(kSyncFieldNumber, false);
const std::string propName_default("");
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  propName(kPropNameFieldNumber, propName_default);
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false >
  propSet(kPropSetFieldNumber, false);
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false >
  propGet(kPropGetFieldNumber, false);
const std::string messageObjectName_default("");
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  messageObjectName(kMessageObjectNameFieldNumber, messageObjectName_default);
const std::string eventName_default("");
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  eventName(kEventNameFieldNumber, eventName_default);
const std::string serviceObjectName_default("");
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::ServiceOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  serviceObjectName(kServiceObjectNameFieldNumber, serviceObjectName_default);

// @@protoc_insertion_point(namespace_scope)
}  // namespace Tests
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Tests::Test1ListenEventStream* Arena::CreateMaybeMessage< ::Tests::Test1ListenEventStream >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1ListenEventStream >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1CreateResponse* Arena::CreateMaybeMessage< ::Tests::Test1CreateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1CreateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1StopRequest* Arena::CreateMaybeMessage< ::Tests::Test1StopRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1StopRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1StopResponse* Arena::CreateMaybeMessage< ::Tests::Test1StopResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1StopResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1PropStringSetRequest* Arena::CreateMaybeMessage< ::Tests::Test1PropStringSetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1PropStringSetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1PropStringSetResponse* Arena::CreateMaybeMessage< ::Tests::Test1PropStringSetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1PropStringSetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1PropStringGetRequest* Arena::CreateMaybeMessage< ::Tests::Test1PropStringGetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1PropStringGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1PropStringGetResponse* Arena::CreateMaybeMessage< ::Tests::Test1PropStringGetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1PropStringGetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1PropStringPropertyChanged* Arena::CreateMaybeMessage< ::Tests::Test1PropStringPropertyChanged >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1PropStringPropertyChanged >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1PropComplexSetRequest* Arena::CreateMaybeMessage< ::Tests::Test1PropComplexSetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1PropComplexSetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1PropComplexSetResponse* Arena::CreateMaybeMessage< ::Tests::Test1PropComplexSetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1PropComplexSetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1PropComplexGetRequest* Arena::CreateMaybeMessage< ::Tests::Test1PropComplexGetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1PropComplexGetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1PropComplexGetResponse* Arena::CreateMaybeMessage< ::Tests::Test1PropComplexGetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1PropComplexGetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1PropComplexPropertyChanged* Arena::CreateMaybeMessage< ::Tests::Test1PropComplexPropertyChanged >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1PropComplexPropertyChanged >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestEventEvent* Arena::CreateMaybeMessage< ::Tests::Test1TestEventEvent >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestEventEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestEventComplexEvent* Arena::CreateMaybeMessage< ::Tests::Test1TestEventComplexEvent >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestEventComplexEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestEventNoDataEvent* Arena::CreateMaybeMessage< ::Tests::Test1TestEventNoDataEvent >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestEventNoDataEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestMethodMethodRequest* Arena::CreateMaybeMessage< ::Tests::Test1TestMethodMethodRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestMethodMethodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestMethodMethodResponse* Arena::CreateMaybeMessage< ::Tests::Test1TestMethodMethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestMethodMethodResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestMethodSyncMethodRequest* Arena::CreateMaybeMessage< ::Tests::Test1TestMethodSyncMethodRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestMethodSyncMethodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestMethodSyncMethodResponse* Arena::CreateMaybeMessage< ::Tests::Test1TestMethodSyncMethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestMethodSyncMethodResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestMethodWithNoResponseMethodRequest* Arena::CreateMaybeMessage< ::Tests::Test1TestMethodWithNoResponseMethodRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestMethodWithNoResponseMethodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestMethodWithNoResponseMethodResponse* Arena::CreateMaybeMessage< ::Tests::Test1TestMethodWithNoResponseMethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestMethodWithNoResponseMethodResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestMethodNoRequestMethodRequest* Arena::CreateMaybeMessage< ::Tests::Test1TestMethodNoRequestMethodRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestMethodNoRequestMethodRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Tests::Test1TestMethodNoRequestMethodResponse* Arena::CreateMaybeMessage< ::Tests::Test1TestMethodNoRequestMethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::Tests::Test1TestMethodNoRequestMethodResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
